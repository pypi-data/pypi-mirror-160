# generated by datamodel-codegen:
#   filename:  openapi.json
#   timestamp: 2022-07-21T19:20:51+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import Field

from kelvin.sdk.client.base_model import BaseModelRoot
from kelvin.sdk.client.data_model import DataModelBase


class ACPLocationItem(DataModelBase):
    """
    ACPLocationItem object.

    Parameters
    ----------
    lat: Optional[float]
    lon: Optional[float]

    """

    lat: Optional[float] = None
    lon: Optional[float] = None


class ACPMetadataBulkCreateItem(DataModelBase):
    """
    ACPMetadataBulkCreateItem object.

    Parameters
    ----------
    acp_name: Optional[str]
    name: Optional[str]
    payload: Optional[Dict[str, Any]]

    """

    acp_name: Optional[str] = None
    name: Optional[str] = None
    payload: Optional[Dict[str, Any]] = None


class ACPMetadataBulkDeleteItem(DataModelBase):
    """
    ACPMetadataBulkDeleteItem object.

    Parameters
    ----------
    acp_name: Optional[str]
    name: Optional[str]

    """

    acp_name: Optional[str] = None
    name: Optional[str] = None


class ACPMetadataCreate(DataModelBase):
    """
    ACPMetadataCreate object.

    Parameters
    ----------
    name: Optional[str]
    payload: Optional[Dict[str, Any]]

    """

    name: Optional[str] = Field(None, max_length=64)
    payload: Optional[Dict[str, Any]] = None


class ACPMetadataUpdate(DataModelBase):
    """
    ACPMetadataUpdate object.

    Parameters
    ----------
    payload: Optional[Dict[str, Any]]

    """

    payload: Optional[Dict[str, Any]] = None


class ACPSettingAutoUpdate(DataModelBase):
    """
    ACPSettingAutoUpdate object.

    Parameters
    ----------
    enabled: Optional[bool]
    interval: Optional[int]

    """

    enabled: Optional[bool] = None
    interval: Optional[int] = None


class ACPSettingMetrics(DataModelBase):
    """
    ACPSettingMetrics object.

    Parameters
    ----------
    enabled: Optional[bool]
    interval: Optional[int]

    """

    enabled: Optional[bool] = None
    interval: Optional[int] = None


class ACPSettingSync(DataModelBase):
    """
    ACPSettingSync object.

    Parameters
    ----------
    interval: Optional[int]

    """

    interval: Optional[int] = None


class ACPStatusUpdateValues(DataModelBase):
    """
    ACPStatusUpdateValues object.

    Parameters
    ----------
    message: Optional[str]
    state: Optional[str]
    warnings: Optional[List[str]]

    """

    message: Optional[str] = None
    state: Optional[str] = None
    warnings: Optional[List[str]] = None


class ACPUpdate(DataModelBase):
    """
    ACPUpdate object.

    Parameters
    ----------
    location: Optional[ACPLocationItem]
    manifests_scrape_enabled: Optional[bool]
    manifests_scrape_interval: Optional[int]
    metrics_enabled: Optional[bool]
    metrics_scrape_interval: Optional[int]
    status_scrape_enabled: Optional[bool]
    status_scrape_interval: Optional[int]
    sync_scrape_interval: Optional[int]
    title: Optional[str]

    """

    location: Optional[ACPLocationItem] = None
    manifests_scrape_enabled: Optional[bool] = None
    manifests_scrape_interval: Optional[int] = None
    metrics_enabled: Optional[bool] = None
    metrics_scrape_interval: Optional[int] = None
    status_scrape_enabled: Optional[bool] = None
    status_scrape_interval: Optional[int] = None
    sync_scrape_interval: Optional[int] = None
    title: Optional[str] = Field(None, max_length=64)


class AlarmClassCreate(DataModelBase):
    """
    AlarmClassCreate object.

    Parameters
    ----------
    name: Optional[str]
    title: Optional[str]

    """

    name: Optional[str] = Field(None, max_length=64)
    title: Optional[str] = Field(None, max_length=64)


class AlarmClassUpdate(DataModelBase):
    """
    AlarmClassUpdate object.

    Parameters
    ----------
    title: Optional[str]

    """

    title: Optional[str] = Field(None, max_length=64)


class AlarmConditionTargetNotificationsUserSetting(DataModelBase):
    """
    AlarmConditionTargetNotificationsUserSetting object.

    Parameters
    ----------
    enabled: Optional[bool]
    type: Optional[str]

    """

    enabled: Optional[bool] = None
    type: Optional[str] = None


class AlarmFilterCreate(DataModelBase):
    """
    AlarmFilterCreate object.

    Parameters
    ----------
    payload: Optional[Dict[str, Any]]
    title: Optional[str]
    username: Optional[str]
    version: Optional[str]

    """

    payload: Optional[Dict[str, Any]] = None
    title: Optional[str] = None
    username: Optional[str] = None
    version: Optional[str] = None


class AlarmFilterUpdate(DataModelBase):
    """
    AlarmFilterUpdate object.

    Parameters
    ----------
    payload: Optional[Dict[str, Any]]
    title: Optional[str]
    version: Optional[str]

    """

    payload: Optional[Dict[str, Any]] = None
    title: Optional[str] = None
    version: Optional[str] = None


class AlarmSeverity(DataModelBase):
    """
    AlarmSeverity object.

    Parameters
    ----------
    name: Optional[str]
    severity: Optional[int]
    title: Optional[str]

    """

    name: Optional[str] = None
    severity: Optional[int] = None
    title: Optional[str] = None


class AlarmSeverityUpdate(DataModelBase):
    """
    AlarmSeverityUpdate object.

    Parameters
    ----------
    data: Optional[List[AlarmSeverity]]

    """

    data: Optional[List[AlarmSeverity]] = None


class AlarmTypeCreate(DataModelBase):
    """
    AlarmTypeCreate object.

    Parameters
    ----------
    alarm_class_name: Optional[str]
    name: Optional[str]
    title: Optional[str]

    """

    alarm_class_name: Optional[str] = Field(None, max_length=64)
    name: Optional[str] = Field(None, max_length=64)
    title: Optional[str] = Field(None, max_length=64)


class AlarmTypeUpdate(DataModelBase):
    """
    AlarmTypeUpdate object.

    Parameters
    ----------
    alarm_class_name: Optional[str]
    title: Optional[str]

    """

    alarm_class_name: Optional[str] = Field(None, max_length=64)
    title: Optional[str] = Field(None, max_length=64)


class AlarmUpdate(DataModelBase):
    """
    AlarmUpdate object.

    Parameters
    ----------
    alarm_type_name: Optional[str]
    custom_identifier: Optional[str]
    description: Optional[str]
    payload: Optional[Dict[str, Any]]
    severity: Optional[int]
    solution: Optional[str]
    source_asset_names: Optional[List[str]]
    target_asset_name: Optional[str]
    title: Optional[str]

    """

    alarm_type_name: Optional[str] = None
    custom_identifier: Optional[str] = None
    description: Optional[str] = None
    payload: Optional[Dict[str, Any]] = None
    severity: Optional[int] = None
    solution: Optional[str] = None
    source_asset_names: Optional[List[str]] = None
    target_asset_name: Optional[str] = None
    title: Optional[str] = None


class AlarmUpdateStatus(DataModelBase):
    """
    AlarmUpdateStatus object.

    Parameters
    ----------
    status: Optional[str]
    status_payload: Optional[Dict[str, Any]]

    """

    status: Optional[str] = None
    status_payload: Optional[Dict[str, Any]] = None


class AppCreate(DataModelBase):
    """
    AppCreate object.

    Parameters
    ----------
    payload: Optional[Dict[str, Any]]

    """

    payload: Optional[Dict[str, Any]] = None


class AppUpdate(DataModelBase):
    """
    AppUpdate object.

    Parameters
    ----------
    title: Optional[str]

    """

    title: Optional[str] = None


class AssetClassCreate(DataModelBase):
    """
    AssetClassCreate object.

    Parameters
    ----------
    entity_type_name: str
    name: str
    title: str

    """

    entity_type_name: str = Field(
        ...,
        description='Entity type that is linked to this new <a href="https://docs.kelvininc.com/latest/kelvin-overview/kelvin-platform/kelvin-assets/#asset-class" target="_blank">Kelvin Asset Class</a>.</p> There are 5 entity type options available to choose from; `group`, `asset`, `component`, `part` and `sensor`.</p> Detailed information about the asset heirarchy and function of each entity type can be found at <a href="https://docs.kelvininc.com/latest/kelvin-overview/kelvin-platform/kelvin-assets/" target="_blank">https://docs.kelvininc.com/latest/kelvin-overview/kelvin-platform/kelvin-assets/</a>.',
        max_length=64,
    )
    name: str = Field(
        ...,
        description='Unique identifier name for this new <a href="https://docs.kelvininc.com/latest/kelvin-overview/kelvin-platform/kelvin-assets/#asset-class" target="_blank">Kelvin Asset Class</a>.</p> This must contain only lowercase alphanumeric characters. The `.`, `_` and `-` characters are also allowed to separate words instead of a space.',
        max_length=64,
    )
    title: str = Field(
        ...,
        description='Display name for this new <a href="https://docs.kelvininc.com/latest/kelvin-overview/kelvin-platform/kelvin-assets/#asset-class" target="_blank">Kelvin Asset Class</a>. This is a friendly name displayed in lists and in references within asset details.</p> You can use any character, numeric, space and special character in this parameter.',
        max_length=64,
    )


class AssetClassUpdate(DataModelBase):
    """
    AssetClassUpdate object.

    Parameters
    ----------
    entity_type_name: Optional[str]
    title: str

    """

    entity_type_name: Optional[str] = Field(
        None,
        description='New entity type that is linked to this existing <a href="https://docs.kelvininc.com/latest/kelvin-overview/kelvin-platform/kelvin-assets/#asset-class" target="_blank">Kelvin Asset Class</a>.</p> There are 5 entity type options available to choose from; `group`, `asset`, `component`, `part` and `sensor`.</p> Detailed information about the asset heirarchy and function of each entity type can be found at <a href="https://docs.kelvininc.com/latest/kelvin-overview/kelvin-platform/kelvin-assets/" target="_blank">https://docs.kelvininc.com/latest/kelvin-overview/kelvin-platform/kelvin-assets/</a>.',
        max_length=64,
    )
    title: str = Field(
        ...,
        description='New display name for this existing <a href="https://docs.kelvininc.com/latest/kelvin-overview/kelvin-platform/kelvin-assets/#asset-class" target="_blank">Kelvin Asset Class</a>. This is a friendly name displayed in lists and in references within asset details.</p> You can use any character, numeric, space and special character in this parameter.',
        max_length=64,
    )


class AssetDataStreamsList(DataModelBase):
    """
    AssetDataStreamsList object.

    Parameters
    ----------
    include_asset_children: Optional[bool]

    """

    include_asset_children: Optional[bool] = None


class AssetLocationItem(DataModelBase):
    """
    AssetLocationItem object.

    Parameters
    ----------
    lat: Optional[float]
    lon: Optional[float]

    """

    lat: Optional[float] = None
    lon: Optional[float] = None


class AssetMetricItem(DataModelBase):
    """
    AssetMetricItem object.

    Parameters
    ----------
    name: Optional[str]

    """

    name: Optional[str] = None


class AssetOEEGet(DataModelBase):
    """
    AssetOEEGet object.

    Parameters
    ----------
    asset_names: Optional[List[str]]
    timestamp: Optional[str]

    """

    asset_names: Optional[List[str]] = None
    timestamp: Optional[str] = None


class AssetPropertyCreate(DataModelBase):
    """
    AssetPropertyCreate object.

    Parameters
    ----------
    name: Optional[str]
    title: Optional[str]
    value: Optional[str]

    """

    name: Optional[str] = Field(None, max_length=64)
    title: Optional[str] = Field(None, max_length=64)
    value: Optional[str] = None


class AssetShiftGet(DataModelBase):
    """
    AssetShiftGet object.

    Parameters
    ----------
    asset_names: Optional[List[str]]
    timestamp: Optional[str]

    """

    asset_names: Optional[List[str]] = None
    timestamp: Optional[str] = None


class AssetStatistics(DataModelBase):
    """
    AssetStatistics object.

    Parameters
    ----------
    asset_type_names: Optional[List[str]]
    entity_type_names: Optional[List[str]]
    names: Optional[List[str]]
    search: Optional[List[str]]

    """

    asset_type_names: Optional[List[str]] = None
    entity_type_names: Optional[List[str]] = None
    names: Optional[List[str]] = None
    search: Optional[List[str]] = None


class AssetTemplateProperties(DataModelBase):
    """
    AssetTemplateProperties object.

    Parameters
    ----------
    name: Optional[str]
    title: Optional[str]
    value: Optional[str]

    """

    name: Optional[str] = None
    title: Optional[str] = None
    value: Optional[str] = None


class AssetTypeCreate(DataModelBase):
    """
    AssetTypeCreate object.

    Parameters
    ----------
    asset_class_name: str
    name: str
    title: str

    """

    asset_class_name: str = Field(
        ...,
        description='Unique identifier name of an existing <a href="https://docs.kelvininc.com/latest/kelvin-overview/kelvin-platform/kelvin-assets/#asset-class" target="_blank">Kelvin Asset Class</a>.</p> A 400 error will occur if the <a href="https://docs.kelvininc.com/latest/kelvin-overview/kelvin-platform/kelvin-assets/#asset-class" target="_blank">Kelvin Asset Class</a> does not exist and this API request will fail.',
        max_length=64,
    )
    name: str = Field(
        ...,
        description='Unique identifier name for this new <a href="https://docs.kelvininc.com/latest/kelvin-overview/kelvin-platform/kelvin-assets/#asset-type" target="_blank">Kelvin Asset Type</a>.</p> This must contain only lowercase alphanumeric characters. The `.`, `_` and `-` characters are also allowed to separate words instead of a space.',
        max_length=64,
    )
    title: str = Field(
        ...,
        description='Display name for this new <a href="https://docs.kelvininc.com/latest/kelvin-overview/kelvin-platform/kelvin-assets/#asset-type" target="_blank">Kelvin Asset Type</a>. This is a friendly name displayed in lists and in references within asset details.</p> You can use any character, numeric, space and special character in this parameter.',
        max_length=64,
    )


class AssetTypeMetadataCreate(DataModelBase):
    """
    AssetTypeMetadataCreate object.

    Parameters
    ----------
    name: str
    payload: Dict[str, Any]

    """

    name: str = Field(
        ...,
        description='Unique identifier name for this new <a href="https://docs.kelvininc.com/latest/kelvin-overview/kelvin-platform/kelvin-assets/#asset-type" target="_blank">Kelvin Asset Type</a> metadata parameter.</p> This must contain only lowercase alphanumeric characters. The `.`, `_` and `-` characters are also allowed to separate words instead of a space.',
        max_length=64,
    )
    payload: Dict[str, Any] = Field(
        ...,
        description='Custom JSON parameter defined by you.</p> This can be any valid JSON structure. For example this is valid</p> <blockquote>{</br>&nbsp;&nbsp;"key1": "A string here",</br>&nbsp;&nbsp;"key2": 88,</br>&nbsp;&nbsp;"key3": {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"subkey1": "Another String",</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"subkey2": true,</br>&nbsp;&nbsp;&nbsp;&nbsp;}</br>}</blockquote>',
    )


class AssetTypeMetadataUpdate(DataModelBase):
    """
    AssetTypeMetadataUpdate object.

    Parameters
    ----------
    payload: Optional[Dict[str, Any]]

    """

    payload: Optional[Dict[str, Any]] = None


class AssetTypeUpdate(DataModelBase):
    """
    AssetTypeUpdate object.

    Parameters
    ----------
    asset_class_name: Optional[str]
    title: Optional[str]

    """

    asset_class_name: Optional[str] = Field(None, max_length=64)
    title: Optional[str] = Field(None, max_length=64)


class BridgeDeploy(DataModelBase):
    """
    BridgeDeploy object.

    Parameters
    ----------
    acp_name: Optional[str]
    name: Optional[str]
    payload: Optional[Dict[str, Any]]
    protocol: Optional[str]
    title: Optional[str]

    """

    acp_name: Optional[str] = Field(None, max_length=64)
    name: Optional[str] = Field(None, max_length=64)
    payload: Optional[Dict[str, Any]] = None
    protocol: Optional[str] = Field(None, max_length=64)
    title: Optional[str] = Field(None, max_length=64)


class ClusterLocationItem(DataModelBase):
    """
    ClusterLocationItem object.

    Parameters
    ----------
    lat: Optional[float]
    lon: Optional[float]

    """

    lat: Optional[float] = None
    lon: Optional[float] = None


class ClusterUpdate(DataModelBase):
    """
    ClusterUpdate object.

    Parameters
    ----------
    info: Optional[Dict[str, Any]]
    kelvin_info: Optional[Dict[str, Any]]
    kubeconfig: Optional[str]
    network_info: Optional[Dict[str, Any]]
    ready: Optional[bool]
    system_info: Optional[Dict[str, Any]]
    title: Optional[str]

    """

    info: Optional[Dict[str, Any]] = None
    kelvin_info: Optional[Dict[str, Any]] = None
    kubeconfig: Optional[str] = None
    network_info: Optional[Dict[str, Any]] = None
    ready: Optional[bool] = None
    system_info: Optional[Dict[str, Any]] = None
    title: Optional[str] = None


class ControlChangeCreate(DataModelBase):
    """
    ControlChangeCreate object.

    Parameters
    ----------
    asset_name: str
    expiration_date: Optional[datetime]
    metric_name: str
    payload: Optional[Dict[str, Any]]
    retry: Optional[int]
    timeout: Optional[int]

    """

    asset_name: str
    expiration_date: Optional[datetime] = None
    metric_name: str
    payload: Optional[Dict[str, Any]] = None
    retry: Optional[int] = None
    timeout: Optional[int] = None


class ControlChangeLast(DataModelBase):
    """
    ControlChangeLast object.

    Parameters
    ----------
    asset_include_children: Optional[bool]
    asset_names: List[str]
    metric_names: Optional[List[str]]
    states: Optional[List[str]]

    """

    asset_include_children: Optional[bool] = None
    asset_names: List[str]
    metric_names: Optional[List[str]] = None
    states: Optional[List[str]] = None


class ControlChangeList(DataModelBase):
    """
    ControlChangeList object.

    Parameters
    ----------
    asset_include_children: Optional[bool]
    asset_names: List[str]
    metric_names: Optional[List[str]]
    states: Optional[List[str]]

    """

    asset_include_children: Optional[bool] = None
    asset_names: List[str]
    metric_names: Optional[List[str]] = None
    states: Optional[List[str]] = None


class ControlChangePayload(DataModelBase):
    """
    ControlChangePayload object.

    Parameters
    ----------
    expiration_date: Optional[datetime]
    payload: Optional[Dict[str, Any]]
    retries: Optional[int]
    timeout: Optional[int]

    """

    expiration_date: Optional[datetime] = None
    payload: Optional[Dict[str, Any]] = None
    retries: Optional[int] = None
    timeout: Optional[int] = None


class ControlChangeRange(DataModelBase):
    """
    ControlChangeRange object.

    Parameters
    ----------
    asset_include_children: Optional[bool]
    asset_names: List[str]
    end_date: datetime
    metric_names: Optional[List[str]]
    start_date: datetime
    states: Optional[List[str]]

    """

    asset_include_children: Optional[bool] = None
    asset_names: List[str]
    end_date: datetime
    metric_names: Optional[List[str]] = None
    start_date: datetime
    states: Optional[List[str]] = None


class ControlChangeStatusPayload(DataModelBase):
    """
    ControlChangeStatusPayload object.

    Parameters
    ----------
    message: Optional[str]
    payload: Optional[Dict[str, Any]]
    state: Optional[str]

    """

    message: Optional[str] = None
    payload: Optional[Dict[str, Any]] = None
    state: Optional[str] = None


class ControlChangeUploadRequest(DataModelBase):
    """
    ControlChangeUploadRequest object.

    Parameters
    ----------
    id: str
    payload: Optional[ControlChangePayload]
    resource: Optional[str]
    source: Optional[str]
    timestamp: Optional[datetime]

    """

    id: str
    payload: Optional[ControlChangePayload] = None
    resource: Optional[str] = None
    source: Optional[str] = None
    timestamp: Optional[datetime] = None


class CreatedBy(DataModelBase):
    """
    CreatedBy object.

    Parameters
    ----------
    name: Optional[str]
    type: Optional[str]

    """

    name: Optional[str] = None
    type: Optional[str] = None


class Type(Enum):
    user = "user"
    workload = "workload"


class DataLabelSource(DataModelBase):
    """
    DataLabelSource object.

    Parameters
    ----------
    info: Optional[Dict[str, Any]]
    type: Optional[Type]

    """

    info: Optional[Dict[str, Any]] = None
    type: Optional[Type] = None


class DeleteSelector(DataModelBase):
    """
    DeleteSelector object.

    Parameters
    ----------
    asset_name: str
    name: str

    """

    asset_name: str = Field(..., max_length=64)
    name: str = Field(..., max_length=64)


class FailureDetectionProperty(DataModelBase):
    """
    FailureDetectionProperty object.

    Parameters
    ----------
    name: Optional[str]
    unit: Optional[str]
    value: Optional[str]

    """

    name: Optional[str] = None
    unit: Optional[str] = None
    value: Optional[str] = None


class FailureDetectionTemplate(DataModelBase):
    """
    FailureDetectionTemplate object.

    Parameters
    ----------
    enabled: Optional[bool]
    failure_class_name: Optional[str]

    """

    enabled: Optional[bool] = None
    failure_class_name: Optional[str] = None


class ICDField(DataModelBase):
    """
    ICDField object.

    Parameters
    ----------
    array: Optional[bool]
    description: Optional[str]
    name: Optional[str]
    type: Optional[str]

    """

    array: Optional[bool] = None
    description: Optional[str] = None
    name: Optional[str] = None
    type: Optional[str] = None


class ICDPayload(DataModelBase):
    """
    ICDPayload object.

    Parameters
    ----------
    class_name: Optional[str]
    description: Optional[str]
    fields: Optional[List[ICDField]]
    name: Optional[str]
    version: Optional[str]

    """

    class_name: Optional[str] = None
    description: Optional[str] = None
    fields: Optional[List[ICDField]] = None
    name: Optional[str] = None
    version: Optional[str] = None


class InstanceSettingUpdate(DataModelBase):
    """
    InstanceSettingUpdate object.

    Parameters
    ----------
    payload: Optional[Dict[str, Any]]

    """

    payload: Optional[Dict[str, Any]] = None


class IntegrationAwsRegionCreate(DataModelBase):
    """
    IntegrationAwsRegionCreate object.

    Parameters
    ----------
    name: Optional[str]
    title: Optional[str]

    """

    name: Optional[str] = None
    title: Optional[str] = None


class IntegrationAwsRegionUpdate(DataModelBase):
    """
    IntegrationAwsRegionUpdate object.

    Parameters
    ----------
    title: Optional[str]

    """

    title: Optional[str] = None


class IntegrationConfiguration(DataModelBase):
    """
    IntegrationConfiguration object.

    Parameters
    ----------
    aws_access_key_id: Optional[str]
    aws_region: Optional[str]
    aws_secret_access_key: Optional[str]
    polling_rate: Optional[int]

    """

    aws_access_key_id: Optional[str] = None
    aws_region: Optional[str] = None
    aws_secret_access_key: Optional[str] = None
    polling_rate: Optional[int] = None


class IntegrationCreate(DataModelBase):
    """
    IntegrationCreate object.

    Parameters
    ----------
    configuration: Optional[IntegrationConfiguration]
    enable: Optional[bool]
    name: Optional[str]
    title: Optional[str]
    type: Optional[str]

    """

    configuration: Optional[IntegrationConfiguration] = None
    enable: Optional[bool] = None
    name: Optional[str] = None
    title: Optional[str] = None
    type: Optional[str] = None


class IntegrationUpdate(DataModelBase):
    """
    IntegrationUpdate object.

    Parameters
    ----------
    configuration: Optional[IntegrationConfiguration]
    enable: Optional[bool]
    title: Optional[str]

    """

    configuration: Optional[IntegrationConfiguration] = None
    enable: Optional[bool] = None
    title: Optional[str] = None


class KelvinContactInfoSetting(DataModelBase):
    """
    KelvinContactInfoSetting object.

    Parameters
    ----------
    email: Optional[str]
    phone_country_code: Optional[str]
    phone_number: Optional[str]

    """

    email: Optional[str] = None
    phone_country_code: Optional[str] = None
    phone_number: Optional[str] = None


class KelvinContactInfoUserSettingUpdate(DataModelBase):
    """
    KelvinContactInfoUserSettingUpdate object.

    Parameters
    ----------
    payload: Optional[KelvinContactInfoSetting]

    """

    payload: Optional[KelvinContactInfoSetting] = None


class LabelCreate(DataModelBase):
    """
    LabelCreate object.

    Parameters
    ----------
    name: Optional[str]
    title: Optional[str]

    """

    name: Optional[str] = Field(None, max_length=64)
    title: Optional[str] = Field(None, max_length=64)


class LabelMetadataBulkCreateItem(DataModelBase):
    """
    LabelMetadataBulkCreateItem object.

    Parameters
    ----------
    label_name: Optional[str]
    name: Optional[str]
    payload: Optional[Dict[str, Any]]

    """

    label_name: Optional[str] = Field(None, max_length=64)
    name: Optional[str] = Field(None, max_length=64)
    payload: Optional[Dict[str, Any]] = None


class LabelMetadataCreate(DataModelBase):
    """
    LabelMetadataCreate object.

    Parameters
    ----------
    name: Optional[str]
    payload: Optional[Dict[str, Any]]

    """

    name: Optional[str] = Field(None, max_length=64)
    payload: Optional[Dict[str, Any]] = None


class LabelMetadataDeleteBulkItem(DataModelBase):
    """
    LabelMetadataDeleteBulkItem object.

    Parameters
    ----------
    label_name: Optional[str]
    name: Optional[str]

    """

    label_name: Optional[str] = Field(None, max_length=64)
    name: Optional[str] = Field(None, max_length=64)


class LabelMetadataUpdate(DataModelBase):
    """
    LabelMetadataUpdate object.

    Parameters
    ----------
    payload: Optional[Dict[str, Any]]

    """

    payload: Optional[Dict[str, Any]] = None


class LabelUpdate(DataModelBase):
    """
    LabelUpdate object.

    Parameters
    ----------
    title: Optional[str]

    """

    title: Optional[str] = Field(None, max_length=64)


class MapRelationship(DataModelBase):
    """
    MapRelationship object.

    Parameters
    ----------
    source: Optional[str]
    target: Optional[str]
    type: Optional[str]
    visualization: Optional[Dict[str, Any]]

    """

    source: Optional[str] = None
    target: Optional[str] = None
    type: Optional[str] = None
    visualization: Optional[Dict[str, Any]] = None


class Metric(DataModelBase):
    """
    Metric object.

    Parameters
    ----------
    asset_name: Optional[str]
    name: Optional[str]

    """

    asset_name: Optional[str] = None
    name: Optional[str] = None


class MetricCreate(DataModelBase):
    """
    MetricCreate object.

    Parameters
    ----------
    data_type_name: Optional[str]
    data_type_version: Optional[str]
    display_unit: Optional[str]
    name: Optional[str]
    semantic_type_name: Optional[str]
    semantic_type_properties: Optional[Dict[str, Any]]
    title: Optional[str]
    write: Optional[bool]

    """

    data_type_name: Optional[str] = None
    data_type_version: Optional[str] = None
    display_unit: Optional[str] = None
    name: Optional[str] = Field(None, max_length=64)
    semantic_type_name: Optional[str] = None
    semantic_type_properties: Optional[Dict[str, Any]] = None
    title: Optional[str] = Field(None, max_length=64)
    write: Optional[bool] = None


class MetricUpdate(DataModelBase):
    """
    MetricUpdate object.

    Parameters
    ----------
    data_type_name: Optional[str]
    data_type_version: Optional[str]
    display_unit: Optional[str]
    semantic_type_name: Optional[str]
    semantic_type_properties: Optional[Dict[str, Any]]
    title: Optional[str]
    write: Optional[bool]

    """

    data_type_name: Optional[str] = None
    data_type_version: Optional[str] = None
    display_unit: Optional[str] = Field(None, max_length=64)
    semantic_type_name: Optional[str] = None
    semantic_type_properties: Optional[Dict[str, Any]] = None
    title: Optional[str] = Field(None, max_length=64)
    write: Optional[bool] = None


class OEECalculation(DataModelBase):
    """
    OEECalculation object.

    Parameters
    ----------
    good_units: Optional[int]
    ideal_cycle_time: Optional[int]
    planned_production_time: Optional[int]
    run_time: Optional[int]
    total_units: Optional[int]

    """

    good_units: Optional[int] = None
    ideal_cycle_time: Optional[int] = None
    planned_production_time: Optional[int] = None
    run_time: Optional[int] = None
    total_units: Optional[int] = None


class OEEThresholds(DataModelBase):
    """
    OEEThresholds object.

    Parameters
    ----------
    critical_alarm: Optional[int]
    target: Optional[int]
    warning_alarm: Optional[int]

    """

    critical_alarm: Optional[int] = None
    target: Optional[int] = None
    warning_alarm: Optional[int] = None


class ProductionInfo(DataModelBase):
    """
    ProductionInfo object.

    Parameters
    ----------
    expected_end_at: Optional[datetime]
    expected_start_at: Optional[datetime]
    sku: Optional[str]

    """

    expected_end_at: Optional[datetime] = None
    expected_start_at: Optional[datetime] = None
    sku: Optional[str] = None


class ReferenceMetric(DataModelBase):
    """
    ReferenceMetric object.

    Parameters
    ----------
    asset_name: Optional[str]
    metric_name: Optional[str]

    """

    asset_name: Optional[str] = None
    metric_name: Optional[str] = None


class SecretCreate(DataModelBase):
    """
    SecretCreate object.

    Parameters
    ----------
    name: str
    value: str

    """

    name: str = Field(..., max_length=32)
    value: str


class ShiftInfo(DataModelBase):
    """
    ShiftInfo object.

    Parameters
    ----------
    end_at: Optional[datetime]
    name: Optional[str]
    start_at: Optional[datetime]

    """

    end_at: Optional[datetime] = None
    name: Optional[str] = None
    start_at: Optional[datetime] = None


class SiteHierarchyOverview(DataModelBase):
    """
    SiteHierarchyOverview object.

    Parameters
    ----------
    alarm_severities: Optional[List[int]]
    asset_names: Optional[List[str]]
    asset_type_names: Optional[List[str]]
    production_line_names: Optional[List[str]]
    search: Optional[List[str]]

    """

    alarm_severities: Optional[List[int]] = None
    asset_names: Optional[List[str]] = None
    asset_type_names: Optional[List[str]] = None
    production_line_names: Optional[List[str]] = None
    search: Optional[List[str]] = None


class StorageCreate(DataModelBase):
    """
    StorageCreate object.

    Parameters
    ----------
    asset_name: str
    data_type: str
    id: Optional[str]
    name: str
    payload: Dict[str, Any]
    source: Optional[str]
    target: Optional[str]
    timestamp: datetime
    trace_id: Optional[str]

    """

    asset_name: str = Field(..., max_length=64)
    data_type: str = Field(..., max_length=64)
    id: Optional[str] = None
    name: str = Field(..., max_length=64)
    payload: Dict[str, Any]
    source: Optional[str] = Field(None, max_length=256)
    target: Optional[str] = Field(None, max_length=256)
    timestamp: datetime = Field(..., example="2022-01-13T12:00:00.000000Z")
    trace_id: Optional[str] = None


class StorageDelete(DataModelBase):
    """
    StorageDelete object.

    Parameters
    ----------
    end_time: datetime
    selectors: List[DeleteSelector]
    start_time: datetime

    """

    end_time: datetime = Field(..., example="2022-01-13T12:00:00.000000Z")
    selectors: List[DeleteSelector]
    start_time: datetime = Field(..., example="2022-01-13T12:00:00.000000Z")


class Order(Enum):
    ASC = "ASC"
    DESC = "DESC"


class StorageSelector(DataModelBase):
    """
    StorageSelector object.

    Parameters
    ----------
    asset_name: str
    fields: Optional[List[str]]
    name: str

    """

    asset_name: str = Field(..., max_length=64)
    fields: Optional[List[str]] = None
    name: str = Field(..., max_length=64)


class StorageUpdate(DataModelBase):
    """
    StorageUpdate object.

    Parameters
    ----------
    asset_name: Optional[str]
    name: Optional[str]
    title: Optional[str]

    """

    asset_name: Optional[str] = None
    name: Optional[str] = None
    title: Optional[str] = None


class SymbolCreate(DataModelBase):
    """
    SymbolCreate object.

    Parameters
    ----------
    name: Optional[str]
    payload: Optional[str]
    symbol_type: Optional[str]
    title: Optional[str]

    """

    name: Optional[str] = None
    payload: Optional[str] = None
    symbol_type: Optional[str] = None
    title: Optional[str] = None


class SymbolUpdate(DataModelBase):
    """
    SymbolUpdate object.

    Parameters
    ----------
    payload: Optional[str]
    symbol_type: Optional[str]
    title: Optional[str]

    """

    payload: Optional[str] = None
    symbol_type: Optional[str] = None
    title: Optional[str] = None


class TeamMember(DataModelBase):
    """
    TeamMember object.

    Parameters
    ----------
    asset_responsible_for: Optional[str]
    email: Optional[str]
    name: Optional[str]
    phone_country_code: Optional[str]
    phone_number: Optional[str]
    role: Optional[str]

    """

    asset_responsible_for: Optional[str] = None
    email: Optional[str] = None
    name: Optional[str] = None
    phone_country_code: Optional[str] = None
    phone_number: Optional[str] = None
    role: Optional[str] = None


class UserSettingUpdate(DataModelBase):
    """
    UserSettingUpdate object.

    Parameters
    ----------
    payload: Optional[Dict[str, Any]]

    """

    payload: Optional[Dict[str, Any]] = None


class View2D(DataModelBase):
    """
    View2D object.

    Parameters
    ----------
    image_model: Optional[str]
    x: Optional[float]
    y: Optional[float]

    """

    image_model: Optional[str] = None
    x: Optional[float] = None
    y: Optional[float] = None


class View3D(DataModelBase):
    """
    View3D object.

    Parameters
    ----------
    image_model: Optional[str]
    x: Optional[float]
    y: Optional[float]
    z: Optional[float]

    """

    image_model: Optional[str] = None
    x: Optional[float] = None
    y: Optional[float] = None
    z: Optional[float] = None


class Visualization(DataModelBase):
    """
    Visualization object.

    Parameters
    ----------
    view_2d: Optional[View2D]
    view_3d: Optional[View3D]

    """

    view_2d: Optional[View2D] = None
    view_3d: Optional[View3D] = None


class WireguardPeerCreate(DataModelBase):
    """
    WireguardPeerCreate object.

    Parameters
    ----------
    allowed_ips: Optional[List[str]]
    endpoint: Optional[str]
    name: str
    public_key: Optional[str]
    title: str
    type: str

    """

    allowed_ips: Optional[List[str]] = None
    endpoint: Optional[str] = None
    name: str
    public_key: Optional[str] = None
    title: str
    type: str


class WireguardPeerUpdate(DataModelBase):
    """
    WireguardPeerUpdate object.

    Parameters
    ----------
    allowed_ips: Optional[List[str]]
    endpoint: Optional[str]
    public_key: Optional[str]
    title: str
    type: str

    """

    allowed_ips: Optional[List[str]] = None
    endpoint: Optional[str] = None
    public_key: Optional[str] = None
    title: str
    type: str


class WireguardTunnelCreate(DataModelBase):
    """
    WireguardTunnelCreate object.

    Parameters
    ----------
    keep_alive: Optional[int]
    wireguard_peer: str

    """

    keep_alive: Optional[int] = None
    wireguard_peer: str


class WorkloadDeploy(DataModelBase):
    """
    WorkloadDeploy object.

    Parameters
    ----------
    acp_name: str
    app_name: str
    app_version: Optional[str]
    name: Optional[str]
    payload: Optional[Dict[str, Any]]
    title: Optional[str]

    """

    acp_name: str
    app_name: str
    app_version: Optional[str] = None
    name: Optional[str] = Field(None, max_length=32)
    payload: Optional[Dict[str, Any]] = None
    title: Optional[str] = Field(None, max_length=64)


class WorkloadStatusUpdateValues(DataModelBase):
    """
    WorkloadStatusUpdateValues object.

    Parameters
    ----------
    message: Optional[str]
    name: Optional[str]
    state: Optional[str]
    warnings: Optional[List[str]]

    """

    message: Optional[str] = None
    name: Optional[str] = None
    state: Optional[str] = None
    warnings: Optional[List[str]] = None


class ACPMetadataBulkCreate(BaseModelRoot[ACPMetadataBulkCreateItem]):
    """
    ACPMetadataBulkCreate object.

    Parameters
    ----------
    __root__: List[ACPMetadataBulkCreateItem]

    """

    __root__: List[ACPMetadataBulkCreateItem]


class ACPMetadataBulkDelete(BaseModelRoot[ACPMetadataBulkDeleteItem]):
    """
    ACPMetadataBulkDelete object.

    Parameters
    ----------
    __root__: List[ACPMetadataBulkDeleteItem]

    """

    __root__: List[ACPMetadataBulkDeleteItem]


class ACPSetting(DataModelBase):
    """
    ACPSetting object.

    Parameters
    ----------
    auto_update: Optional[ACPSettingAutoUpdate]
    metrics: Optional[ACPSettingMetrics]
    sync: Optional[ACPSettingSync]

    """

    auto_update: Optional[ACPSettingAutoUpdate] = None
    metrics: Optional[ACPSettingMetrics] = None
    sync: Optional[ACPSettingSync] = None


class ACPStatusUpdate(DataModelBase):
    """
    ACPStatusUpdate object.

    Parameters
    ----------
    node: Optional[ACPStatusUpdateValues]
    workloads: Optional[List[WorkloadStatusUpdateValues]]

    """

    node: Optional[ACPStatusUpdateValues] = None
    workloads: Optional[List[WorkloadStatusUpdateValues]] = None


class AlarmConditionNotificationsUserSetting(DataModelBase):
    """
    AlarmConditionNotificationsUserSetting object.

    Parameters
    ----------
    alarm_severity: Optional[List[int]]
    alarm_type_name: Optional[List[str]]
    asset_name: Optional[List[str]]
    name: Optional[str]
    targets: Optional[List[AlarmConditionTargetNotificationsUserSetting]]

    """

    alarm_severity: Optional[List[int]] = None
    alarm_type_name: Optional[List[str]] = None
    asset_name: Optional[List[str]] = None
    name: Optional[str] = None
    targets: Optional[List[AlarmConditionTargetNotificationsUserSetting]] = None


class AlarmCreate(DataModelBase):
    """
    AlarmCreate object.

    Parameters
    ----------
    alarm_type_name: str
    created_by: CreatedBy
    custom_identifier: Optional[str]
    description: Optional[str]
    payload: Optional[Dict[str, Any]]
    severity: Optional[int]
    solution: Optional[str]
    source_asset_names: List[str]
    target_asset_name: str
    title: str

    """

    alarm_type_name: str = Field(
        ...,
        description="The Alarm Type that is associated with this alarm. <i>Note: Before making a Kelvin Alarm the Kelvin Alarm Type and a Kelvin Alarm Class must exist in the Kelvin Platform. These can be created with API commands.</i>",
    )
    created_by: CreatedBy
    custom_identifier: Optional[str] = Field(
        None, description="An option to tag the alarm with a custom identifying string"
    )
    description: Optional[str] = Field(
        None, description="A summary description of what the alarm is about."
    )
    payload: Optional[Dict[str, Any]] = None
    severity: Optional[int] = Field(
        None,
        description="How serious the alarm is in a rating from 1 (most severe) to 5 (least severe).",
    )
    solution: Optional[str] = Field(
        None,
        description="Any tips to help users solve the alarm. <i>It is recommended to be as detailed as possible here.</i>",
    )
    source_asset_names: List[str] = Field(
        ...,
        description="A Name of a Kelvin Asset, Kelvin Component, Kelvin Part or Kelvin Sensor that actually generated the alarm. e.g. A Kelvin Sensor going over maximum is related to the health of a Kelvin Component.",
    )
    target_asset_name: str = Field(
        ...,
        description="A name of a Kelvin Asset, Kelvin Component, Kelvin Part or Kelvin Sensor that the alarm will be associated with. <i>Note: do not confuse this with the Display Name.</i>",
    )
    title: str = Field(..., description="The title of the alarm that will be displayed.")


class AlarmList(DataModelBase):
    """
    AlarmList object.

    Parameters
    ----------
    acknowledged_at_end: Optional[datetime]
    acknowledged_at_start: Optional[datetime]
    acknowledged_by: Optional[List[str]]
    alarm_class_names: Optional[List[str]]
    alarm_severities: Optional[List[int]]
    alarm_statuses: Optional[List[str]]
    alarm_type_names: Optional[List[str]]
    asset_class_names: Optional[List[str]]
    asset_include_children: Optional[bool]
    asset_type_names: Optional[List[str]]
    created_at_end: Optional[datetime]
    created_at_start: Optional[datetime]
    created_by: Optional[List[CreatedBy]]
    custom_identifiers: Optional[List[str]]
    resolved_at_end: Optional[datetime]
    resolved_at_start: Optional[datetime]
    resolved_by: Optional[List[str]]
    search: Optional[List[str]]
    target_asset_names: Optional[List[str]]

    """

    acknowledged_at_end: Optional[datetime] = None
    acknowledged_at_start: Optional[datetime] = None
    acknowledged_by: Optional[List[str]] = None
    alarm_class_names: Optional[List[str]] = None
    alarm_severities: Optional[List[int]] = None
    alarm_statuses: Optional[List[str]] = None
    alarm_type_names: Optional[List[str]] = None
    asset_class_names: Optional[List[str]] = None
    asset_include_children: Optional[bool] = None
    asset_type_names: Optional[List[str]] = None
    created_at_end: Optional[datetime] = None
    created_at_start: Optional[datetime] = None
    created_by: Optional[List[CreatedBy]] = None
    custom_identifiers: Optional[List[str]] = None
    resolved_at_end: Optional[datetime] = None
    resolved_at_start: Optional[datetime] = None
    resolved_by: Optional[List[str]] = None
    search: Optional[List[str]] = None
    target_asset_names: Optional[List[str]] = None


class AlarmNotificationsUserSetting(DataModelBase):
    """
    AlarmNotificationsUserSetting object.

    Parameters
    ----------
    conditions: Optional[List[AlarmConditionNotificationsUserSetting]]
    enabled: Optional[bool]

    """

    conditions: Optional[List[AlarmConditionNotificationsUserSetting]] = None
    enabled: Optional[bool] = None


class AnonymousTemplate(DataModelBase):
    """
    AnonymousTemplate object.

    Parameters
    ----------
    entity_type_name: Optional[str]
    failure_detection: Optional[FailureDetectionTemplate]
    properties: Optional[List[AssetTemplateProperties]]

    """

    entity_type_name: Optional[str] = None
    failure_detection: Optional[FailureDetectionTemplate] = None
    properties: Optional[List[AssetTemplateProperties]] = None


class AssetOEE(DataModelBase):
    """
    AssetOEE object.

    Parameters
    ----------
    asset_name: Optional[str]
    oee_calculation: Optional[OEECalculation]
    oee_thresholds: Optional[OEEThresholds]

    """

    asset_name: Optional[str] = None
    oee_calculation: Optional[OEECalculation] = None
    oee_thresholds: Optional[OEEThresholds] = None


class AssetOEECreate(DataModelBase):
    """
    AssetOEECreate object.

    Parameters
    ----------
    assets_oee: Optional[List[AssetOEE]]

    """

    assets_oee: Optional[List[AssetOEE]] = None


class AssetShiftCreate(DataModelBase):
    """
    AssetShiftCreate object.

    Parameters
    ----------
    production_info: Optional[ProductionInfo]
    shift_info: Optional[ShiftInfo]
    team_info: Optional[List[TeamMember]]

    """

    production_info: Optional[ProductionInfo] = None
    shift_info: Optional[ShiftInfo] = None
    team_info: Optional[List[TeamMember]] = None


class AssetTemplateHierarchy(DataModelBase):
    """
    AssetTemplateHierarchy object.

    Parameters
    ----------
    from_template_name: Optional[str]
    hierarchy: Optional[List[AssetTemplateHierarchy]]
    metrics: Optional[List[AssetMetricItem]]
    template: Optional[AnonymousTemplate]
    title: Optional[str]
    visualization: Optional[Visualization]

    """

    from_template_name: Optional[str] = None
    hierarchy: Optional[List[AssetTemplateHierarchy]] = None
    metrics: Optional[List[AssetMetricItem]] = None
    template: Optional[AnonymousTemplate] = None
    title: Optional[str] = None
    visualization: Optional[Visualization] = None


class AssetTemplateUpdate(DataModelBase):
    """
    AssetTemplateUpdate object.

    Parameters
    ----------
    asset_type_name: Optional[str]
    description: Optional[str]
    entity_type_name: Optional[str]
    failure_detection: Optional[FailureDetectionTemplate]
    hierarchy: Optional[List[AssetTemplateHierarchy]]
    hints: Optional[Dict[str, Any]]
    image_url: Optional[str]
    metrics: Optional[List[AssetMetricItem]]
    properties: Optional[List[AssetTemplateProperties]]
    title: Optional[str]
    visualization: Optional[Visualization]

    """

    asset_type_name: Optional[str] = None
    description: Optional[str] = None
    entity_type_name: Optional[str] = None
    failure_detection: Optional[FailureDetectionTemplate] = None
    hierarchy: Optional[List[AssetTemplateHierarchy]] = None
    hints: Optional[Dict[str, Any]] = None
    image_url: Optional[str] = None
    metrics: Optional[List[AssetMetricItem]] = None
    properties: Optional[List[AssetTemplateProperties]] = None
    title: Optional[str] = None
    visualization: Optional[Visualization] = None


class ClusterCreate(DataModelBase):
    """
    ClusterCreate object.

    Parameters
    ----------
    info: Optional[Dict[str, Any]]
    kelvin_info: Optional[Dict[str, Any]]
    kubeconfig: Optional[str]
    location: Optional[ClusterLocationItem]
    name: Optional[str]
    network_info: Optional[Dict[str, Any]]
    system_info: Optional[Dict[str, Any]]
    title: Optional[str]

    """

    info: Optional[Dict[str, Any]] = None
    kelvin_info: Optional[Dict[str, Any]] = None
    kubeconfig: Optional[str] = None
    location: Optional[ClusterLocationItem] = None
    name: Optional[str] = None
    network_info: Optional[Dict[str, Any]] = None
    system_info: Optional[Dict[str, Any]] = None
    title: Optional[str] = None


class ControlChangeStatus(DataModelBase):
    """
    ControlChangeStatus object.

    Parameters
    ----------
    id: Optional[str]
    payload: Optional[ControlChangeStatusPayload]
    resource: Optional[str]
    timestamp: Optional[datetime]
    trace_id: str

    """

    id: Optional[str] = None
    payload: Optional[ControlChangeStatusPayload] = None
    resource: Optional[str] = None
    timestamp: Optional[datetime] = None
    trace_id: str


class ControlChangeUpload(DataModelBase):
    """
    ControlChangeUpload object.

    Parameters
    ----------
    requests: Optional[List[ControlChangeUploadRequest]]
    statuses: Optional[List[ControlChangeStatus]]

    """

    requests: Optional[List[ControlChangeUploadRequest]] = None
    statuses: Optional[List[ControlChangeStatus]] = None


class DataLabelCluster(DataModelBase):
    """
    DataLabelCluster object.

    Parameters
    ----------
    end_date: Optional[datetime]
    label_names: Optional[List[str]]
    metrics: Optional[List[Metric]]
    start_date: Optional[datetime]
    time_bucket: Optional[str]

    """

    end_date: Optional[datetime] = None
    label_names: Optional[List[str]] = None
    metrics: Optional[List[Metric]] = None
    start_date: Optional[datetime] = None
    time_bucket: Optional[str] = None


class DataLabelCreate(DataModelBase):
    """
    DataLabelCreate object.

    Parameters
    ----------
    confidence: Optional[int]
    description: Optional[str]
    end_date: Optional[datetime]
    info: Optional[Dict[str, Any]]
    label_name: Optional[str]
    metrics: Optional[List[Metric]]
    source: Optional[DataLabelSource]
    start_date: Optional[datetime]
    validation: Optional[bool]

    """

    confidence: Optional[int] = None
    description: Optional[str] = Field(None, max_length=256)
    end_date: Optional[datetime] = None
    info: Optional[Dict[str, Any]] = None
    label_name: Optional[str] = Field(None, max_length=64)
    metrics: Optional[List[Metric]] = None
    source: Optional[DataLabelSource] = None
    start_date: Optional[datetime] = None
    validation: Optional[bool] = None


class DataLabelFilter(DataModelBase):
    """
    DataLabelFilter object.

    Parameters
    ----------
    label_names: Optional[List[str]]
    metrics: Optional[List[Metric]]
    search: Optional[List[str]]

    """

    label_names: Optional[List[str]] = None
    metrics: Optional[List[Metric]] = None
    search: Optional[List[str]] = None


class DataLabelRange(DataModelBase):
    """
    DataLabelRange object.

    Parameters
    ----------
    end_date: Optional[datetime]
    label_names: Optional[List[str]]
    metrics: Optional[List[Metric]]
    start_date: Optional[datetime]

    """

    end_date: Optional[datetime] = None
    label_names: Optional[List[str]] = None
    metrics: Optional[List[Metric]] = None
    start_date: Optional[datetime] = None


class DataTypeCreate(DataModelBase):
    """
    DataTypeCreate object.

    Parameters
    ----------
    icd: Optional[ICDPayload]
    schema_: Optional[Dict[str, Any]]
    source: Optional[str]

    """

    icd: Optional[ICDPayload] = None
    schema_: Optional[Dict[str, Any]] = Field(None, alias="schema")
    source: Optional[str] = None


class EntityReference(DataModelBase):
    """
    EntityReference object.

    Parameters
    ----------
    metric: Optional[ReferenceMetric]
    name: Optional[str]
    title: Optional[str]
    type: Optional[str]
    visualization: Optional[Dict[str, Any]]

    """

    metric: Optional[ReferenceMetric] = None
    name: Optional[str] = None
    title: Optional[str] = None
    type: Optional[str] = None
    visualization: Optional[Dict[str, Any]] = None


class FailureDetection(DataModelBase):
    """
    FailureDetection object.

    Parameters
    ----------
    enabled: Optional[bool]
    failure_class_name: Optional[str]
    properties: Optional[List[FailureDetectionProperty]]

    """

    enabled: Optional[bool] = None
    failure_class_name: Optional[str] = None
    properties: Optional[List[FailureDetectionProperty]] = None


class HierarchyUpdateItem(DataModelBase):
    """
    HierarchyUpdateItem object.

    Parameters
    ----------
    asset_template_name: Optional[str]
    asset_type_name: Optional[str]
    delete: Optional[bool]
    entity_type_name: Optional[str]
    failure_detection: Optional[FailureDetection]
    hierarchy: Optional[List[HierarchyUpdateItem]]
    location: Optional[AssetLocationItem]
    metrics: Optional[List[AssetMetricItem]]
    name: Optional[str]
    properties: Optional[List[AssetPropertyCreate]]
    title: Optional[str]
    visualization: Optional[Visualization]

    """

    asset_template_name: Optional[str] = None
    asset_type_name: Optional[str] = Field(None, max_length=64)
    delete: Optional[bool] = None
    entity_type_name: Optional[str] = None
    failure_detection: Optional[FailureDetection] = None
    hierarchy: Optional[List[HierarchyUpdateItem]] = None
    location: Optional[AssetLocationItem] = None
    metrics: Optional[List[AssetMetricItem]] = None
    name: Optional[str] = Field(None, max_length=64)
    properties: Optional[List[AssetPropertyCreate]] = None
    title: Optional[str] = Field(None, max_length=64)
    visualization: Optional[Visualization] = None


class KelvinACPInstanceSettingUpdate(DataModelBase):
    """
    KelvinACPInstanceSettingUpdate object.

    Parameters
    ----------
    payload: Optional[ACPSetting]

    """

    payload: Optional[ACPSetting] = None


class LabelMetadataBulkCreate(BaseModelRoot[LabelMetadataBulkCreateItem]):
    """
    LabelMetadataBulkCreate object.

    Parameters
    ----------
    __root__: List[LabelMetadataBulkCreateItem]

    """

    __root__: List[LabelMetadataBulkCreateItem]


class LabelMetadataBulkDelete(BaseModelRoot[LabelMetadataDeleteBulkItem]):
    """
    LabelMetadataBulkDelete object.

    Parameters
    ----------
    __root__: List[LabelMetadataDeleteBulkItem]

    """

    __root__: List[LabelMetadataDeleteBulkItem]


class MapEntity(DataModelBase):
    """
    MapEntity object.

    Parameters
    ----------
    name: Optional[str]
    references: Optional[List[EntityReference]]
    title: Optional[str]
    visualization: Optional[Dict[str, Any]]

    """

    name: Optional[str] = None
    references: Optional[List[EntityReference]] = None
    title: Optional[str] = None
    visualization: Optional[Dict[str, Any]] = None


class MapUpdate(DataModelBase):
    """
    MapUpdate object.

    Parameters
    ----------
    entities: Optional[List[MapEntity]]
    relationships: Optional[List[MapRelationship]]

    """

    entities: Optional[List[MapEntity]] = None
    relationships: Optional[List[MapRelationship]] = None


class NotificationsUserSetting(DataModelBase):
    """
    NotificationsUserSetting object.

    Parameters
    ----------
    alarms: Optional[Dict[str, AlarmNotificationsUserSetting]]

    """

    alarms: Optional[Dict[str, AlarmNotificationsUserSetting]] = None


class NotificationsUserSettingUpdate(DataModelBase):
    """
    NotificationsUserSettingUpdate object.

    Parameters
    ----------
    payload: Optional[NotificationsUserSetting]

    """

    payload: Optional[NotificationsUserSetting] = None


class StorageBulkCreate(DataModelBase):
    """
    StorageBulkCreate object.

    Parameters
    ----------
    data: List[StorageCreate]

    """

    data: List[StorageCreate]


class StorageLast(DataModelBase):
    """
    StorageLast object.

    Parameters
    ----------
    selectors: List[StorageSelector]

    """

    selectors: List[StorageSelector]


class StorageRangeAdvanced(DataModelBase):
    """
    StorageRangeAdvanced object.

    Parameters
    ----------
    agg: Optional[str]
    end_time: datetime
    fill: Optional[str]
    group_by_selector: Optional[bool]
    order: Optional[Order]
    selectors: List[StorageSelector]
    start_time: datetime
    time_bucket: Optional[str]
    time_shift: Optional[str]

    """

    agg: Optional[str] = None
    end_time: datetime = Field(..., example="2022-01-13T12:00:00.000000Z")
    fill: Optional[str] = None
    group_by_selector: Optional[bool] = None
    order: Optional[Order] = None
    selectors: List[StorageSelector]
    start_time: datetime = Field(..., example="2022-01-13T12:00:00.000000Z")
    time_bucket: Optional[str] = None
    time_shift: Optional[str] = None


class AssetCreate(DataModelBase):
    """
    AssetCreate object.

    Parameters
    ----------
    asset_template_name: Optional[str]
    asset_type_name: Optional[str]
    entity_type_name: Optional[str]
    failure_detection: Optional[FailureDetection]
    hierarchy: Optional[List[AssetCreate]]
    location: Optional[AssetLocationItem]
    metrics: Optional[List[AssetMetricItem]]
    name: Optional[str]
    properties: Optional[List[AssetPropertyCreate]]
    title: Optional[str]
    visualization: Optional[Visualization]

    """

    asset_template_name: Optional[str] = None
    asset_type_name: Optional[str] = Field(None, max_length=64)
    entity_type_name: Optional[str] = None
    failure_detection: Optional[FailureDetection] = None
    hierarchy: Optional[List[AssetCreate]] = None
    location: Optional[AssetLocationItem] = None
    metrics: Optional[List[AssetMetricItem]] = None
    name: Optional[str] = Field(None, max_length=64)
    properties: Optional[List[AssetPropertyCreate]] = None
    title: Optional[str] = Field(None, max_length=64)
    visualization: Optional[Visualization] = None


class AssetCreateWithParent(DataModelBase):
    """
    AssetCreateWithParent object.

    Parameters
    ----------
    asset_template_name: Optional[str]
    asset_type_name: Optional[str]
    entity_type_name: Optional[str]
    failure_detection: Optional[FailureDetection]
    hierarchy: Optional[List[AssetCreate]]
    location: Optional[AssetLocationItem]
    metrics: Optional[List[AssetMetricItem]]
    name: Optional[str]
    parent_name: Optional[str]
    properties: Optional[List[AssetPropertyCreate]]
    title: Optional[str]
    visualization: Optional[Visualization]

    """

    asset_template_name: Optional[str] = None
    asset_type_name: Optional[str] = Field(None, max_length=64)
    entity_type_name: Optional[str] = None
    failure_detection: Optional[FailureDetection] = None
    hierarchy: Optional[List[AssetCreate]] = None
    location: Optional[AssetLocationItem] = None
    metrics: Optional[List[AssetMetricItem]] = None
    name: Optional[str] = Field(None, max_length=64)
    parent_name: Optional[str] = Field(None, max_length=64)
    properties: Optional[List[AssetPropertyCreate]] = None
    title: Optional[str] = Field(None, max_length=64)
    visualization: Optional[Visualization] = None


class AssetTemplateCreate(DataModelBase):
    """
    AssetTemplateCreate object.

    Parameters
    ----------
    asset_type_name: Optional[str]
    description: Optional[str]
    entity_type_name: Optional[str]
    failure_detection: Optional[FailureDetectionTemplate]
    hierarchy: Optional[List[AssetTemplateHierarchy]]
    hints: Optional[Dict[str, Any]]
    image_url: Optional[str]
    metrics: Optional[List[AssetMetricItem]]
    name: Optional[str]
    properties: Optional[List[AssetTemplateProperties]]
    title: Optional[str]
    visualization: Optional[Visualization]

    """

    asset_type_name: Optional[str] = None
    description: Optional[str] = None
    entity_type_name: Optional[str] = None
    failure_detection: Optional[FailureDetectionTemplate] = None
    hierarchy: Optional[List[AssetTemplateHierarchy]] = None
    hints: Optional[Dict[str, Any]] = None
    image_url: Optional[str] = None
    metrics: Optional[List[AssetMetricItem]] = None
    name: Optional[str] = None
    properties: Optional[List[AssetTemplateProperties]] = None
    title: Optional[str] = None
    visualization: Optional[Visualization] = None


class AssetUpdate(DataModelBase):
    """
    AssetUpdate object.

    Parameters
    ----------
    asset_template_name: Optional[str]
    asset_type_name: Optional[str]
    failure_detection: Optional[FailureDetection]
    hierarchy: Optional[List[AssetCreate]]
    location: Optional[AssetLocationItem]
    metrics: Optional[List[AssetMetricItem]]
    properties: Optional[List[AssetPropertyCreate]]
    title: Optional[str]
    visualization: Optional[Visualization]

    """

    asset_template_name: Optional[str] = None
    asset_type_name: Optional[str] = Field(None, max_length=64)
    failure_detection: Optional[FailureDetection] = None
    hierarchy: Optional[List[AssetCreate]] = None
    location: Optional[AssetLocationItem] = None
    metrics: Optional[List[AssetMetricItem]] = None
    properties: Optional[List[AssetPropertyCreate]] = None
    title: Optional[str] = Field(None, max_length=64)
    visualization: Optional[Visualization] = None


class HierarchyUpdate(DataModelBase):
    """
    HierarchyUpdate object.

    Parameters
    ----------
    data: Optional[List[HierarchyUpdateItem]]

    """

    data: Optional[List[HierarchyUpdateItem]] = None


class MapCreate(DataModelBase):
    """
    MapCreate object.

    Parameters
    ----------
    entities: Optional[List[MapEntity]]
    name: Optional[str]
    relationships: Optional[List[MapRelationship]]
    title: Optional[str]

    """

    entities: Optional[List[MapEntity]] = None
    name: Optional[str] = None
    relationships: Optional[List[MapRelationship]] = None
    title: Optional[str] = None


AssetTemplateHierarchy.update_forward_refs()
HierarchyUpdateItem.update_forward_refs()
AssetCreate.update_forward_refs()
