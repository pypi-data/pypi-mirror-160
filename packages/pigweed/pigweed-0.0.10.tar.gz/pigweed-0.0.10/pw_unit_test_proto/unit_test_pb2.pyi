"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class TestCaseResult(_TestCaseResult, metaclass=_TestCaseResultEnumTypeWrapper):
    pass
class _TestCaseResult:
    V = typing.NewType('V', builtins.int)
class _TestCaseResultEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TestCaseResult.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    SUCCESS = TestCaseResult.V(0)
    FAILURE = TestCaseResult.V(1)
    SKIPPED = TestCaseResult.V(2)

SUCCESS = TestCaseResult.V(0)
FAILURE = TestCaseResult.V(1)
SKIPPED = TestCaseResult.V(2)
global___TestCaseResult = TestCaseResult


class TestCaseDescriptor(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SUITE_NAME_FIELD_NUMBER: builtins.int
    TEST_NAME_FIELD_NUMBER: builtins.int
    FILE_NAME_FIELD_NUMBER: builtins.int
    # Name of the test suite to which this test case belongs.
    suite_name: typing.Text = ...
    # Name of the test case.
    test_name: typing.Text = ...
    # Path to the file in which the test case is defined.
    file_name: typing.Text = ...
    def __init__(self,
        *,
        suite_name : typing.Text = ...,
        test_name : typing.Text = ...,
        file_name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"file_name",b"file_name",u"suite_name",b"suite_name",u"test_name",b"test_name"]) -> None: ...
global___TestCaseDescriptor = TestCaseDescriptor

class TestCaseExpectation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EXPRESSION_FIELD_NUMBER: builtins.int
    EVALUATED_EXPRESSION_FIELD_NUMBER: builtins.int
    LINE_NUMBER_FIELD_NUMBER: builtins.int
    SUCCESS_FIELD_NUMBER: builtins.int
    # The source code for the expression which was run.
    expression: typing.Text = ...
    # The expression with arguments evaluated.
    evaluated_expression: typing.Text = ...
    # Line number at which the expectation is located.
    line_number: builtins.int = ...
    # Whether the expectation succeeded.
    success: builtins.bool = ...
    def __init__(self,
        *,
        expression : typing.Text = ...,
        evaluated_expression : typing.Text = ...,
        line_number : builtins.int = ...,
        success : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"evaluated_expression",b"evaluated_expression",u"expression",b"expression",u"line_number",b"line_number",u"success",b"success"]) -> None: ...
global___TestCaseExpectation = TestCaseExpectation

class TestRunStart(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___TestRunStart = TestRunStart

class TestRunEnd(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PASSED_FIELD_NUMBER: builtins.int
    FAILED_FIELD_NUMBER: builtins.int
    SKIPPED_FIELD_NUMBER: builtins.int
    DISABLED_FIELD_NUMBER: builtins.int
    passed: builtins.int = ...
    failed: builtins.int = ...
    skipped: builtins.int = ...
    disabled: builtins.int = ...
    def __init__(self,
        *,
        passed : builtins.int = ...,
        failed : builtins.int = ...,
        skipped : builtins.int = ...,
        disabled : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"disabled",b"disabled",u"failed",b"failed",u"passed",b"passed",u"skipped",b"skipped"]) -> None: ...
global___TestRunEnd = TestRunEnd

class Event(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TEST_RUN_START_FIELD_NUMBER: builtins.int
    TEST_RUN_END_FIELD_NUMBER: builtins.int
    TEST_CASE_START_FIELD_NUMBER: builtins.int
    TEST_CASE_END_FIELD_NUMBER: builtins.int
    TEST_CASE_DISABLED_FIELD_NUMBER: builtins.int
    TEST_CASE_EXPECTATION_FIELD_NUMBER: builtins.int
    # Unit test run has started.
    @property
    def test_run_start(self) -> global___TestRunStart: ...
    # Unit test run has ended.
    @property
    def test_run_end(self) -> global___TestRunEnd: ...
    # Start of a test case.
    @property
    def test_case_start(self) -> global___TestCaseDescriptor: ...
    # End of a test case.
    test_case_end: global___TestCaseResult.V = ...
    # Encountered a disabled test case.
    @property
    def test_case_disabled(self) -> global___TestCaseDescriptor: ...
    # Expectation statement within a test case.
    @property
    def test_case_expectation(self) -> global___TestCaseExpectation: ...
    def __init__(self,
        *,
        test_run_start : typing.Optional[global___TestRunStart] = ...,
        test_run_end : typing.Optional[global___TestRunEnd] = ...,
        test_case_start : typing.Optional[global___TestCaseDescriptor] = ...,
        test_case_end : global___TestCaseResult.V = ...,
        test_case_disabled : typing.Optional[global___TestCaseDescriptor] = ...,
        test_case_expectation : typing.Optional[global___TestCaseExpectation] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"test_case_disabled",b"test_case_disabled",u"test_case_end",b"test_case_end",u"test_case_expectation",b"test_case_expectation",u"test_case_start",b"test_case_start",u"test_run_end",b"test_run_end",u"test_run_start",b"test_run_start",u"type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"test_case_disabled",b"test_case_disabled",u"test_case_end",b"test_case_end",u"test_case_expectation",b"test_case_expectation",u"test_case_start",b"test_case_start",u"test_run_end",b"test_run_end",u"test_run_start",b"test_run_start",u"type",b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal[u"type",b"type"]) -> typing.Optional[typing_extensions.Literal["test_run_start","test_run_end","test_case_start","test_case_end","test_case_disabled","test_case_expectation"]]: ...
global___Event = Event

class TestRunRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REPORT_PASSED_EXPECTATIONS_FIELD_NUMBER: builtins.int
    TEST_SUITE_FIELD_NUMBER: builtins.int
    # Whether to send expectation events for successful checks.
    report_passed_expectations: builtins.bool = ...
    # Optional list of test suites to run.
    @property
    def test_suite(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        report_passed_expectations : builtins.bool = ...,
        test_suite : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"report_passed_expectations",b"report_passed_expectations",u"test_suite",b"test_suite"]) -> None: ...
global___TestRunRequest = TestRunRequest
