"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import intentionet.bfe.proto.datamodel.trace_tree_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class PacketHeaderInput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SRC_IP_FIELD_NUMBER: builtins.int
    DST_IP_FIELD_NUMBER: builtins.int
    DSCP_FIELD_NUMBER: builtins.int
    ECN_FIELD_NUMBER: builtins.int
    FRAGMENT_OFFSET_FIELD_NUMBER: builtins.int
    PACKET_LENGTH_FIELD_NUMBER: builtins.int
    IP_PROTOCOL_FIELD_NUMBER: builtins.int
    SRC_PORT_FIELD_NUMBER: builtins.int
    DST_PORT_FIELD_NUMBER: builtins.int
    ICMP_CODE_FIELD_NUMBER: builtins.int
    ICMP_TYPE_FIELD_NUMBER: builtins.int
    TCP_FLAGS_FIELD_NUMBER: builtins.int
    src_ip: typing.Text
    dst_ip: typing.Text
    dscp: typing.Text
    ecn: typing.Text
    fragment_offset: typing.Text
    packet_length: typing.Text
    ip_protocol: typing.Text
    src_port: typing.Text
    dst_port: typing.Text
    icmp_code: typing.Text
    icmp_type: typing.Text
    tcp_flags: typing.Text
    def __init__(self,
        *,
        src_ip: typing.Text = ...,
        dst_ip: typing.Text = ...,
        dscp: typing.Text = ...,
        ecn: typing.Text = ...,
        fragment_offset: typing.Text = ...,
        packet_length: typing.Text = ...,
        ip_protocol: typing.Text = ...,
        src_port: typing.Text = ...,
        dst_port: typing.Text = ...,
        icmp_code: typing.Text = ...,
        icmp_type: typing.Text = ...,
        tcp_flags: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dscp",b"dscp","dst_ip",b"dst_ip","dst_port",b"dst_port","ecn",b"ecn","fragment_offset",b"fragment_offset","icmp_code",b"icmp_code","icmp_type",b"icmp_type","ip_protocol",b"ip_protocol","packet_length",b"packet_length","src_ip",b"src_ip","src_port",b"src_port","tcp_flags",b"tcp_flags"]) -> None: ...
global___PacketHeaderInput = PacketHeaderInput

class GetTestFiltersRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FILTER_FIELD_NUMBER: builtins.int
    NETWORK_NAME_FIELD_NUMBER: builtins.int
    SNAPSHOT_NAME_FIELD_NUMBER: builtins.int
    NODE_FIELD_NUMBER: builtins.int
    INGRESS_INTERFACE_FIELD_NUMBER: builtins.int
    PACKET_HEADER_INPUT_FIELD_NUMBER: builtins.int
    filter: typing.Text
    network_name: typing.Text
    snapshot_name: typing.Text
    node: typing.Text
    ingress_interface: typing.Text
    @property
    def packet_header_input(self) -> global___PacketHeaderInput: ...
    def __init__(self,
        *,
        filter: typing.Text = ...,
        network_name: typing.Text = ...,
        snapshot_name: typing.Text = ...,
        node: typing.Text = ...,
        ingress_interface: typing.Text = ...,
        packet_header_input: typing.Optional[global___PacketHeaderInput] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["packet_header_input",b"packet_header_input"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","ingress_interface",b"ingress_interface","network_name",b"network_name","node",b"node","packet_header_input",b"packet_header_input","snapshot_name",b"snapshot_name"]) -> None: ...
global___GetTestFiltersRequest = GetTestFiltersRequest

class GetTestFiltersResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MATCHED_LINE_FIELD_NUMBER: builtins.int
    TRACE_TREE_FIELD_NUMBER: builtins.int
    matched_line: typing.Text
    @property
    def trace_tree(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[intentionet.bfe.proto.datamodel.trace_tree_pb2.TraceTree]: ...
    def __init__(self,
        *,
        matched_line: typing.Text = ...,
        trace_tree: typing.Optional[typing.Iterable[intentionet.bfe.proto.datamodel.trace_tree_pb2.TraceTree]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["matched_line",b"matched_line","trace_tree",b"trace_tree"]) -> None: ...
global___GetTestFiltersResponse = GetTestFiltersResponse
