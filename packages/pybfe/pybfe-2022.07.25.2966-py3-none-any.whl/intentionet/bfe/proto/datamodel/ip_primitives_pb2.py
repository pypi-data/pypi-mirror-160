# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: intentionet/bfe/proto/datamodel/ip_primitives.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n3intentionet/bfe/proto/datamodel/ip_primitives.proto\x12\x19\x63om.intentionet.datamodel\"\x1c\n\x08IcmpCode\x12\x10\n\x03num\x18\x01 \x01(\rR\x03num\"\x1c\n\x08IcmpType\x12\x10\n\x03num\x18\x01 \x01(\rR\x03num\".\n\x02Ip\x12\x14\n\x03val\x18\x01 \x01(\rB\x02\x18\x01R\x03val\x12\x12\n\x04\x62its\x18\x02 \x01(\x07R\x04\x62its\"l\n\x10InterfaceAddress\x12\x37\n\x07\x61\x64\x64ress\x18\x01 \x01(\x0b\x32\x1d.com.intentionet.datamodel.IpR\x07\x61\x64\x64ress\x12\x1f\n\x0bsubnet_mask\x18\x02 \x01(\rR\nsubnetMask\"W\n\x08IpPrefix\x12\x37\n\x07network\x18\x01 \x01(\x0b\x32\x1d.com.intentionet.datamodel.IpR\x07network\x12\x12\n\x04mask\x18\x02 \x01(\rR\x04mask\"8\n\nIpProtocol\x12\x16\n\x06number\x18\x01 \x01(\rR\x06number\x12\x12\n\x04name\x18\x02 \x01(\tR\x04name\",\n\x04Port\x12\x10\n\x03num\x18\x01 \x01(\rR\x03num\x12\x12\n\x04name\x18\x02 \x01(\tR\x04name\"\x9a\x01\n\x08TcpFlags\x12\x10\n\x03\x61\x63k\x18\x01 \x01(\x08R\x03\x61\x63k\x12\x10\n\x03\x63wr\x18\x02 \x01(\x08R\x03\x63wr\x12\x10\n\x03\x65\x63\x65\x18\x03 \x01(\x08R\x03\x65\x63\x65\x12\x10\n\x03\x66in\x18\x04 \x01(\x08R\x03\x66in\x12\x10\n\x03psh\x18\x05 \x01(\x08R\x03psh\x12\x10\n\x03rst\x18\x06 \x01(\x08R\x03rst\x12\x10\n\x03syn\x18\x07 \x01(\x08R\x03syn\x12\x10\n\x03urg\x18\x08 \x01(\x08R\x03urgB\x11P\x01Z\rip_primitivesb\x06proto3')



_ICMPCODE = DESCRIPTOR.message_types_by_name['IcmpCode']
_ICMPTYPE = DESCRIPTOR.message_types_by_name['IcmpType']
_IP = DESCRIPTOR.message_types_by_name['Ip']
_INTERFACEADDRESS = DESCRIPTOR.message_types_by_name['InterfaceAddress']
_IPPREFIX = DESCRIPTOR.message_types_by_name['IpPrefix']
_IPPROTOCOL = DESCRIPTOR.message_types_by_name['IpProtocol']
_PORT = DESCRIPTOR.message_types_by_name['Port']
_TCPFLAGS = DESCRIPTOR.message_types_by_name['TcpFlags']
IcmpCode = _reflection.GeneratedProtocolMessageType('IcmpCode', (_message.Message,), {
  'DESCRIPTOR' : _ICMPCODE,
  '__module__' : 'intentionet.bfe.proto.datamodel.ip_primitives_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.datamodel.IcmpCode)
  })
_sym_db.RegisterMessage(IcmpCode)

IcmpType = _reflection.GeneratedProtocolMessageType('IcmpType', (_message.Message,), {
  'DESCRIPTOR' : _ICMPTYPE,
  '__module__' : 'intentionet.bfe.proto.datamodel.ip_primitives_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.datamodel.IcmpType)
  })
_sym_db.RegisterMessage(IcmpType)

Ip = _reflection.GeneratedProtocolMessageType('Ip', (_message.Message,), {
  'DESCRIPTOR' : _IP,
  '__module__' : 'intentionet.bfe.proto.datamodel.ip_primitives_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.datamodel.Ip)
  })
_sym_db.RegisterMessage(Ip)

InterfaceAddress = _reflection.GeneratedProtocolMessageType('InterfaceAddress', (_message.Message,), {
  'DESCRIPTOR' : _INTERFACEADDRESS,
  '__module__' : 'intentionet.bfe.proto.datamodel.ip_primitives_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.datamodel.InterfaceAddress)
  })
_sym_db.RegisterMessage(InterfaceAddress)

IpPrefix = _reflection.GeneratedProtocolMessageType('IpPrefix', (_message.Message,), {
  'DESCRIPTOR' : _IPPREFIX,
  '__module__' : 'intentionet.bfe.proto.datamodel.ip_primitives_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.datamodel.IpPrefix)
  })
_sym_db.RegisterMessage(IpPrefix)

IpProtocol = _reflection.GeneratedProtocolMessageType('IpProtocol', (_message.Message,), {
  'DESCRIPTOR' : _IPPROTOCOL,
  '__module__' : 'intentionet.bfe.proto.datamodel.ip_primitives_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.datamodel.IpProtocol)
  })
_sym_db.RegisterMessage(IpProtocol)

Port = _reflection.GeneratedProtocolMessageType('Port', (_message.Message,), {
  'DESCRIPTOR' : _PORT,
  '__module__' : 'intentionet.bfe.proto.datamodel.ip_primitives_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.datamodel.Port)
  })
_sym_db.RegisterMessage(Port)

TcpFlags = _reflection.GeneratedProtocolMessageType('TcpFlags', (_message.Message,), {
  'DESCRIPTOR' : _TCPFLAGS,
  '__module__' : 'intentionet.bfe.proto.datamodel.ip_primitives_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.datamodel.TcpFlags)
  })
_sym_db.RegisterMessage(TcpFlags)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'P\001Z\rip_primitives'
  _IP.fields_by_name['val']._options = None
  _IP.fields_by_name['val']._serialized_options = b'\030\001'
  _ICMPCODE._serialized_start=82
  _ICMPCODE._serialized_end=110
  _ICMPTYPE._serialized_start=112
  _ICMPTYPE._serialized_end=140
  _IP._serialized_start=142
  _IP._serialized_end=188
  _INTERFACEADDRESS._serialized_start=190
  _INTERFACEADDRESS._serialized_end=298
  _IPPREFIX._serialized_start=300
  _IPPREFIX._serialized_end=387
  _IPPROTOCOL._serialized_start=389
  _IPPROTOCOL._serialized_end=445
  _PORT._serialized_start=447
  _PORT._serialized_end=491
  _TCPFLAGS._serialized_start=494
  _TCPFLAGS._serialized_end=648
# @@protoc_insertion_point(module_scope)
