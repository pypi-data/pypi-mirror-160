"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class LinkFragment(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TEXT_FIELD_NUMBER: builtins.int
    VS_ID_FIELD_NUMBER: builtins.int
    text: typing.Text
    @property
    def vs_id(self) -> global___VendorStructureId: ...
    def __init__(self,
        *,
        text: typing.Text = ...,
        vs_id: typing.Optional[global___VendorStructureId] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["vs_id",b"vs_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["text",b"text","vs_id",b"vs_id"]) -> None: ...
global___LinkFragment = LinkFragment

class VendorStructureId(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FILE_NAME_FIELD_NUMBER: builtins.int
    STRUCTURE_TYPE_FIELD_NUMBER: builtins.int
    STRUCTURE_NAME_FIELD_NUMBER: builtins.int
    file_name: typing.Text
    structure_type: typing.Text
    structure_name: typing.Text
    def __init__(self,
        *,
        file_name: typing.Text = ...,
        structure_type: typing.Text = ...,
        structure_name: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["file_name",b"file_name","structure_name",b"structure_name","structure_type",b"structure_type"]) -> None: ...
global___VendorStructureId = VendorStructureId

class TraceFragment(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    STRING_FRAGMENT_FIELD_NUMBER: builtins.int
    LINK_FRAGMENT_FIELD_NUMBER: builtins.int
    string_fragment: typing.Text
    @property
    def link_fragment(self) -> global___LinkFragment: ...
    def __init__(self,
        *,
        string_fragment: typing.Text = ...,
        link_fragment: typing.Optional[global___LinkFragment] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["link_fragment",b"link_fragment","string_fragment",b"string_fragment","type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["link_fragment",b"link_fragment","string_fragment",b"string_fragment","type",b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["type",b"type"]) -> typing.Optional[typing_extensions.Literal["string_fragment","link_fragment"]]: ...
global___TraceFragment = TraceFragment

class TraceTree(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TRACE_ELEMENT_FIELD_NUMBER: builtins.int
    CHILDREN_FIELD_NUMBER: builtins.int
    @property
    def trace_element(self) -> global___TraceElement: ...
    @property
    def children(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TraceTree]: ...
    def __init__(self,
        *,
        trace_element: typing.Optional[global___TraceElement] = ...,
        children: typing.Optional[typing.Iterable[global___TraceTree]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["trace_element",b"trace_element"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["children",b"children","trace_element",b"trace_element"]) -> None: ...
global___TraceTree = TraceTree

class TraceElement(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TRACE_FRAGMENTS_FIELD_NUMBER: builtins.int
    @property
    def trace_fragments(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TraceFragment]: ...
    def __init__(self,
        *,
        trace_fragments: typing.Optional[typing.Iterable[global___TraceFragment]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["trace_fragments",b"trace_fragments"]) -> None: ...
global___TraceElement = TraceElement
