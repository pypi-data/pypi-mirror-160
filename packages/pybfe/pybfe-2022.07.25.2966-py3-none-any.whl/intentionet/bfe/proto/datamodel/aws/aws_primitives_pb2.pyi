"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.empty_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import intentionet.bfe.proto.datamodel.ip_primitives_pb2
import intentionet.bfe.proto.datamodel.range_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Tag(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    key: typing.Text
    value: typing.Text
    def __init__(self,
        *,
        key: typing.Text = ...,
        value: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...
global___Tag = Tag

class AwsSubnet(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SUBNET_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    subnet_id: typing.Text
    name: typing.Text
    def __init__(self,
        *,
        subnet_id: typing.Text = ...,
        name: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","subnet_id",b"subnet_id"]) -> None: ...
global___AwsSubnet = AwsSubnet

class AwsNetworkInterface(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Address(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        PRIMARY_FIELD_NUMBER: builtins.int
        PRIVATE_IP_FIELD_NUMBER: builtins.int
        PUBLIC_IP_FIELD_NUMBER: builtins.int
        ELASTIC_IP_FIELD_NUMBER: builtins.int
        primary: builtins.bool
        @property
        def private_ip(self) -> intentionet.bfe.proto.datamodel.ip_primitives_pb2.Ip: ...
        @property
        def public_ip(self) -> intentionet.bfe.proto.datamodel.ip_primitives_pb2.Ip: ...
        @property
        def elastic_ip(self) -> global___AwsElasticIp: ...
        def __init__(self,
            *,
            primary: builtins.bool = ...,
            private_ip: typing.Optional[intentionet.bfe.proto.datamodel.ip_primitives_pb2.Ip] = ...,
            public_ip: typing.Optional[intentionet.bfe.proto.datamodel.ip_primitives_pb2.Ip] = ...,
            elastic_ip: typing.Optional[global___AwsElasticIp] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["elastic_ip",b"elastic_ip","private_ip",b"private_ip","public_ip",b"public_ip","public_ip_type",b"public_ip_type"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["elastic_ip",b"elastic_ip","primary",b"primary","private_ip",b"private_ip","public_ip",b"public_ip","public_ip_type",b"public_ip_type"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["public_ip_type",b"public_ip_type"]) -> typing.Optional[typing_extensions.Literal["public_ip","elastic_ip"]]: ...

    ENI_ID_FIELD_NUMBER: builtins.int
    ADDRESSES_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    eni_id: typing.Text
    @property
    def addresses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AwsNetworkInterface.Address]: ...
    name: typing.Text
    def __init__(self,
        *,
        eni_id: typing.Text = ...,
        addresses: typing.Optional[typing.Iterable[global___AwsNetworkInterface.Address]] = ...,
        name: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["addresses",b"addresses","eni_id",b"eni_id","name",b"name"]) -> None: ...
global___AwsNetworkInterface = AwsNetworkInterface

class AwsInstance(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    ENIS_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    instance_id: typing.Text
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Tag]: ...
    @property
    def enis(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AwsNetworkInterface]: ...
    name: typing.Text
    @property
    def location(self) -> global___AwsAccRegVpc: ...
    def __init__(self,
        *,
        instance_id: typing.Text = ...,
        tags: typing.Optional[typing.Iterable[global___Tag]] = ...,
        enis: typing.Optional[typing.Iterable[global___AwsNetworkInterface]] = ...,
        name: typing.Text = ...,
        location: typing.Optional[global___AwsAccRegVpc] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["location",b"location"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["enis",b"enis","instance_id",b"instance_id","location",b"location","name",b"name","tags",b"tags"]) -> None: ...
global___AwsInstance = AwsInstance

class AwsLoadBalancer(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ELB_ARN_FIELD_NUMBER: builtins.int
    DNS_NAME_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    elb_arn: typing.Text
    dns_name: typing.Text
    name: typing.Text
    def __init__(self,
        *,
        elb_arn: typing.Text = ...,
        dns_name: typing.Text = ...,
        name: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dns_name",b"dns_name","elb_arn",b"elb_arn","name",b"name"]) -> None: ...
global___AwsLoadBalancer = AwsLoadBalancer

class AwsTargetGroup(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TARGET_GROUP_ARN_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    target_group_arn: typing.Text
    name: typing.Text
    def __init__(self,
        *,
        target_group_arn: typing.Text = ...,
        name: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","target_group_arn",b"target_group_arn"]) -> None: ...
global___AwsTargetGroup = AwsTargetGroup

class AwsSecurityGroup(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Rule(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        IP_RANGES_FIELD_NUMBER: builtins.int
        GROUPS_FIELD_NUMBER: builtins.int
        ALL_TRAFFIC_FIELD_NUMBER: builtins.int
        TCP_FIELD_NUMBER: builtins.int
        UDP_FIELD_NUMBER: builtins.int
        ICMP_FIELD_NUMBER: builtins.int
        CUSTOM_PROTOCOL_FIELD_NUMBER: builtins.int
        @property
        def ip_ranges(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
        @property
        def groups(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
        @property
        def all_traffic(self) -> google.protobuf.empty_pb2.Empty: ...
        @property
        def tcp(self) -> global___ProtocolWithPortsDetail: ...
        @property
        def udp(self) -> global___ProtocolWithPortsDetail: ...
        @property
        def icmp(self) -> global___IcmpDetail: ...
        custom_protocol: typing.Text
        def __init__(self,
            *,
            ip_ranges: typing.Optional[typing.Iterable[typing.Text]] = ...,
            groups: typing.Optional[typing.Iterable[typing.Text]] = ...,
            all_traffic: typing.Optional[google.protobuf.empty_pb2.Empty] = ...,
            tcp: typing.Optional[global___ProtocolWithPortsDetail] = ...,
            udp: typing.Optional[global___ProtocolWithPortsDetail] = ...,
            icmp: typing.Optional[global___IcmpDetail] = ...,
            custom_protocol: typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["all_traffic",b"all_traffic","custom_protocol",b"custom_protocol","icmp",b"icmp","protocol",b"protocol","tcp",b"tcp","udp",b"udp"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["all_traffic",b"all_traffic","custom_protocol",b"custom_protocol","groups",b"groups","icmp",b"icmp","ip_ranges",b"ip_ranges","protocol",b"protocol","tcp",b"tcp","udp",b"udp"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["protocol",b"protocol"]) -> typing.Optional[typing_extensions.Literal["all_traffic","tcp","udp","icmp","custom_protocol"]]: ...

    SG_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    INBOUND_RULES_FIELD_NUMBER: builtins.int
    OUTBOUND_RULES_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    sg_id: typing.Text
    name: typing.Text
    @property
    def inbound_rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AwsSecurityGroup.Rule]: ...
    @property
    def outbound_rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AwsSecurityGroup.Rule]: ...
    @property
    def location(self) -> global___AwsAccRegVpc: ...
    def __init__(self,
        *,
        sg_id: typing.Text = ...,
        name: typing.Text = ...,
        inbound_rules: typing.Optional[typing.Iterable[global___AwsSecurityGroup.Rule]] = ...,
        outbound_rules: typing.Optional[typing.Iterable[global___AwsSecurityGroup.Rule]] = ...,
        location: typing.Optional[global___AwsAccRegVpc] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["location",b"location"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["inbound_rules",b"inbound_rules","location",b"location","name",b"name","outbound_rules",b"outbound_rules","sg_id",b"sg_id"]) -> None: ...
global___AwsSecurityGroup = AwsSecurityGroup

class ProtocolWithPortsDetail(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PORT_RANGE_FIELD_NUMBER: builtins.int
    @property
    def port_range(self) -> intentionet.bfe.proto.datamodel.range_pb2.IntRange: ...
    def __init__(self,
        *,
        port_range: typing.Optional[intentionet.bfe.proto.datamodel.range_pb2.IntRange] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["port_range",b"port_range"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["port_range",b"port_range"]) -> None: ...
global___ProtocolWithPortsDetail = ProtocolWithPortsDetail

class IcmpDetail(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TYPE_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    @property
    def type(self) -> intentionet.bfe.proto.datamodel.ip_primitives_pb2.IcmpType: ...
    @property
    def code(self) -> intentionet.bfe.proto.datamodel.ip_primitives_pb2.IcmpCode: ...
    def __init__(self,
        *,
        type: typing.Optional[intentionet.bfe.proto.datamodel.ip_primitives_pb2.IcmpType] = ...,
        code: typing.Optional[intentionet.bfe.proto.datamodel.ip_primitives_pb2.IcmpCode] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["code",b"code","type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["code",b"code","type",b"type"]) -> None: ...
global___IcmpDetail = IcmpDetail

class AwsAccount(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    id: typing.Text
    def __init__(self,
        *,
        id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id"]) -> None: ...
global___AwsAccount = AwsAccount

class AwsRegion(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text
    def __init__(self,
        *,
        name: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___AwsRegion = AwsRegion

class AwsVpc(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    id: typing.Text
    def __init__(self,
        *,
        id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id"]) -> None: ...
global___AwsVpc = AwsVpc

class AwsAccRegVpc(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ACCOUNT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    VPC_FIELD_NUMBER: builtins.int
    @property
    def account(self) -> global___AwsAccount: ...
    @property
    def region(self) -> global___AwsRegion: ...
    @property
    def vpc(self) -> global___AwsVpc: ...
    def __init__(self,
        *,
        account: typing.Optional[global___AwsAccount] = ...,
        region: typing.Optional[global___AwsRegion] = ...,
        vpc: typing.Optional[global___AwsVpc] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["account",b"account","region",b"region","vpc",b"vpc"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["account",b"account","region",b"region","vpc",b"vpc"]) -> None: ...
global___AwsAccRegVpc = AwsAccRegVpc

class AwsElasticIp(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PUBLIC_IP_FIELD_NUMBER: builtins.int
    ALLOCATION_ID_FIELD_NUMBER: builtins.int
    @property
    def public_ip(self) -> intentionet.bfe.proto.datamodel.ip_primitives_pb2.Ip: ...
    allocation_id: typing.Text
    def __init__(self,
        *,
        public_ip: typing.Optional[intentionet.bfe.proto.datamodel.ip_primitives_pb2.Ip] = ...,
        allocation_id: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["public_ip",b"public_ip"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["allocation_id",b"allocation_id","public_ip",b"public_ip"]) -> None: ...
global___AwsElasticIp = AwsElasticIp
