# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: intentionet/bfe/proto/datamodel/flow.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from intentionet.bfe.proto.datamodel import ip_primitives_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_ip__primitives__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n*intentionet/bfe/proto/datamodel/flow.proto\x12\x19\x63om.intentionet.datamodel\x1a\x33intentionet/bfe/proto/datamodel/ip_primitives.proto\"\xab\x01\n\nIcmpHeader\x12@\n\ticmp_type\x18\x01 \x01(\x0b\x32#.com.intentionet.datamodel.IcmpTypeR\x08icmpType\x12@\n\ticmp_code\x18\x02 \x01(\x0b\x32#.com.intentionet.datamodel.IcmpCodeR\x08icmpCode\x12\x19\n\x08\x61pp_name\x18\x03 \x01(\tR\x07\x61ppName\"\xc5\x01\n\tTcpHeader\x12:\n\x08src_port\x18\x01 \x01(\x0b\x32\x1f.com.intentionet.datamodel.PortR\x07srcPort\x12:\n\x08\x64st_port\x18\x02 \x01(\x0b\x32\x1f.com.intentionet.datamodel.PortR\x07\x64stPort\x12@\n\ttcp_flags\x18\x03 \x01(\x0b\x32#.com.intentionet.datamodel.TcpFlagsR\x08tcpFlags\"\x83\x01\n\tUdpHeader\x12:\n\x08src_port\x18\x01 \x01(\x0b\x32\x1f.com.intentionet.datamodel.PortR\x07srcPort\x12:\n\x08\x64st_port\x18\x02 \x01(\x0b\x32\x1f.com.intentionet.datamodel.PortR\x07\x64stPort\"\xe3\x04\n\x04\x46low\x12+\n\x11ingress_interface\x18\x01 \x01(\tR\x10ingressInterface\x12!\n\x0cingress_node\x18\x02 \x01(\tR\x0bingressNode\x12\x1f\n\x0bingress_vrf\x18\x03 \x01(\tR\ningressVrf\x12\x34\n\x06src_ip\x18\x04 \x01(\x0b\x32\x1d.com.intentionet.datamodel.IpR\x05srcIp\x12\x34\n\x06\x64st_ip\x18\x05 \x01(\x0b\x32\x1d.com.intentionet.datamodel.IpR\x05\x64stIp\x12\x12\n\x04\x64scp\x18\x06 \x01(\rR\x04\x64scp\x12\x10\n\x03\x65\x63n\x18\x07 \x01(\rR\x03\x65\x63n\x12\'\n\x0f\x66ragment_offset\x18\x08 \x01(\rR\x0e\x66ragmentOffset\x12#\n\rpacket_length\x18\t \x01(\rR\x0cpacketLength\x12\x46\n\x0bip_protocol\x18\n \x01(\x0b\x32%.com.intentionet.datamodel.IpProtocolR\nipProtocol\x12;\n\x04icmp\x18\x0b \x01(\x0b\x32%.com.intentionet.datamodel.IcmpHeaderH\x00R\x04icmp\x12\x38\n\x03tcp\x18\x0c \x01(\x0b\x32$.com.intentionet.datamodel.TcpHeaderH\x00R\x03tcp\x12\x38\n\x03udp\x18\r \x01(\x0b\x32$.com.intentionet.datamodel.UdpHeaderH\x00R\x03udpB\x11\n\x0fprotocol_header*\x8c\x03\n\x0f\x46lowDisposition\x12\x1c\n\x18\x46LOW_DISPOSITION_UNKNOWN\x10\x00\x12\x1d\n\x19\x46LOW_DISPOSITION_ACCEPTED\x10\x01\x12(\n$FLOW_DISPOSITION_DELIVERED_TO_SUBNET\x10\x02\x12\"\n\x1e\x46LOW_DISPOSITION_EXITS_NETWORK\x10\x03\x12\x1e\n\x1a\x46LOW_DISPOSITION_DENIED_IN\x10\x04\x12\x1f\n\x1b\x46LOW_DISPOSITION_DENIED_OUT\x10\x05\x12\x1d\n\x19\x46LOW_DISPOSITION_NO_ROUTE\x10\x06\x12 \n\x1c\x46LOW_DISPOSITION_NULL_ROUTED\x10\x07\x12)\n%FLOW_DISPOSITION_NEIGHBOR_UNREACHABLE\x10\x08\x12\x19\n\x15\x46LOW_DISPOSITION_LOOP\x10\t\x12&\n\"FLOW_DISPOSITION_INSUFFICIENT_INFO\x10\nB\x08P\x01Z\x04\x66lowb\x06proto3')

_FLOWDISPOSITION = DESCRIPTOR.enum_types_by_name['FlowDisposition']
FlowDisposition = enum_type_wrapper.EnumTypeWrapper(_FLOWDISPOSITION)
FLOW_DISPOSITION_UNKNOWN = 0
FLOW_DISPOSITION_ACCEPTED = 1
FLOW_DISPOSITION_DELIVERED_TO_SUBNET = 2
FLOW_DISPOSITION_EXITS_NETWORK = 3
FLOW_DISPOSITION_DENIED_IN = 4
FLOW_DISPOSITION_DENIED_OUT = 5
FLOW_DISPOSITION_NO_ROUTE = 6
FLOW_DISPOSITION_NULL_ROUTED = 7
FLOW_DISPOSITION_NEIGHBOR_UNREACHABLE = 8
FLOW_DISPOSITION_LOOP = 9
FLOW_DISPOSITION_INSUFFICIENT_INFO = 10


_ICMPHEADER = DESCRIPTOR.message_types_by_name['IcmpHeader']
_TCPHEADER = DESCRIPTOR.message_types_by_name['TcpHeader']
_UDPHEADER = DESCRIPTOR.message_types_by_name['UdpHeader']
_FLOW = DESCRIPTOR.message_types_by_name['Flow']
IcmpHeader = _reflection.GeneratedProtocolMessageType('IcmpHeader', (_message.Message,), {
  'DESCRIPTOR' : _ICMPHEADER,
  '__module__' : 'intentionet.bfe.proto.datamodel.flow_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.datamodel.IcmpHeader)
  })
_sym_db.RegisterMessage(IcmpHeader)

TcpHeader = _reflection.GeneratedProtocolMessageType('TcpHeader', (_message.Message,), {
  'DESCRIPTOR' : _TCPHEADER,
  '__module__' : 'intentionet.bfe.proto.datamodel.flow_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.datamodel.TcpHeader)
  })
_sym_db.RegisterMessage(TcpHeader)

UdpHeader = _reflection.GeneratedProtocolMessageType('UdpHeader', (_message.Message,), {
  'DESCRIPTOR' : _UDPHEADER,
  '__module__' : 'intentionet.bfe.proto.datamodel.flow_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.datamodel.UdpHeader)
  })
_sym_db.RegisterMessage(UdpHeader)

Flow = _reflection.GeneratedProtocolMessageType('Flow', (_message.Message,), {
  'DESCRIPTOR' : _FLOW,
  '__module__' : 'intentionet.bfe.proto.datamodel.flow_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.datamodel.Flow)
  })
_sym_db.RegisterMessage(Flow)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'P\001Z\004flow'
  _FLOWDISPOSITION._serialized_start=1249
  _FLOWDISPOSITION._serialized_end=1645
  _ICMPHEADER._serialized_start=127
  _ICMPHEADER._serialized_end=298
  _TCPHEADER._serialized_start=301
  _TCPHEADER._serialized_end=498
  _UDPHEADER._serialized_start=501
  _UDPHEADER._serialized_end=632
  _FLOW._serialized_start=635
  _FLOW._serialized_end=1246
# @@protoc_insertion_point(module_scope)
