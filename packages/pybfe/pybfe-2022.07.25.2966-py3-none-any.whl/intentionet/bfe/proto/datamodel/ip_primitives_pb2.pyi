"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class IcmpCode(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NUM_FIELD_NUMBER: builtins.int
    num: builtins.int
    def __init__(self,
        *,
        num: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["num",b"num"]) -> None: ...
global___IcmpCode = IcmpCode

class IcmpType(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NUM_FIELD_NUMBER: builtins.int
    num: builtins.int
    def __init__(self,
        *,
        num: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["num",b"num"]) -> None: ...
global___IcmpType = IcmpType

class Ip(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VAL_FIELD_NUMBER: builtins.int
    BITS_FIELD_NUMBER: builtins.int
    val: builtins.int
    bits: builtins.int
    def __init__(self,
        *,
        val: builtins.int = ...,
        bits: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["bits",b"bits","val",b"val"]) -> None: ...
global___Ip = Ip

class InterfaceAddress(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ADDRESS_FIELD_NUMBER: builtins.int
    SUBNET_MASK_FIELD_NUMBER: builtins.int
    @property
    def address(self) -> global___Ip: ...
    subnet_mask: builtins.int
    def __init__(self,
        *,
        address: typing.Optional[global___Ip] = ...,
        subnet_mask: builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["address",b"address"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["address",b"address","subnet_mask",b"subnet_mask"]) -> None: ...
global___InterfaceAddress = InterfaceAddress

class IpPrefix(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NETWORK_FIELD_NUMBER: builtins.int
    MASK_FIELD_NUMBER: builtins.int
    @property
    def network(self) -> global___Ip: ...
    mask: builtins.int
    def __init__(self,
        *,
        network: typing.Optional[global___Ip] = ...,
        mask: builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["network",b"network"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["mask",b"mask","network",b"network"]) -> None: ...
global___IpPrefix = IpPrefix

class IpProtocol(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NUMBER_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    number: builtins.int
    name: typing.Text
    def __init__(self,
        *,
        number: builtins.int = ...,
        name: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","number",b"number"]) -> None: ...
global___IpProtocol = IpProtocol

class Port(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NUM_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    num: builtins.int
    name: typing.Text
    def __init__(self,
        *,
        num: builtins.int = ...,
        name: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","num",b"num"]) -> None: ...
global___Port = Port

class TcpFlags(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ACK_FIELD_NUMBER: builtins.int
    CWR_FIELD_NUMBER: builtins.int
    ECE_FIELD_NUMBER: builtins.int
    FIN_FIELD_NUMBER: builtins.int
    PSH_FIELD_NUMBER: builtins.int
    RST_FIELD_NUMBER: builtins.int
    SYN_FIELD_NUMBER: builtins.int
    URG_FIELD_NUMBER: builtins.int
    ack: builtins.bool
    cwr: builtins.bool
    ece: builtins.bool
    fin: builtins.bool
    psh: builtins.bool
    rst: builtins.bool
    syn: builtins.bool
    urg: builtins.bool
    def __init__(self,
        *,
        ack: builtins.bool = ...,
        cwr: builtins.bool = ...,
        ece: builtins.bool = ...,
        fin: builtins.bool = ...,
        psh: builtins.bool = ...,
        rst: builtins.bool = ...,
        syn: builtins.bool = ...,
        urg: builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ack",b"ack","cwr",b"cwr","ece",b"ece","fin",b"fin","psh",b"psh","rst",b"rst","syn",b"syn","urg",b"urg"]) -> None: ...
global___TcpFlags = TcpFlags
