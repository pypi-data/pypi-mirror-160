# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: intentionet/bfe/proto/assertions/filters.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from intentionet.bfe.proto.assertions import parameters_pb2 as intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2
from intentionet.bfe.proto.assertions import violations_pb2 as intentionet_dot_bfe_dot_proto_dot_assertions_dot_violations__pb2
from intentionet.bfe.proto.datamodel import config_text_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_config__text__pb2
from intentionet.bfe.proto.datamodel import device_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_device__pb2
from intentionet.bfe.proto.datamodel import flow_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_flow__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n.intentionet/bfe/proto/assertions/filters.proto\x12\x1e\x63om.intentionet.bfe.assertions\x1a\x31intentionet/bfe/proto/assertions/parameters.proto\x1a\x31intentionet/bfe/proto/assertions/violations.proto\x1a\x31intentionet/bfe/proto/datamodel/config_text.proto\x1a,intentionet/bfe/proto/datamodel/device.proto\x1a*intentionet/bfe/proto/datamodel/flow.proto\"\xab\x03\n)CrossZonePolicyFiltersFlowsAssertionInput\x12N\n\tfirewalls\x18\x01 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DeviceFilterExprR\tfirewalls\x12\x44\n\x05\x66lows\x18\x02 \x01(\x0b\x32..com.intentionet.bfe.assertions.FlowFilterExprR\x05\x66lows\x12M\n\x04\x66rom\x18\x03 \x01(\x0b\x32\x39.com.intentionet.bfe.assertions.FirewallLocationMatchExprR\x04\x66rom\x12I\n\x02to\x18\x04 \x01(\x0b\x32\x39.com.intentionet.bfe.assertions.FirewallLocationMatchExprR\x02to\x12N\n\x06\x65xpect\x18\x05 \x01(\x0b\x32\x36.com.intentionet.bfe.assertions.FirewallBehaviorExpectR\x06\x65xpect\"\xea\t\n*CrossZonePolicyFiltersFlowsAssertionResult\x12p\n\tviolators\x18\x01 \x03(\x0b\x32R.com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResult.ElementR\tviolators\x12r\n\nconformers\x18\x05 \x03(\x0b\x32R.com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResult.ElementR\nconformers\x12\x33\n\x15violator_descriptions\x18\x04 \x03(\tR\x14violatorDescriptions\x1a\x82\x04\n\x07\x45lement\x12\x39\n\x06\x64\x65vice\x18\x01 \x01(\x0b\x32!.com.intentionet.datamodel.DeviceR\x06\x64\x65vice\x12\x44\n\x06\x61\x63tion\x18\x03 \x01(\x0e\x32,.com.intentionet.bfe.assertions.FilterActionR\x06\x61\x63tion\x12\x16\n\x06\x66ilter\x18\x04 \x01(\tR\x06\x66ilter\x12]\n\x11\x64\x65scription_index\x18\x06 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DescriptionIndexR\x10\x64\x65scriptionIndex\x12\x33\n\x04\x66low\x18\x02 \x01(\x0b\x32\x1f.com.intentionet.datamodel.FlowR\x04\x66low\x12T\n\x0ctest_filters\x18\x05 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.TestFiltersResultR\x0btestFilters\x12t\n\nviolations\x18\x07 \x03(\x0b\x32T.com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResult.ViolationR\nviolations\x1a\xab\x02\n\tViolation\x12\x33\n\x04\x66low\x18\x01 \x01(\x0b\x32\x1f.com.intentionet.datamodel.FlowR\x04\x66low\x12T\n\x0ctest_filters\x18\x02 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.TestFiltersResultR\x0btestFilters\x12!\n\x0cmatched_line\x18\x03 \x01(\tR\x0bmatchedLine\x12p\n\x1ematched_line_defined_structure\x18\x04 \x01(\x0b\x32+.com.intentionet.datamodel.DefinedStructureR\x1bmatchedLineDefinedStructure\x1a\x62\n\rFailureResult\x12\x39\n\x06\x64\x65vice\x18\x01 \x01(\x0b\x32!.com.intentionet.datamodel.DeviceR\x06\x64\x65vice\x12\x16\n\x06reason\x18\x02 \x01(\tR\x06reasonJ\x04\x08\x02\x10\x03J\x04\x08\x03\x10\x04\"\xc9\x02\n\x1c\x46ilterBehaviorAssertionInput\x12J\n\x07\x64\x65vices\x18\x01 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DeviceFilterExprR\x07\x64\x65vices\x12I\n\x07\x66ilters\x18\x02 \x01(\x0b\x32/.com.intentionet.bfe.assertions.FilterMatchExprR\x07\x66ilters\x12\x44\n\x05\x66lows\x18\x03 \x01(\x0b\x32..com.intentionet.bfe.assertions.FlowFilterExprR\x05\x66lows\x12L\n\x06\x65xpect\x18\x04 \x01(\x0b\x32\x34.com.intentionet.bfe.assertions.FilterBehaviorExpectR\x06\x65xpect\"\xf6\x07\n\x1d\x46ilterBehaviorAssertionResult\x12\x63\n\tviolators\x18\x01 \x03(\x0b\x32\x45.com.intentionet.bfe.assertions.FilterBehaviorAssertionResult.ElementR\tviolators\x12\x65\n\nconformers\x18\x02 \x03(\x0b\x32\x45.com.intentionet.bfe.assertions.FilterBehaviorAssertionResult.ElementR\nconformers\x12\x33\n\x15violator_descriptions\x18\x03 \x03(\tR\x14violatorDescriptions\x1a\xa5\x03\n\x07\x45lement\x12\x39\n\x06\x66ilter\x18\x01 \x01(\x0b\x32!.com.intentionet.datamodel.FilterR\x06\x66ilter\x12]\n\x11\x64\x65scription_index\x18\x05 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DescriptionIndexR\x10\x64\x65scriptionIndex\x12\x33\n\x04\x66low\x18\x02 \x01(\x0b\x32\x1f.com.intentionet.datamodel.FlowR\x04\x66low\x12T\n\x0ctest_filters\x18\x04 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.TestFiltersResultR\x0btestFilters\x12g\n\nviolations\x18\x06 \x03(\x0b\x32G.com.intentionet.bfe.assertions.FilterBehaviorAssertionResult.ViolationR\nviolationsJ\x04\x08\x03\x10\x04R\x06\x61\x63tion\x1a\xab\x02\n\tViolation\x12\x33\n\x04\x66low\x18\x01 \x01(\x0b\x32\x1f.com.intentionet.datamodel.FlowR\x04\x66low\x12T\n\x0ctest_filters\x18\x02 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.TestFiltersResultR\x0btestFilters\x12!\n\x0cmatched_line\x18\x03 \x01(\tR\x0bmatchedLine\x12p\n\x1ematched_line_defined_structure\x18\x04 \x01(\x0b\x32+.com.intentionet.datamodel.DefinedStructureR\x1bmatchedLineDefinedStructure\"\xd0\x01\n\x11TestFiltersResult\x12!\n\x0cmatched_line\x18\x01 \x01(\tR\x0bmatchedLine\x12p\n\x1ematched_line_defined_structure\x18\x03 \x01(\x0b\x32+.com.intentionet.datamodel.DefinedStructureR\x1bmatchedLineDefinedStructure\x12&\n\x0ftrace_tree_json\x18\x02 \x03(\tR\rtraceTreeJson\"\xbd\x01\n$FilterLineReachabilityAssertionInput\x12J\n\x07\x64\x65vices\x18\x01 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DeviceFilterExprR\x07\x64\x65vices\x12I\n\x07\x66ilters\x18\x02 \x01(\x0b\x32/.com.intentionet.bfe.assertions.FilterMatchExprR\x07\x66ilters\"\xee\x0f\n%FilterLineReachabilityAssertionResult\x12l\n\tviolators\x18\x01 \x03(\x0b\x32N.com.intentionet.bfe.assertions.FilterLineReachabilityAssertionResult.ViolatorR\tviolators\x12o\n\nconformers\x18\x02 \x03(\x0b\x32O.com.intentionet.bfe.assertions.FilterLineReachabilityAssertionResult.ConformerR\nconformers\x1a\xeb\x01\n\x08Violator\x12n\n\nfilter_set\x18\x01 \x01(\x0b\x32O.com.intentionet.bfe.assertions.FilterLineReachabilityAssertionResult.FilterSetR\tfilterSet\x12o\n\nviolations\x18\x02 \x03(\x0b\x32O.com.intentionet.bfe.assertions.FilterLineReachabilityAssertionResult.ViolationR\nviolations\x1a\xb2\x04\n\tViolation\x12\x80\x01\n\x10unreachable_line\x18\x01 \x01(\x0b\x32U.com.intentionet.bfe.assertions.FilterLineReachabilityAssertionResult.UnreachableLineR\x0funreachableLine\x12l\n\x08shadowed\x18\x02 \x01(\x0b\x32N.com.intentionet.bfe.assertions.FilterLineReachabilityAssertionResult.ShadowedH\x00R\x08shadowed\x12\x9d\x01\n\x19independently_unmatchable\x18\x03 \x01(\x0b\x32^.com.intentionet.bfe.assertions.FilterLineReachabilityAssertionResult.IndependentlyUnmatchableH\x00R\x18independentlyUnmatchable\x12\x8b\x01\n\x13undefined_reference\x18\x04 \x01(\x0b\x32X.com.intentionet.bfe.assertions.FilterLineReachabilityAssertionResult.UndefinedReferenceH\x00R\x12undefinedReferenceB\x06\n\x04type\x1a\xb3\x01\n\x08Shadowed\x12|\n\x0fshadowing_lines\x18\x01 \x03(\x0b\x32S.com.intentionet.bfe.assertions.FilterLineReachabilityAssertionResult.ShadowingLineR\x0eshadowingLines\x12)\n\x10\x64ifferent_action\x18\x02 \x01(\x08R\x0f\x64ifferentAction\x1a\x1a\n\x18IndependentlyUnmatchable\x1a\x14\n\x12UndefinedReference\x1a\xd7\x01\n\x0fUnreachableLine\x12\x1b\n\tline_text\x18\x01 \x01(\tR\x08lineText\x12M\n\x0bline_action\x18\x02 \x01(\x0e\x32,.com.intentionet.bfe.assertions.FilterActionR\nlineAction\x12X\n\x11\x64\x65\x66ined_structure\x18\x03 \x01(\x0b\x32+.com.intentionet.datamodel.DefinedStructureR\x10\x64\x65\x66inedStructure\x1a\x86\x01\n\rShadowingLine\x12\x1b\n\tline_text\x18\x01 \x01(\tR\x08lineText\x12X\n\x11\x64\x65\x66ined_structure\x18\x02 \x01(\x0b\x32+.com.intentionet.datamodel.DefinedStructureR\x10\x64\x65\x66inedStructure\x1a{\n\tConformer\x12n\n\nfilter_set\x18\x01 \x01(\x0b\x32O.com.intentionet.bfe.assertions.FilterLineReachabilityAssertionResult.FilterSetR\tfilterSet\x1a\xfa\x01\n\tFilterSet\x12V\n\x15representative_device\x18\x01 \x01(\x0b\x32!.com.intentionet.datamodel.DeviceR\x14representativeDevice\x12X\n\x11\x64\x65\x66ined_structure\x18\x02 \x01(\x0b\x32+.com.intentionet.datamodel.DefinedStructureR\x10\x64\x65\x66inedStructure\x12;\n\x07\x66ilters\x18\x03 \x03(\x0b\x32!.com.intentionet.datamodel.FilterR\x07\x66ilters*w\n\x0c\x46ilterAction\x12\x19\n\x15\x46ILTER_ACTION_UNKNOWN\x10\x00\x12\x18\n\x14\x46ILTER_ACTION_PERMIT\x10\x01\x12\x16\n\x12\x46ILTER_ACTION_DENY\x10\x02\x12\x1a\n\x16\x46ILTER_ACTION_VARIABLE\x10\x03\x62\x06proto3')

_FILTERACTION = DESCRIPTOR.enum_types_by_name['FilterAction']
FilterAction = enum_type_wrapper.EnumTypeWrapper(_FILTERACTION)
FILTER_ACTION_UNKNOWN = 0
FILTER_ACTION_PERMIT = 1
FILTER_ACTION_DENY = 2
FILTER_ACTION_VARIABLE = 3


_CROSSZONEPOLICYFILTERSFLOWSASSERTIONINPUT = DESCRIPTOR.message_types_by_name['CrossZonePolicyFiltersFlowsAssertionInput']
_CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT = DESCRIPTOR.message_types_by_name['CrossZonePolicyFiltersFlowsAssertionResult']
_CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_ELEMENT = _CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT.nested_types_by_name['Element']
_CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_VIOLATION = _CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT.nested_types_by_name['Violation']
_CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_FAILURERESULT = _CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT.nested_types_by_name['FailureResult']
_FILTERBEHAVIORASSERTIONINPUT = DESCRIPTOR.message_types_by_name['FilterBehaviorAssertionInput']
_FILTERBEHAVIORASSERTIONRESULT = DESCRIPTOR.message_types_by_name['FilterBehaviorAssertionResult']
_FILTERBEHAVIORASSERTIONRESULT_ELEMENT = _FILTERBEHAVIORASSERTIONRESULT.nested_types_by_name['Element']
_FILTERBEHAVIORASSERTIONRESULT_VIOLATION = _FILTERBEHAVIORASSERTIONRESULT.nested_types_by_name['Violation']
_TESTFILTERSRESULT = DESCRIPTOR.message_types_by_name['TestFiltersResult']
_FILTERLINEREACHABILITYASSERTIONINPUT = DESCRIPTOR.message_types_by_name['FilterLineReachabilityAssertionInput']
_FILTERLINEREACHABILITYASSERTIONRESULT = DESCRIPTOR.message_types_by_name['FilterLineReachabilityAssertionResult']
_FILTERLINEREACHABILITYASSERTIONRESULT_VIOLATOR = _FILTERLINEREACHABILITYASSERTIONRESULT.nested_types_by_name['Violator']
_FILTERLINEREACHABILITYASSERTIONRESULT_VIOLATION = _FILTERLINEREACHABILITYASSERTIONRESULT.nested_types_by_name['Violation']
_FILTERLINEREACHABILITYASSERTIONRESULT_SHADOWED = _FILTERLINEREACHABILITYASSERTIONRESULT.nested_types_by_name['Shadowed']
_FILTERLINEREACHABILITYASSERTIONRESULT_INDEPENDENTLYUNMATCHABLE = _FILTERLINEREACHABILITYASSERTIONRESULT.nested_types_by_name['IndependentlyUnmatchable']
_FILTERLINEREACHABILITYASSERTIONRESULT_UNDEFINEDREFERENCE = _FILTERLINEREACHABILITYASSERTIONRESULT.nested_types_by_name['UndefinedReference']
_FILTERLINEREACHABILITYASSERTIONRESULT_UNREACHABLELINE = _FILTERLINEREACHABILITYASSERTIONRESULT.nested_types_by_name['UnreachableLine']
_FILTERLINEREACHABILITYASSERTIONRESULT_SHADOWINGLINE = _FILTERLINEREACHABILITYASSERTIONRESULT.nested_types_by_name['ShadowingLine']
_FILTERLINEREACHABILITYASSERTIONRESULT_CONFORMER = _FILTERLINEREACHABILITYASSERTIONRESULT.nested_types_by_name['Conformer']
_FILTERLINEREACHABILITYASSERTIONRESULT_FILTERSET = _FILTERLINEREACHABILITYASSERTIONRESULT.nested_types_by_name['FilterSet']
CrossZonePolicyFiltersFlowsAssertionInput = _reflection.GeneratedProtocolMessageType('CrossZonePolicyFiltersFlowsAssertionInput', (_message.Message,), {
  'DESCRIPTOR' : _CROSSZONEPOLICYFILTERSFLOWSASSERTIONINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.filters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionInput)
  })
_sym_db.RegisterMessage(CrossZonePolicyFiltersFlowsAssertionInput)

CrossZonePolicyFiltersFlowsAssertionResult = _reflection.GeneratedProtocolMessageType('CrossZonePolicyFiltersFlowsAssertionResult', (_message.Message,), {

  'Element' : _reflection.GeneratedProtocolMessageType('Element', (_message.Message,), {
    'DESCRIPTOR' : _CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_ELEMENT,
    '__module__' : 'intentionet.bfe.proto.assertions.filters_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResult.Element)
    })
  ,

  'Violation' : _reflection.GeneratedProtocolMessageType('Violation', (_message.Message,), {
    'DESCRIPTOR' : _CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_VIOLATION,
    '__module__' : 'intentionet.bfe.proto.assertions.filters_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResult.Violation)
    })
  ,

  'FailureResult' : _reflection.GeneratedProtocolMessageType('FailureResult', (_message.Message,), {
    'DESCRIPTOR' : _CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_FAILURERESULT,
    '__module__' : 'intentionet.bfe.proto.assertions.filters_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResult.FailureResult)
    })
  ,
  'DESCRIPTOR' : _CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.filters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResult)
  })
_sym_db.RegisterMessage(CrossZonePolicyFiltersFlowsAssertionResult)
_sym_db.RegisterMessage(CrossZonePolicyFiltersFlowsAssertionResult.Element)
_sym_db.RegisterMessage(CrossZonePolicyFiltersFlowsAssertionResult.Violation)
_sym_db.RegisterMessage(CrossZonePolicyFiltersFlowsAssertionResult.FailureResult)

FilterBehaviorAssertionInput = _reflection.GeneratedProtocolMessageType('FilterBehaviorAssertionInput', (_message.Message,), {
  'DESCRIPTOR' : _FILTERBEHAVIORASSERTIONINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.filters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FilterBehaviorAssertionInput)
  })
_sym_db.RegisterMessage(FilterBehaviorAssertionInput)

FilterBehaviorAssertionResult = _reflection.GeneratedProtocolMessageType('FilterBehaviorAssertionResult', (_message.Message,), {

  'Element' : _reflection.GeneratedProtocolMessageType('Element', (_message.Message,), {
    'DESCRIPTOR' : _FILTERBEHAVIORASSERTIONRESULT_ELEMENT,
    '__module__' : 'intentionet.bfe.proto.assertions.filters_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FilterBehaviorAssertionResult.Element)
    })
  ,

  'Violation' : _reflection.GeneratedProtocolMessageType('Violation', (_message.Message,), {
    'DESCRIPTOR' : _FILTERBEHAVIORASSERTIONRESULT_VIOLATION,
    '__module__' : 'intentionet.bfe.proto.assertions.filters_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FilterBehaviorAssertionResult.Violation)
    })
  ,
  'DESCRIPTOR' : _FILTERBEHAVIORASSERTIONRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.filters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FilterBehaviorAssertionResult)
  })
_sym_db.RegisterMessage(FilterBehaviorAssertionResult)
_sym_db.RegisterMessage(FilterBehaviorAssertionResult.Element)
_sym_db.RegisterMessage(FilterBehaviorAssertionResult.Violation)

TestFiltersResult = _reflection.GeneratedProtocolMessageType('TestFiltersResult', (_message.Message,), {
  'DESCRIPTOR' : _TESTFILTERSRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.filters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.TestFiltersResult)
  })
_sym_db.RegisterMessage(TestFiltersResult)

FilterLineReachabilityAssertionInput = _reflection.GeneratedProtocolMessageType('FilterLineReachabilityAssertionInput', (_message.Message,), {
  'DESCRIPTOR' : _FILTERLINEREACHABILITYASSERTIONINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.filters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FilterLineReachabilityAssertionInput)
  })
_sym_db.RegisterMessage(FilterLineReachabilityAssertionInput)

FilterLineReachabilityAssertionResult = _reflection.GeneratedProtocolMessageType('FilterLineReachabilityAssertionResult', (_message.Message,), {

  'Violator' : _reflection.GeneratedProtocolMessageType('Violator', (_message.Message,), {
    'DESCRIPTOR' : _FILTERLINEREACHABILITYASSERTIONRESULT_VIOLATOR,
    '__module__' : 'intentionet.bfe.proto.assertions.filters_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FilterLineReachabilityAssertionResult.Violator)
    })
  ,

  'Violation' : _reflection.GeneratedProtocolMessageType('Violation', (_message.Message,), {
    'DESCRIPTOR' : _FILTERLINEREACHABILITYASSERTIONRESULT_VIOLATION,
    '__module__' : 'intentionet.bfe.proto.assertions.filters_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FilterLineReachabilityAssertionResult.Violation)
    })
  ,

  'Shadowed' : _reflection.GeneratedProtocolMessageType('Shadowed', (_message.Message,), {
    'DESCRIPTOR' : _FILTERLINEREACHABILITYASSERTIONRESULT_SHADOWED,
    '__module__' : 'intentionet.bfe.proto.assertions.filters_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FilterLineReachabilityAssertionResult.Shadowed)
    })
  ,

  'IndependentlyUnmatchable' : _reflection.GeneratedProtocolMessageType('IndependentlyUnmatchable', (_message.Message,), {
    'DESCRIPTOR' : _FILTERLINEREACHABILITYASSERTIONRESULT_INDEPENDENTLYUNMATCHABLE,
    '__module__' : 'intentionet.bfe.proto.assertions.filters_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FilterLineReachabilityAssertionResult.IndependentlyUnmatchable)
    })
  ,

  'UndefinedReference' : _reflection.GeneratedProtocolMessageType('UndefinedReference', (_message.Message,), {
    'DESCRIPTOR' : _FILTERLINEREACHABILITYASSERTIONRESULT_UNDEFINEDREFERENCE,
    '__module__' : 'intentionet.bfe.proto.assertions.filters_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FilterLineReachabilityAssertionResult.UndefinedReference)
    })
  ,

  'UnreachableLine' : _reflection.GeneratedProtocolMessageType('UnreachableLine', (_message.Message,), {
    'DESCRIPTOR' : _FILTERLINEREACHABILITYASSERTIONRESULT_UNREACHABLELINE,
    '__module__' : 'intentionet.bfe.proto.assertions.filters_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FilterLineReachabilityAssertionResult.UnreachableLine)
    })
  ,

  'ShadowingLine' : _reflection.GeneratedProtocolMessageType('ShadowingLine', (_message.Message,), {
    'DESCRIPTOR' : _FILTERLINEREACHABILITYASSERTIONRESULT_SHADOWINGLINE,
    '__module__' : 'intentionet.bfe.proto.assertions.filters_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FilterLineReachabilityAssertionResult.ShadowingLine)
    })
  ,

  'Conformer' : _reflection.GeneratedProtocolMessageType('Conformer', (_message.Message,), {
    'DESCRIPTOR' : _FILTERLINEREACHABILITYASSERTIONRESULT_CONFORMER,
    '__module__' : 'intentionet.bfe.proto.assertions.filters_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FilterLineReachabilityAssertionResult.Conformer)
    })
  ,

  'FilterSet' : _reflection.GeneratedProtocolMessageType('FilterSet', (_message.Message,), {
    'DESCRIPTOR' : _FILTERLINEREACHABILITYASSERTIONRESULT_FILTERSET,
    '__module__' : 'intentionet.bfe.proto.assertions.filters_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FilterLineReachabilityAssertionResult.FilterSet)
    })
  ,
  'DESCRIPTOR' : _FILTERLINEREACHABILITYASSERTIONRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.filters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FilterLineReachabilityAssertionResult)
  })
_sym_db.RegisterMessage(FilterLineReachabilityAssertionResult)
_sym_db.RegisterMessage(FilterLineReachabilityAssertionResult.Violator)
_sym_db.RegisterMessage(FilterLineReachabilityAssertionResult.Violation)
_sym_db.RegisterMessage(FilterLineReachabilityAssertionResult.Shadowed)
_sym_db.RegisterMessage(FilterLineReachabilityAssertionResult.IndependentlyUnmatchable)
_sym_db.RegisterMessage(FilterLineReachabilityAssertionResult.UndefinedReference)
_sym_db.RegisterMessage(FilterLineReachabilityAssertionResult.UnreachableLine)
_sym_db.RegisterMessage(FilterLineReachabilityAssertionResult.ShadowingLine)
_sym_db.RegisterMessage(FilterLineReachabilityAssertionResult.Conformer)
_sym_db.RegisterMessage(FilterLineReachabilityAssertionResult.FilterSet)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _FILTERACTION._serialized_start=5801
  _FILTERACTION._serialized_end=5920
  _CROSSZONEPOLICYFILTERSFLOWSASSERTIONINPUT._serialized_start=326
  _CROSSZONEPOLICYFILTERSFLOWSASSERTIONINPUT._serialized_end=753
  _CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT._serialized_start=756
  _CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT._serialized_end=2014
  _CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_ELEMENT._serialized_start=1086
  _CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_ELEMENT._serialized_end=1600
  _CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_VIOLATION._serialized_start=1603
  _CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_VIOLATION._serialized_end=1902
  _CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_FAILURERESULT._serialized_start=1904
  _CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_FAILURERESULT._serialized_end=2002
  _FILTERBEHAVIORASSERTIONINPUT._serialized_start=2017
  _FILTERBEHAVIORASSERTIONINPUT._serialized_end=2346
  _FILTERBEHAVIORASSERTIONRESULT._serialized_start=2349
  _FILTERBEHAVIORASSERTIONRESULT._serialized_end=3363
  _FILTERBEHAVIORASSERTIONRESULT_ELEMENT._serialized_start=2640
  _FILTERBEHAVIORASSERTIONRESULT_ELEMENT._serialized_end=3061
  _FILTERBEHAVIORASSERTIONRESULT_VIOLATION._serialized_start=1603
  _FILTERBEHAVIORASSERTIONRESULT_VIOLATION._serialized_end=1902
  _TESTFILTERSRESULT._serialized_start=3366
  _TESTFILTERSRESULT._serialized_end=3574
  _FILTERLINEREACHABILITYASSERTIONINPUT._serialized_start=3577
  _FILTERLINEREACHABILITYASSERTIONINPUT._serialized_end=3766
  _FILTERLINEREACHABILITYASSERTIONRESULT._serialized_start=3769
  _FILTERLINEREACHABILITYASSERTIONRESULT._serialized_end=5799
  _FILTERLINEREACHABILITYASSERTIONRESULT_VIOLATOR._serialized_start=4034
  _FILTERLINEREACHABILITYASSERTIONRESULT_VIOLATOR._serialized_end=4269
  _FILTERLINEREACHABILITYASSERTIONRESULT_VIOLATION._serialized_start=4272
  _FILTERLINEREACHABILITYASSERTIONRESULT_VIOLATION._serialized_end=4834
  _FILTERLINEREACHABILITYASSERTIONRESULT_SHADOWED._serialized_start=4837
  _FILTERLINEREACHABILITYASSERTIONRESULT_SHADOWED._serialized_end=5016
  _FILTERLINEREACHABILITYASSERTIONRESULT_INDEPENDENTLYUNMATCHABLE._serialized_start=5018
  _FILTERLINEREACHABILITYASSERTIONRESULT_INDEPENDENTLYUNMATCHABLE._serialized_end=5044
  _FILTERLINEREACHABILITYASSERTIONRESULT_UNDEFINEDREFERENCE._serialized_start=5046
  _FILTERLINEREACHABILITYASSERTIONRESULT_UNDEFINEDREFERENCE._serialized_end=5066
  _FILTERLINEREACHABILITYASSERTIONRESULT_UNREACHABLELINE._serialized_start=5069
  _FILTERLINEREACHABILITYASSERTIONRESULT_UNREACHABLELINE._serialized_end=5284
  _FILTERLINEREACHABILITYASSERTIONRESULT_SHADOWINGLINE._serialized_start=5287
  _FILTERLINEREACHABILITYASSERTIONRESULT_SHADOWINGLINE._serialized_end=5421
  _FILTERLINEREACHABILITYASSERTIONRESULT_CONFORMER._serialized_start=5423
  _FILTERLINEREACHABILITYASSERTIONRESULT_CONFORMER._serialized_end=5546
  _FILTERLINEREACHABILITYASSERTIONRESULT_FILTERSET._serialized_start=5549
  _FILTERLINEREACHABILITYASSERTIONRESULT_FILTERSET._serialized_end=5799
# @@protoc_insertion_point(module_scope)
