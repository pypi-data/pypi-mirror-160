# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: intentionet/bfe/proto/assertions/text.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from intentionet.bfe.proto.assertions import parameters_pb2 as intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2
from intentionet.bfe.proto.datamodel import config_text_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_config__text__pb2
from intentionet.bfe.proto.datamodel import device_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_device__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n+intentionet/bfe/proto/assertions/text.proto\x12\x1e\x63om.intentionet.bfe.assertions\x1a\x31intentionet/bfe/proto/assertions/parameters.proto\x1a\x31intentionet/bfe/proto/datamodel/config_text.proto\x1a,intentionet/bfe/proto/datamodel/device.proto\"\xce\x02\n\x1e\x44\x65vicesHaveDefinitionTextInput\x12J\n\x07\x64\x65vices\x18\x01 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DeviceFilterExprR\x07\x64\x65vices\x12%\n\x0estructure_type\x18\x02 \x01(\tR\rstructureType\x12%\n\x0estructure_name\x18\x03 \x01(\tR\rstructureName\x12+\n\x0f\x64\x65\x66inition_text\x18\x04 \x01(\tB\x02\x18\x01R\x0e\x64\x65\x66initionText\x12\x65\n\x17\x64\x65\x66inition_text_matches\x18\x05 \x01(\x0b\x32-.com.intentionet.bfe.assertions.TextMatchExprR\x15\x64\x65\x66initionTextMatches\"\xc2\n\n\x1f\x44\x65vicesHaveDefinitionTextResult\x12\x45\n\nconformers\x18\x01 \x03(\x0b\x32!.com.intentionet.datamodel.DeviceB\x02\x18\x01R\nconformers\x12n\n\rconformers_v2\x18\x03 \x03(\x0b\x32I.com.intentionet.bfe.assertions.DevicesHaveDefinitionTextResult.ConformerR\x0c\x63onformersV2\x12\x66\n\tviolators\x18\x02 \x03(\x0b\x32H.com.intentionet.bfe.assertions.DevicesHaveDefinitionTextResult.ViolatorR\tviolators\x1a\x82\x01\n\tWrongText\x12%\n\x0estructure_type\x18\x01 \x01(\tR\rstructureType\x12%\n\x0estructure_name\x18\x02 \x01(\tR\rstructureName\x12\'\n\x0f\x64\x65\x66inition_text\x18\x03 \x01(\tR\x0e\x64\x65\x66initionText\x1a\x85\x01\n\x0fNoSuchStructure\x12\x38\n\x18matching_structure_types\x18\x01 \x03(\tR\x16matchingStructureTypes\x12\x38\n\x18matching_structure_names\x18\x02 \x03(\tR\x16matchingStructureNames\x1a\xbf\x04\n\x08Violator\x12\x39\n\x06\x64\x65vice\x18\x01 \x01(\x0b\x32!.com.intentionet.datamodel.DeviceR\x06\x64\x65vice\x12n\n\nwrong_text\x18\x02 \x01(\x0b\x32I.com.intentionet.bfe.assertions.DevicesHaveDefinitionTextResult.WrongTextB\x02\x18\x01H\x00R\twrongText\x12\x81\x01\n\x11no_such_structure\x18\x03 \x01(\x0b\x32O.com.intentionet.bfe.assertions.DevicesHaveDefinitionTextResult.NoSuchStructureB\x02\x18\x01H\x00R\x0fnoSuchStructure\x12j\n\x16text_match_expr_result\x18\x04 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.TextMatchExprResultH\x01R\x13textMatchExprResult\x12\x82\x01\n\x14no_such_structure_v2\x18\x05 \x01(\x0b\x32O.com.intentionet.bfe.assertions.DevicesHaveDefinitionTextResult.NoSuchStructureH\x01R\x11noSuchStructureV2B\t\n\x07problemB\x08\n\x06result\x1a\xb0\x01\n\tConformer\x12\x39\n\x06\x64\x65vice\x18\x01 \x01(\x0b\x32!.com.intentionet.datamodel.DeviceR\x06\x64\x65vice\x12h\n\x16text_match_expr_result\x18\x02 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.TextMatchExprResultR\x13textMatchExprResult\"\x8f\x02\n\x14\x44\x65vicesHaveTextInput\x12J\n\x07\x64\x65vices\x18\x01 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DeviceFilterExprR\x07\x64\x65vices\x12Y\n\rmatches_regex\x18\x02 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.TextMatchesRegexB\x02\x18\x01R\x0cmatchesRegex\x12P\n\x0ctext_matches\x18\x03 \x01(\x0b\x32-.com.intentionet.bfe.assertions.TextMatchExprR\x0btextMatches\"I\n\x10TextMatchesRegex\x12\x14\n\x05regex\x18\x01 \x01(\tR\x05regex\x12\x1f\n\x0bnot_matched\x18\x02 \x01(\x08R\nnotMatched\"\xb2\x01\n\rTextMatchExpr\x12\x18\n\x06\x65quals\x18\x01 \x01(\tH\x00R\x06\x65quals\x12%\n\rcontains_line\x18\x02 \x01(\tH\x00R\x0c\x63ontainsLine\x12%\n\rmatches_regex\x18\x03 \x01(\tH\x00R\x0cmatchesRegex\x12\x31\n\x14\x64oes_not_match_regex\x18\x04 \x01(\tH\x00R\x11\x64oesNotMatchRegexB\x06\n\x04\x65xpr\"\xf9\x07\n\x15\x44\x65vicesHaveTextResult\x12_\n\nconformers\x18\x01 \x03(\x0b\x32?.com.intentionet.bfe.assertions.DevicesHaveTextResult.ConformerR\nconformers\x12\\\n\tviolators\x18\x02 \x03(\x0b\x32>.com.intentionet.bfe.assertions.DevicesHaveTextResult.ViolatorR\tviolators\x1a,\n\x0c\x44oesNotMatch\x12\x1c\n\tfilenames\x18\x01 \x03(\tR\tfilenames\x1aU\n\x0eIncorrectMatch\x12\x43\n\nfile_lines\x18\x01 \x01(\x0b\x32$.com.intentionet.datamodel.FileLinesR\tfileLines\x1a\xf9\x01\n\tConformer\x12\x39\n\x06\x64\x65vice\x18\x01 \x01(\x0b\x32!.com.intentionet.datamodel.DeviceR\x06\x64\x65vice\x12G\n\nfile_lines\x18\x02 \x01(\x0b\x32$.com.intentionet.datamodel.FileLinesB\x02\x18\x01R\tfileLines\x12h\n\x16text_match_expr_result\x18\x03 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.TextMatchExprResultR\x13textMatchExprResult\x1a\x9f\x03\n\x08Violator\x12\x39\n\x06\x64\x65vice\x18\x01 \x01(\x0b\x32!.com.intentionet.datamodel.DeviceR\x06\x64\x65vice\x12h\n\x16text_match_expr_result\x18\x04 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.TextMatchExprResultR\x13textMatchExprResult\x12n\n\x0e\x64oes_not_match\x18\x02 \x01(\x0b\x32\x42.com.intentionet.bfe.assertions.DevicesHaveTextResult.DoesNotMatchB\x02\x18\x01H\x00R\x0c\x64oesNotMatch\x12s\n\x0fincorrect_match\x18\x03 \x01(\x0b\x32\x44.com.intentionet.bfe.assertions.DevicesHaveTextResult.IncorrectMatchB\x02\x18\x01H\x00R\x0eincorrectMatchB\t\n\x07problem\"\xab\x01\n\x13TextMatchExprResult\x12G\n\x0c\x61\x63tual_lines\x18\x01 \x01(\x0b\x32$.com.intentionet.datamodel.FileLinesR\x0b\x61\x63tualLines\x12K\n\x0ematching_lines\x18\x02 \x01(\x0b\x32$.com.intentionet.datamodel.FileLinesR\rmatchingLinesb\x06proto3')



_DEVICESHAVEDEFINITIONTEXTINPUT = DESCRIPTOR.message_types_by_name['DevicesHaveDefinitionTextInput']
_DEVICESHAVEDEFINITIONTEXTRESULT = DESCRIPTOR.message_types_by_name['DevicesHaveDefinitionTextResult']
_DEVICESHAVEDEFINITIONTEXTRESULT_WRONGTEXT = _DEVICESHAVEDEFINITIONTEXTRESULT.nested_types_by_name['WrongText']
_DEVICESHAVEDEFINITIONTEXTRESULT_NOSUCHSTRUCTURE = _DEVICESHAVEDEFINITIONTEXTRESULT.nested_types_by_name['NoSuchStructure']
_DEVICESHAVEDEFINITIONTEXTRESULT_VIOLATOR = _DEVICESHAVEDEFINITIONTEXTRESULT.nested_types_by_name['Violator']
_DEVICESHAVEDEFINITIONTEXTRESULT_CONFORMER = _DEVICESHAVEDEFINITIONTEXTRESULT.nested_types_by_name['Conformer']
_DEVICESHAVETEXTINPUT = DESCRIPTOR.message_types_by_name['DevicesHaveTextInput']
_TEXTMATCHESREGEX = DESCRIPTOR.message_types_by_name['TextMatchesRegex']
_TEXTMATCHEXPR = DESCRIPTOR.message_types_by_name['TextMatchExpr']
_DEVICESHAVETEXTRESULT = DESCRIPTOR.message_types_by_name['DevicesHaveTextResult']
_DEVICESHAVETEXTRESULT_DOESNOTMATCH = _DEVICESHAVETEXTRESULT.nested_types_by_name['DoesNotMatch']
_DEVICESHAVETEXTRESULT_INCORRECTMATCH = _DEVICESHAVETEXTRESULT.nested_types_by_name['IncorrectMatch']
_DEVICESHAVETEXTRESULT_CONFORMER = _DEVICESHAVETEXTRESULT.nested_types_by_name['Conformer']
_DEVICESHAVETEXTRESULT_VIOLATOR = _DEVICESHAVETEXTRESULT.nested_types_by_name['Violator']
_TEXTMATCHEXPRRESULT = DESCRIPTOR.message_types_by_name['TextMatchExprResult']
DevicesHaveDefinitionTextInput = _reflection.GeneratedProtocolMessageType('DevicesHaveDefinitionTextInput', (_message.Message,), {
  'DESCRIPTOR' : _DEVICESHAVEDEFINITIONTEXTINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.text_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveDefinitionTextInput)
  })
_sym_db.RegisterMessage(DevicesHaveDefinitionTextInput)

DevicesHaveDefinitionTextResult = _reflection.GeneratedProtocolMessageType('DevicesHaveDefinitionTextResult', (_message.Message,), {

  'WrongText' : _reflection.GeneratedProtocolMessageType('WrongText', (_message.Message,), {
    'DESCRIPTOR' : _DEVICESHAVEDEFINITIONTEXTRESULT_WRONGTEXT,
    '__module__' : 'intentionet.bfe.proto.assertions.text_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveDefinitionTextResult.WrongText)
    })
  ,

  'NoSuchStructure' : _reflection.GeneratedProtocolMessageType('NoSuchStructure', (_message.Message,), {
    'DESCRIPTOR' : _DEVICESHAVEDEFINITIONTEXTRESULT_NOSUCHSTRUCTURE,
    '__module__' : 'intentionet.bfe.proto.assertions.text_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveDefinitionTextResult.NoSuchStructure)
    })
  ,

  'Violator' : _reflection.GeneratedProtocolMessageType('Violator', (_message.Message,), {
    'DESCRIPTOR' : _DEVICESHAVEDEFINITIONTEXTRESULT_VIOLATOR,
    '__module__' : 'intentionet.bfe.proto.assertions.text_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveDefinitionTextResult.Violator)
    })
  ,

  'Conformer' : _reflection.GeneratedProtocolMessageType('Conformer', (_message.Message,), {
    'DESCRIPTOR' : _DEVICESHAVEDEFINITIONTEXTRESULT_CONFORMER,
    '__module__' : 'intentionet.bfe.proto.assertions.text_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveDefinitionTextResult.Conformer)
    })
  ,
  'DESCRIPTOR' : _DEVICESHAVEDEFINITIONTEXTRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.text_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveDefinitionTextResult)
  })
_sym_db.RegisterMessage(DevicesHaveDefinitionTextResult)
_sym_db.RegisterMessage(DevicesHaveDefinitionTextResult.WrongText)
_sym_db.RegisterMessage(DevicesHaveDefinitionTextResult.NoSuchStructure)
_sym_db.RegisterMessage(DevicesHaveDefinitionTextResult.Violator)
_sym_db.RegisterMessage(DevicesHaveDefinitionTextResult.Conformer)

DevicesHaveTextInput = _reflection.GeneratedProtocolMessageType('DevicesHaveTextInput', (_message.Message,), {
  'DESCRIPTOR' : _DEVICESHAVETEXTINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.text_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveTextInput)
  })
_sym_db.RegisterMessage(DevicesHaveTextInput)

TextMatchesRegex = _reflection.GeneratedProtocolMessageType('TextMatchesRegex', (_message.Message,), {
  'DESCRIPTOR' : _TEXTMATCHESREGEX,
  '__module__' : 'intentionet.bfe.proto.assertions.text_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.TextMatchesRegex)
  })
_sym_db.RegisterMessage(TextMatchesRegex)

TextMatchExpr = _reflection.GeneratedProtocolMessageType('TextMatchExpr', (_message.Message,), {
  'DESCRIPTOR' : _TEXTMATCHEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.text_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.TextMatchExpr)
  })
_sym_db.RegisterMessage(TextMatchExpr)

DevicesHaveTextResult = _reflection.GeneratedProtocolMessageType('DevicesHaveTextResult', (_message.Message,), {

  'DoesNotMatch' : _reflection.GeneratedProtocolMessageType('DoesNotMatch', (_message.Message,), {
    'DESCRIPTOR' : _DEVICESHAVETEXTRESULT_DOESNOTMATCH,
    '__module__' : 'intentionet.bfe.proto.assertions.text_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveTextResult.DoesNotMatch)
    })
  ,

  'IncorrectMatch' : _reflection.GeneratedProtocolMessageType('IncorrectMatch', (_message.Message,), {
    'DESCRIPTOR' : _DEVICESHAVETEXTRESULT_INCORRECTMATCH,
    '__module__' : 'intentionet.bfe.proto.assertions.text_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveTextResult.IncorrectMatch)
    })
  ,

  'Conformer' : _reflection.GeneratedProtocolMessageType('Conformer', (_message.Message,), {
    'DESCRIPTOR' : _DEVICESHAVETEXTRESULT_CONFORMER,
    '__module__' : 'intentionet.bfe.proto.assertions.text_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveTextResult.Conformer)
    })
  ,

  'Violator' : _reflection.GeneratedProtocolMessageType('Violator', (_message.Message,), {
    'DESCRIPTOR' : _DEVICESHAVETEXTRESULT_VIOLATOR,
    '__module__' : 'intentionet.bfe.proto.assertions.text_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveTextResult.Violator)
    })
  ,
  'DESCRIPTOR' : _DEVICESHAVETEXTRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.text_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveTextResult)
  })
_sym_db.RegisterMessage(DevicesHaveTextResult)
_sym_db.RegisterMessage(DevicesHaveTextResult.DoesNotMatch)
_sym_db.RegisterMessage(DevicesHaveTextResult.IncorrectMatch)
_sym_db.RegisterMessage(DevicesHaveTextResult.Conformer)
_sym_db.RegisterMessage(DevicesHaveTextResult.Violator)

TextMatchExprResult = _reflection.GeneratedProtocolMessageType('TextMatchExprResult', (_message.Message,), {
  'DESCRIPTOR' : _TEXTMATCHEXPRRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.text_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.TextMatchExprResult)
  })
_sym_db.RegisterMessage(TextMatchExprResult)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _DEVICESHAVEDEFINITIONTEXTINPUT.fields_by_name['definition_text']._options = None
  _DEVICESHAVEDEFINITIONTEXTINPUT.fields_by_name['definition_text']._serialized_options = b'\030\001'
  _DEVICESHAVEDEFINITIONTEXTRESULT_VIOLATOR.fields_by_name['wrong_text']._options = None
  _DEVICESHAVEDEFINITIONTEXTRESULT_VIOLATOR.fields_by_name['wrong_text']._serialized_options = b'\030\001'
  _DEVICESHAVEDEFINITIONTEXTRESULT_VIOLATOR.fields_by_name['no_such_structure']._options = None
  _DEVICESHAVEDEFINITIONTEXTRESULT_VIOLATOR.fields_by_name['no_such_structure']._serialized_options = b'\030\001'
  _DEVICESHAVEDEFINITIONTEXTRESULT.fields_by_name['conformers']._options = None
  _DEVICESHAVEDEFINITIONTEXTRESULT.fields_by_name['conformers']._serialized_options = b'\030\001'
  _DEVICESHAVETEXTINPUT.fields_by_name['matches_regex']._options = None
  _DEVICESHAVETEXTINPUT.fields_by_name['matches_regex']._serialized_options = b'\030\001'
  _DEVICESHAVETEXTRESULT_CONFORMER.fields_by_name['file_lines']._options = None
  _DEVICESHAVETEXTRESULT_CONFORMER.fields_by_name['file_lines']._serialized_options = b'\030\001'
  _DEVICESHAVETEXTRESULT_VIOLATOR.fields_by_name['does_not_match']._options = None
  _DEVICESHAVETEXTRESULT_VIOLATOR.fields_by_name['does_not_match']._serialized_options = b'\030\001'
  _DEVICESHAVETEXTRESULT_VIOLATOR.fields_by_name['incorrect_match']._options = None
  _DEVICESHAVETEXTRESULT_VIOLATOR.fields_by_name['incorrect_match']._serialized_options = b'\030\001'
  _DEVICESHAVEDEFINITIONTEXTINPUT._serialized_start=228
  _DEVICESHAVEDEFINITIONTEXTINPUT._serialized_end=562
  _DEVICESHAVEDEFINITIONTEXTRESULT._serialized_start=565
  _DEVICESHAVEDEFINITIONTEXTRESULT._serialized_end=1911
  _DEVICESHAVEDEFINITIONTEXTRESULT_WRONGTEXT._serialized_start=888
  _DEVICESHAVEDEFINITIONTEXTRESULT_WRONGTEXT._serialized_end=1018
  _DEVICESHAVEDEFINITIONTEXTRESULT_NOSUCHSTRUCTURE._serialized_start=1021
  _DEVICESHAVEDEFINITIONTEXTRESULT_NOSUCHSTRUCTURE._serialized_end=1154
  _DEVICESHAVEDEFINITIONTEXTRESULT_VIOLATOR._serialized_start=1157
  _DEVICESHAVEDEFINITIONTEXTRESULT_VIOLATOR._serialized_end=1732
  _DEVICESHAVEDEFINITIONTEXTRESULT_CONFORMER._serialized_start=1735
  _DEVICESHAVEDEFINITIONTEXTRESULT_CONFORMER._serialized_end=1911
  _DEVICESHAVETEXTINPUT._serialized_start=1914
  _DEVICESHAVETEXTINPUT._serialized_end=2185
  _TEXTMATCHESREGEX._serialized_start=2187
  _TEXTMATCHESREGEX._serialized_end=2260
  _TEXTMATCHEXPR._serialized_start=2263
  _TEXTMATCHEXPR._serialized_end=2441
  _DEVICESHAVETEXTRESULT._serialized_start=2444
  _DEVICESHAVETEXTRESULT._serialized_end=3461
  _DEVICESHAVETEXTRESULT_DOESNOTMATCH._serialized_start=2660
  _DEVICESHAVETEXTRESULT_DOESNOTMATCH._serialized_end=2704
  _DEVICESHAVETEXTRESULT_INCORRECTMATCH._serialized_start=2706
  _DEVICESHAVETEXTRESULT_INCORRECTMATCH._serialized_end=2791
  _DEVICESHAVETEXTRESULT_CONFORMER._serialized_start=2794
  _DEVICESHAVETEXTRESULT_CONFORMER._serialized_end=3043
  _DEVICESHAVETEXTRESULT_VIOLATOR._serialized_start=3046
  _DEVICESHAVETEXTRESULT_VIOLATOR._serialized_end=3461
  _TEXTMATCHEXPRRESULT._serialized_start=3464
  _TEXTMATCHEXPRRESULT._serialized_end=3635
# @@protoc_insertion_point(module_scope)
