# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: intentionet/bfe/proto/assertions/parameters.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from intentionet.bfe.proto.datamodel import range_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_range__pb2
from intentionet.bfe.proto.datamodel import ip_primitives_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_ip__primitives__pb2
from intentionet.bfe.proto.datamodel.aws import aws_primitives_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n1intentionet/bfe/proto/assertions/parameters.proto\x12\x1e\x63om.intentionet.bfe.assertions\x1a\x1bgoogle/protobuf/empty.proto\x1a+intentionet/bfe/proto/datamodel/range.proto\x1a\x33intentionet/bfe/proto/datamodel/ip_primitives.proto\x1a\x38intentionet/bfe/proto/datamodel/aws/aws_primitives.proto\"\xc8\x01\n\x10\x44\x65viceFilterExpr\x12T\n\x08hostname\x18\x03 \x01(\x0b\x32\x38.com.intentionet.bfe.assertions.DeviceFilterHostnameExprR\x08hostname\x12R\n\x06vendor\x18\x04 \x01(\x0b\x32:.com.intentionet.bfe.assertions.DeviceFilterVendorListExprR\x06vendorJ\x04\x08\x01\x10\x02J\x04\x08\x02\x10\x03\":\n\x18\x44\x65viceFilterHostnameExpr\x12\x16\n\x05regex\x18\x01 \x01(\tH\x00R\x05regexB\x06\n\x04\x65xpr\"\xa9\x01\n\x13InterfaceFilterExpr\x12H\n\x07include\x18\x01 \x03(\x0b\x32..com.intentionet.bfe.assertions.MatchInterfaceR\x07include\x12H\n\x07\x65xclude\x18\x02 \x03(\x0b\x32..com.intentionet.bfe.assertions.MatchInterfaceR\x07\x65xclude\"\xa4\x01\n\x0eMatchInterface\x12J\n\x07\x64\x65vices\x18\x01 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DeviceFilterExprR\x07\x64\x65vices\x12\x46\n\x04name\x18\x02 \x01(\x0b\x32\x32.com.intentionet.bfe.assertions.MatchInterfaceNameR\x04name\"4\n\x12MatchInterfaceName\x12\x16\n\x05regex\x18\x01 \x01(\tH\x00R\x05regexB\x06\n\x04\x65xpr\"\x9c\x01\n\rVrfFilterExpr\x12J\n\x07\x64\x65vices\x18\x01 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DeviceFilterExprR\x07\x64\x65vices\x12?\n\x04name\x18\x02 \x01(\x0b\x32+.com.intentionet.bfe.assertions.VrfNameExprR\x04name\"-\n\x0bVrfNameExpr\x12\x16\n\x05regex\x18\x01 \x01(\tH\x00R\x05regexB\x06\n\x04\x65xpr\"R\n\rInterfaceExpr\x12\x1a\n\x08hostname\x18\x01 \x01(\tR\x08hostname\x12%\n\x0einterface_name\x18\x02 \x01(\tR\rinterfaceName\"d\n\x0f\x46ilterMatchExpr\x12I\n\x04name\x18\x01 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.FilterNameMatchExprH\x00R\x04nameB\x06\n\x04\x65xpr\"5\n\x13\x46ilterNameMatchExpr\x12\x16\n\x05regex\x18\x01 \x01(\tH\x00R\x05regexB\x06\n\x04\x65xpr\"\xd5\x01\n\x1b\x44\x65viceFilterCiscoVendorExpr\x12*\n\x03ios\x18\x01 \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00R\x03ios\x12,\n\x04nxos\x18\x02 \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00R\x04nxos\x12(\n\x02xr\x18\x03 \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00R\x02xr\x12*\n\x03\x61sa\x18\x04 \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00R\x03\x61saB\x06\n\x04type\"\x8d\x02\n\x16\x44\x65viceFilterVendorExpr\x12S\n\x05\x63isco\x18\x01 \x01(\x0b\x32;.com.intentionet.bfe.assertions.DeviceFilterCiscoVendorExprH\x00R\x05\x63isco\x12\x30\n\x06\x61rista\x18\x02 \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00R\x06\x61rista\x12\x32\n\x07juniper\x18\x03 \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00R\x07juniper\x12.\n\x05sonic\x18\x04 \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00R\x05sonicB\x08\n\x06vendor\"f\n\x1a\x44\x65viceFilterVendorListExpr\x12H\n\x03\x61ny\x18\x01 \x03(\x0b\x32\x36.com.intentionet.bfe.assertions.DeviceFilterVendorExprR\x03\x61ny\"h\n\x19\x46irewallLocationMatchExpr\x12\x43\n\x04zone\x18\x01 \x01(\x0b\x32-.com.intentionet.bfe.assertions.ZoneMatchExprH\x00R\x04zoneB\x06\n\x04\x65xpr\"-\n\rZoneMatchExpr\x12\x14\n\x04name\x18\x01 \x01(\tH\x00R\x04nameB\x06\n\x04\x65xpr\"\x98\x01\n\x14\x46ilterBehaviorExpect\x12S\n\x06\x61\x63tion\x18\x01 \x01(\x0e\x32;.com.intentionet.bfe.assertions.FilterBehaviorExpect.ActionR\x06\x61\x63tion\"+\n\x06\x41\x63tion\x12\x0b\n\x07UNKNOWN\x10\x00\x12\n\n\x06PERMIT\x10\x01\x12\x08\n\x04\x44\x45NY\x10\x02\"\x9c\x01\n\x16\x46irewallBehaviorExpect\x12U\n\x06\x61\x63tion\x18\x01 \x01(\x0e\x32=.com.intentionet.bfe.assertions.FirewallBehaviorExpect.ActionR\x06\x61\x63tion\"+\n\x06\x41\x63tion\x12\x0b\n\x07UNKNOWN\x10\x00\x12\n\n\x06PERMIT\x10\x01\x12\x08\n\x04\x44\x45NY\x10\x02\"\x9f\x04\n\x0e\x46lowFilterExpr\x12\x42\n\x07include\x18\x07 \x03(\x0b\x32(.com.intentionet.bfe.assertions.FlowExprR\x07include\x12\x42\n\x07\x65xclude\x18\x08 \x03(\x0b\x32(.com.intentionet.bfe.assertions.FlowExprR\x07\x65xclude\x12\x45\n\x03\x61nd\x18\x01 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.FlowFilterAndExprH\x00R\x03\x61nd\x12\x42\n\x02or\x18\x02 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.FlowFilterOrExprH\x00R\x02or\x12\x42\n\x03not\x18\x03 \x01(\x0b\x32..com.intentionet.bfe.assertions.FlowFilterExprH\x00R\x03not\x12L\n\x06src_ip\x18\x04 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.IpAddressFilterExprH\x00R\x05srcIp\x12L\n\x06\x64st_ip\x18\x05 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.IpAddressFilterExprH\x00R\x05\x64stIp\x12\x12\n\x03\x61pp\x18\x06 \x01(\tH\x00R\x03\x61ppB\x06\n\x04\x65xpr\"\xd0\x02\n\x08\x46lowExpr\x12L\n\x07src_ips\x18\x01 \x03(\x0b\x32\x33.com.intentionet.bfe.assertions.IpAddressFilterExprR\x06srcIps\x12L\n\x07\x64st_ips\x18\x02 \x03(\x0b\x32\x33.com.intentionet.bfe.assertions.IpAddressFilterExprR\x06\x64stIps\x12\x12\n\x04\x61pps\x18\x03 \x03(\tR\x04\x61pps\x12\\\n\radvanced_apps\x18\x04 \x03(\x0b\x32\x37.com.intentionet.bfe.assertions.AdvancedApplicationExprR\x0c\x61\x64vancedApps\x12\x36\n\x17unfragmented_flows_only\x18\x05 \x01(\x08R\x15unfragmentedFlowsOnly\"\x91\x01\n\x17\x41\x64vancedApplicationExpr\x12\x1f\n\x0bip_protocol\x18\x01 \x01(\tR\nipProtocol\x12\x1b\n\tsrc_ports\x18\x02 \x01(\tR\x08srcPorts\x12\x1b\n\tdst_ports\x18\x03 \x01(\tR\x08\x64stPorts\x12\x1b\n\ttcp_flags\x18\x04 \x03(\tR\x08tcpFlags\"_\n\x13IpAddressFilterExpr\x12!\n\x0b\x65xact_match\x18\x01 \x01(\tH\x00R\nexactMatch\x12\x1d\n\tin_prefix\x18\x02 \x01(\tH\x00R\x08inPrefixB\x06\n\x04\x65xpr\"_\n\x11\x46lowFilterAndExpr\x12J\n\x08\x65lements\x18\x01 \x03(\x0b\x32..com.intentionet.bfe.assertions.FlowFilterExprR\x08\x65lements\"^\n\x10\x46lowFilterOrExpr\x12J\n\x08\x65lements\x18\x01 \x03(\x0b\x32..com.intentionet.bfe.assertions.FlowFilterExprR\x08\x65lements\"\x90\x03\n\x0cMatchServers\x12\x44\n\x03ntp\x18\x01 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.MatchServersExprH\x00R\x03ntp\x12\x44\n\x03\x64ns\x18\x02 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.MatchServersExprH\x00R\x03\x64ns\x12O\n\tsnmp_trap\x18\x03 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.MatchServersExprH\x00R\x08snmpTrap\x12L\n\x07logging\x18\x04 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.MatchServersExprH\x00R\x07logging\x12J\n\x06tacacs\x18\x05 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.MatchServersExprH\x00R\x06tacacsB\t\n\x07servers\"b\n\x10MatchServersExpr\x12\x46\n\x03set\x18\x02 \x01(\x0b\x32\x32.com.intentionet.bfe.assertions.MatchStringSetExprH\x00R\x03setB\x06\n\x04\x65xpr\"\xa3\x01\n\x11\x42gpPeerFilterExpr\x12\x46\n\x07include\x18\x01 \x03(\x0b\x32,.com.intentionet.bfe.assertions.MatchBgpPeerR\x07include\x12\x46\n\x07\x65xclude\x18\x02 \x03(\x0b\x32,.com.intentionet.bfe.assertions.MatchBgpPeerR\x07\x65xclude\"\x97\x03\n\x0cMatchBgpPeer\x12J\n\x07\x64\x65vices\x18\x01 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DeviceFilterExprR\x07\x64\x65vices\x12W\n\x0bpeer_groups\x18\x02 \x01(\x0b\x32\x36.com.intentionet.bfe.assertions.BgpPeerGroupFilterExprR\npeerGroups\x12L\n\nlocal_asns\x18\x03 \x01(\x0b\x32-.com.intentionet.bfe.assertions.AsnFilterExprR\tlocalAsns\x12S\n\tneighbors\x18\x04 \x01(\x0b\x32\x35.com.intentionet.bfe.assertions.BgpNeighborFilterExprR\tneighbors\x12?\n\x04vrfs\x18\x05 \x01(\x0b\x32+.com.intentionet.bfe.assertions.VrfNameExprR\x04vrfs\"\xe2\x04\n\x15\x42gpNeighborFilterExpr\x12V\n\x06\x61\x63tive\x18\x01 \x01(\x0b\x32<.com.intentionet.bfe.assertions.BgpNeighborFilterExpr.ActiveH\x00R\x06\x61\x63tive\x12Y\n\x07\x64ynamic\x18\x02 \x01(\x0b\x32=.com.intentionet.bfe.assertions.BgpNeighborFilterExpr.DynamicH\x00R\x07\x64ynamic\x12\x62\n\nunnumbered\x18\x03 \x01(\x0b\x32@.com.intentionet.bfe.assertions.BgpNeighborFilterExpr.UnnumberedH\x00R\nunnumbered\x1a\\\n\x06\x41\x63tive\x12R\n\nremote_ips\x18\x01 \x03(\x0b\x32\x33.com.intentionet.bfe.assertions.IpAddressFilterExprR\tremoteIps\x1a\x61\n\x07\x44ynamic\x12V\n\rlisten_ranges\x18\x02 \x03(\x0b\x32\x31.com.intentionet.bfe.assertions.MatchIpPrefixExprR\x0clistenRanges\x1ai\n\nUnnumbered\x12[\n\x0finterface_names\x18\x03 \x03(\x0b\x32\x32.com.intentionet.bfe.assertions.MatchInterfaceNameR\x0einterfaceNamesB\x06\n\x04type\"b\n\x16\x42gpPeerGroupFilterExpr\x12H\n\x04name\x18\x01 \x01(\x0b\x32\x34.com.intentionet.bfe.assertions.BgpPeerGroupNameExprR\x04name\"6\n\x14\x42gpPeerGroupNameExpr\x12\x16\n\x05regex\x18\x01 \x01(\tH\x00R\x05regexB\x06\n\x04\x65xpr\"j\n\rAsnFilterExpr\x12Q\n\tasn_range\x18\x01 \x01(\x0b\x32\x32.com.intentionet.bfe.assertions.MatchLongRangeExprH\x00R\x08\x61snRangeB\x06\n\x04\x65xpr\"\xac\x01\n\x14\x42gpProcessFilterExpr\x12I\n\x07include\x18\x01 \x03(\x0b\x32/.com.intentionet.bfe.assertions.MatchBgpProcessR\x07include\x12I\n\x07\x65xclude\x18\x02 \x03(\x0b\x32/.com.intentionet.bfe.assertions.MatchBgpProcessR\x07\x65xclude\"\xf6\x01\n\x0fMatchBgpProcess\x12J\n\x07\x64\x65vices\x18\x01 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DeviceFilterExprR\x07\x64\x65vices\x12O\n\trouter_id\x18\x02 \x01(\x0b\x32\x32.com.intentionet.bfe.assertions.RouterIdFilterExprR\x08routerId\x12\x46\n\x08vrf_name\x18\x03 \x01(\x0b\x32+.com.intentionet.bfe.assertions.VrfNameExprR\x07vrfName\"p\n\x12RouterIdFilterExpr\x12@\n\trouter_id\x18\x01 \x01(\x0b\x32\x1d.com.intentionet.datamodel.IpB\x02\x18\x01H\x00R\x08routerId\x12\x10\n\x02ip\x18\x02 \x01(\tH\x00R\x02ipB\x06\n\x04\x65xpr\"\xbb\x01\n\x13SecurityGroupFilter\x12Q\n\x07include\x18\x01 \x03(\x0b\x32\x37.com.intentionet.bfe.assertions.SecurityGroupFilterExprR\x07include\x12Q\n\x07\x65xclude\x18\x02 \x03(\x0b\x32\x37.com.intentionet.bfe.assertions.SecurityGroupFilterExprR\x07\x65xclude\"\xb8\x02\n\x17SecurityGroupFilterExpr\x12M\n\x07\x61\x63\x63ount\x18\x05 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.AwsAccountMatchExprR\x07\x61\x63\x63ount\x12J\n\x06region\x18\x06 \x01(\x0b\x32\x32.com.intentionet.bfe.assertions.AwsRegionMatchExprR\x06region\x12O\n\x04name\x18\x07 \x01(\x0b\x32;.com.intentionet.bfe.assertions.SecurityGroupFilterNameExprR\x04name\x12\x19\n\x08group_id\x18\x08 \x03(\tR\x07groupIdJ\x04\x08\x01\x10\x02J\x04\x08\x02\x10\x03J\x04\x08\x03\x10\x04J\x04\x08\x04\x10\x05\"=\n\x1bSecurityGroupFilterNameExpr\x12\x16\n\x05regex\x18\x01 \x01(\tH\x00R\x05regexB\x06\n\x04\x65xpr\"\x98\x03\n\x17MatchSecurityGroupRules\x12N\n\tip_prefix\x18\x04 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.MatchIpPrefixExprR\x08ipPrefix\x12*\n\x03\x61ll\x18\x05 \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00R\x03\x61ll\x12N\n\x03tcp\x18\x06 \x01(\x0b\x32:.com.intentionet.bfe.assertions.MatchProtocolWithPortsExprH\x00R\x03tcp\x12N\n\x03udp\x18\x07 \x01(\x0b\x32:.com.intentionet.bfe.assertions.MatchProtocolWithPortsExprH\x00R\x03udp\x12\x43\n\x04icmp\x18\x08 \x01(\x0b\x32-.com.intentionet.bfe.assertions.MatchIcmpExprH\x00R\x04icmpB\n\n\x08protocolJ\x04\x08\x01\x10\x02J\x04\x08\x02\x10\x03J\x04\x08\x03\x10\x04\"\xb5\x01\n\x11\x41wsInstanceFilter\x12O\n\x07include\x18\x01 \x03(\x0b\x32\x35.com.intentionet.bfe.assertions.AwsInstanceFilterExprR\x07include\x12O\n\x07\x65xclude\x18\x02 \x03(\x0b\x32\x35.com.intentionet.bfe.assertions.AwsInstanceFilterExprR\x07\x65xclude\"\xd9\x02\n\x15\x41wsInstanceFilterExpr\x12M\n\x07\x61\x63\x63ount\x18\x01 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.AwsAccountMatchExprR\x07\x61\x63\x63ount\x12J\n\x06region\x18\x02 \x01(\x0b\x32\x32.com.intentionet.bfe.assertions.AwsRegionMatchExprR\x06region\x12\x41\n\x03vpc\x18\x03 \x01(\x0b\x32/.com.intentionet.bfe.assertions.AwsVpcMatchExprR\x03vpc\x12\x41\n\x03tag\x18\x04 \x01(\x0b\x32/.com.intentionet.bfe.assertions.AwsTagMatchExprR\x03tag\x12\x1f\n\x0binstance_id\x18\x05 \x03(\tR\ninstanceId\"\xcd\x01\n\x19\x41wsNetworkInterfaceFilter\x12W\n\x07include\x18\x01 \x03(\x0b\x32=.com.intentionet.bfe.assertions.AwsNetworkInterfaceFilterExprR\x07include\x12W\n\x07\x65xclude\x18\x02 \x03(\x0b\x32=.com.intentionet.bfe.assertions.AwsNetworkInterfaceFilterExprR\x07\x65xclude\"\xd1\x01\n\x1d\x41wsNetworkInterfaceFilterExpr\x12M\n\x07\x61\x63\x63ount\x18\x01 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.AwsAccountMatchExprR\x07\x61\x63\x63ount\x12J\n\x06region\x18\x02 \x01(\x0b\x32\x32.com.intentionet.bfe.assertions.AwsRegionMatchExprR\x06region\x12\x15\n\x06\x65ni_id\x18\x03 \x03(\tR\x05\x65niId\"\xb8\x01\n\x13\x41wsAccountMatchExpr\x12O\n\x06\x65quals\x18\x01 \x01(\x0b\x32\x35.com.intentionet.bfe.assertions.MatchAwsAccountEqualsH\x00R\x06\x65quals\x12H\n\x03\x61ny\x18\x02 \x01(\x0b\x32\x34.com.intentionet.bfe.assertions.MatchAwsAccountAnyOfH\x00R\x03\x61nyB\x06\n\x04\x65xpr\"\'\n\x15MatchAwsAccountEquals\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\"]\n\x14MatchAwsAccountAnyOf\x12\x45\n\x02of\x18\x01 \x03(\x0b\x32\x35.com.intentionet.bfe.assertions.MatchAwsAccountEqualsR\x02of\"e\n\x12\x41wsRegionMatchExpr\x12G\n\x03\x61ny\x18\x01 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.MatchAwsRegionAnyOfH\x00R\x03\x61nyB\x06\n\x04\x65xpr\"*\n\x14MatchAwsRegionEquals\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\"[\n\x13MatchAwsRegionAnyOf\x12\x44\n\x02of\x18\x01 \x03(\x0b\x32\x34.com.intentionet.bfe.assertions.MatchAwsRegionEqualsR\x02of\"\xac\x01\n\x0f\x41wsVpcMatchExpr\x12K\n\x06\x65quals\x18\x01 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.MatchAwsVpcEqualsH\x00R\x06\x65quals\x12\x44\n\x03\x61ny\x18\x02 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.MatchAwsVpcAnyOfH\x00R\x03\x61nyB\x06\n\x04\x65xpr\"#\n\x11MatchAwsVpcEquals\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\"U\n\x10MatchAwsVpcAnyOf\x12\x41\n\x02of\x18\x01 \x03(\x0b\x32\x31.com.intentionet.bfe.assertions.MatchAwsVpcEqualsR\x02of\"a\n\x0f\x41wsTagMatchExpr\x12\x46\n\x06\x65quals\x18\x01 \x01(\x0b\x32,.com.intentionet.bfe.proto.datamodel.aws.TagH\x00R\x06\x65qualsB\x06\n\x04\x65xpr\"e\n\x1aMatchProtocolWithPortsExpr\x12G\n\x05ports\x18\x01 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.MatchIntRangeExprR\x05ports\"\x81\x01\n\rMatchIcmpExpr\x12\x37\n\x04type\x18\x01 \x01(\x0b\x32#.com.intentionet.datamodel.IcmpTypeR\x04type\x12\x37\n\x04\x63ode\x18\x02 \x01(\x0b\x32#.com.intentionet.datamodel.IcmpCodeR\x04\x63ode\"\x80\x02\n\x0fMatchUInt32Expr\x12\x18\n\x06\x65quals\x18\x01 \x01(\rH\x00R\x06\x65quals\x12#\n\x0cgreater_than\x18\x02 \x01(\rH\x00R\x0bgreaterThan\x12\x35\n\x16greater_than_or_equals\x18\x03 \x01(\rH\x00R\x13greaterThanOrEquals\x12\x1d\n\tless_than\x18\x04 \x01(\rH\x00R\x08lessThan\x12/\n\x13less_than_or_equals\x18\x05 \x01(\rH\x00R\x10lessThanOrEquals\x12\x1f\n\nnot_equals\x18\x06 \x01(\rH\x00R\tnotEqualsB\x06\n\x04\x65xpr\"\x82\x02\n\x12MatchStringSetExpr\x12J\n\x06\x65quals\x18\x01 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.StringCollectionH\x00R\x06\x65quals\x12K\n\x07has_any\x18\x02 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.StringCollectionH\x00R\x06hasAny\x12K\n\x07has_all\x18\x03 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.StringCollectionH\x00R\x06hasAllB\x06\n\x04\x65xpr\"\x82\x01\n\x14MatchStringSetResult\x12\x16\n\x06values\x18\x01 \x03(\tR\x06values\x12R\n\x08problems\x18\x02 \x01(\x0b\x32\x36.com.intentionet.bfe.assertions.MatchStringSetProblemsR\x08problems\"r\n\x16MatchStringSetProblems\x12\x1f\n\x0bmissing_all\x18\x01 \x03(\tR\nmissingAll\x12!\n\x0cmissing_some\x18\x02 \x03(\tR\x0bmissingSome\x12\x14\n\x05\x65xtra\x18\x03 \x03(\tR\x05\x65xtra\";\n\x13MatchIpProtocolExpr\x12\x1c\n\x08includes\x18\x01 \x01(\tH\x00R\x08includesB\x06\n\x04\x65xpr\"b\n\x11MatchIntRangeExpr\x12\x45\n\nintersects\x18\x01 \x01(\x0b\x32#.com.intentionet.datamodel.IntRangeH\x00R\nintersectsB\x06\n\x04\x65xpr\"d\n\x12MatchLongRangeExpr\x12\x46\n\nintersects\x18\x01 \x01(\x0b\x32$.com.intentionet.datamodel.LongRangeH\x00R\nintersectsB\x06\n\x04\x65xpr\"~\n\x11MatchIpPrefixExpr\x12\x18\n\x06\x65quals\x18\x02 \x01(\tH\x00R\x06\x65quals\x12\x1c\n\x08\x63ontains\x18\x03 \x01(\tH\x00R\x08\x63ontains\x12#\n\x0c\x63ontained_by\x18\x04 \x01(\tH\x00R\x0b\x63ontainedByB\x06\n\x04\x65xprJ\x04\x08\x01\x10\x02\"(\n\x10StringCollection\x12\x14\n\x05items\x18\x01 \x03(\tR\x05itemsb\x06proto3')



_DEVICEFILTEREXPR = DESCRIPTOR.message_types_by_name['DeviceFilterExpr']
_DEVICEFILTERHOSTNAMEEXPR = DESCRIPTOR.message_types_by_name['DeviceFilterHostnameExpr']
_INTERFACEFILTEREXPR = DESCRIPTOR.message_types_by_name['InterfaceFilterExpr']
_MATCHINTERFACE = DESCRIPTOR.message_types_by_name['MatchInterface']
_MATCHINTERFACENAME = DESCRIPTOR.message_types_by_name['MatchInterfaceName']
_VRFFILTEREXPR = DESCRIPTOR.message_types_by_name['VrfFilterExpr']
_VRFNAMEEXPR = DESCRIPTOR.message_types_by_name['VrfNameExpr']
_INTERFACEEXPR = DESCRIPTOR.message_types_by_name['InterfaceExpr']
_FILTERMATCHEXPR = DESCRIPTOR.message_types_by_name['FilterMatchExpr']
_FILTERNAMEMATCHEXPR = DESCRIPTOR.message_types_by_name['FilterNameMatchExpr']
_DEVICEFILTERCISCOVENDOREXPR = DESCRIPTOR.message_types_by_name['DeviceFilterCiscoVendorExpr']
_DEVICEFILTERVENDOREXPR = DESCRIPTOR.message_types_by_name['DeviceFilterVendorExpr']
_DEVICEFILTERVENDORLISTEXPR = DESCRIPTOR.message_types_by_name['DeviceFilterVendorListExpr']
_FIREWALLLOCATIONMATCHEXPR = DESCRIPTOR.message_types_by_name['FirewallLocationMatchExpr']
_ZONEMATCHEXPR = DESCRIPTOR.message_types_by_name['ZoneMatchExpr']
_FILTERBEHAVIOREXPECT = DESCRIPTOR.message_types_by_name['FilterBehaviorExpect']
_FIREWALLBEHAVIOREXPECT = DESCRIPTOR.message_types_by_name['FirewallBehaviorExpect']
_FLOWFILTEREXPR = DESCRIPTOR.message_types_by_name['FlowFilterExpr']
_FLOWEXPR = DESCRIPTOR.message_types_by_name['FlowExpr']
_ADVANCEDAPPLICATIONEXPR = DESCRIPTOR.message_types_by_name['AdvancedApplicationExpr']
_IPADDRESSFILTEREXPR = DESCRIPTOR.message_types_by_name['IpAddressFilterExpr']
_FLOWFILTERANDEXPR = DESCRIPTOR.message_types_by_name['FlowFilterAndExpr']
_FLOWFILTEROREXPR = DESCRIPTOR.message_types_by_name['FlowFilterOrExpr']
_MATCHSERVERS = DESCRIPTOR.message_types_by_name['MatchServers']
_MATCHSERVERSEXPR = DESCRIPTOR.message_types_by_name['MatchServersExpr']
_BGPPEERFILTEREXPR = DESCRIPTOR.message_types_by_name['BgpPeerFilterExpr']
_MATCHBGPPEER = DESCRIPTOR.message_types_by_name['MatchBgpPeer']
_BGPNEIGHBORFILTEREXPR = DESCRIPTOR.message_types_by_name['BgpNeighborFilterExpr']
_BGPNEIGHBORFILTEREXPR_ACTIVE = _BGPNEIGHBORFILTEREXPR.nested_types_by_name['Active']
_BGPNEIGHBORFILTEREXPR_DYNAMIC = _BGPNEIGHBORFILTEREXPR.nested_types_by_name['Dynamic']
_BGPNEIGHBORFILTEREXPR_UNNUMBERED = _BGPNEIGHBORFILTEREXPR.nested_types_by_name['Unnumbered']
_BGPPEERGROUPFILTEREXPR = DESCRIPTOR.message_types_by_name['BgpPeerGroupFilterExpr']
_BGPPEERGROUPNAMEEXPR = DESCRIPTOR.message_types_by_name['BgpPeerGroupNameExpr']
_ASNFILTEREXPR = DESCRIPTOR.message_types_by_name['AsnFilterExpr']
_BGPPROCESSFILTEREXPR = DESCRIPTOR.message_types_by_name['BgpProcessFilterExpr']
_MATCHBGPPROCESS = DESCRIPTOR.message_types_by_name['MatchBgpProcess']
_ROUTERIDFILTEREXPR = DESCRIPTOR.message_types_by_name['RouterIdFilterExpr']
_SECURITYGROUPFILTER = DESCRIPTOR.message_types_by_name['SecurityGroupFilter']
_SECURITYGROUPFILTEREXPR = DESCRIPTOR.message_types_by_name['SecurityGroupFilterExpr']
_SECURITYGROUPFILTERNAMEEXPR = DESCRIPTOR.message_types_by_name['SecurityGroupFilterNameExpr']
_MATCHSECURITYGROUPRULES = DESCRIPTOR.message_types_by_name['MatchSecurityGroupRules']
_AWSINSTANCEFILTER = DESCRIPTOR.message_types_by_name['AwsInstanceFilter']
_AWSINSTANCEFILTEREXPR = DESCRIPTOR.message_types_by_name['AwsInstanceFilterExpr']
_AWSNETWORKINTERFACEFILTER = DESCRIPTOR.message_types_by_name['AwsNetworkInterfaceFilter']
_AWSNETWORKINTERFACEFILTEREXPR = DESCRIPTOR.message_types_by_name['AwsNetworkInterfaceFilterExpr']
_AWSACCOUNTMATCHEXPR = DESCRIPTOR.message_types_by_name['AwsAccountMatchExpr']
_MATCHAWSACCOUNTEQUALS = DESCRIPTOR.message_types_by_name['MatchAwsAccountEquals']
_MATCHAWSACCOUNTANYOF = DESCRIPTOR.message_types_by_name['MatchAwsAccountAnyOf']
_AWSREGIONMATCHEXPR = DESCRIPTOR.message_types_by_name['AwsRegionMatchExpr']
_MATCHAWSREGIONEQUALS = DESCRIPTOR.message_types_by_name['MatchAwsRegionEquals']
_MATCHAWSREGIONANYOF = DESCRIPTOR.message_types_by_name['MatchAwsRegionAnyOf']
_AWSVPCMATCHEXPR = DESCRIPTOR.message_types_by_name['AwsVpcMatchExpr']
_MATCHAWSVPCEQUALS = DESCRIPTOR.message_types_by_name['MatchAwsVpcEquals']
_MATCHAWSVPCANYOF = DESCRIPTOR.message_types_by_name['MatchAwsVpcAnyOf']
_AWSTAGMATCHEXPR = DESCRIPTOR.message_types_by_name['AwsTagMatchExpr']
_MATCHPROTOCOLWITHPORTSEXPR = DESCRIPTOR.message_types_by_name['MatchProtocolWithPortsExpr']
_MATCHICMPEXPR = DESCRIPTOR.message_types_by_name['MatchIcmpExpr']
_MATCHUINT32EXPR = DESCRIPTOR.message_types_by_name['MatchUInt32Expr']
_MATCHSTRINGSETEXPR = DESCRIPTOR.message_types_by_name['MatchStringSetExpr']
_MATCHSTRINGSETRESULT = DESCRIPTOR.message_types_by_name['MatchStringSetResult']
_MATCHSTRINGSETPROBLEMS = DESCRIPTOR.message_types_by_name['MatchStringSetProblems']
_MATCHIPPROTOCOLEXPR = DESCRIPTOR.message_types_by_name['MatchIpProtocolExpr']
_MATCHINTRANGEEXPR = DESCRIPTOR.message_types_by_name['MatchIntRangeExpr']
_MATCHLONGRANGEEXPR = DESCRIPTOR.message_types_by_name['MatchLongRangeExpr']
_MATCHIPPREFIXEXPR = DESCRIPTOR.message_types_by_name['MatchIpPrefixExpr']
_STRINGCOLLECTION = DESCRIPTOR.message_types_by_name['StringCollection']
_FILTERBEHAVIOREXPECT_ACTION = _FILTERBEHAVIOREXPECT.enum_types_by_name['Action']
_FIREWALLBEHAVIOREXPECT_ACTION = _FIREWALLBEHAVIOREXPECT.enum_types_by_name['Action']
DeviceFilterExpr = _reflection.GeneratedProtocolMessageType('DeviceFilterExpr', (_message.Message,), {
  'DESCRIPTOR' : _DEVICEFILTEREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DeviceFilterExpr)
  })
_sym_db.RegisterMessage(DeviceFilterExpr)

DeviceFilterHostnameExpr = _reflection.GeneratedProtocolMessageType('DeviceFilterHostnameExpr', (_message.Message,), {
  'DESCRIPTOR' : _DEVICEFILTERHOSTNAMEEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DeviceFilterHostnameExpr)
  })
_sym_db.RegisterMessage(DeviceFilterHostnameExpr)

InterfaceFilterExpr = _reflection.GeneratedProtocolMessageType('InterfaceFilterExpr', (_message.Message,), {
  'DESCRIPTOR' : _INTERFACEFILTEREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.InterfaceFilterExpr)
  })
_sym_db.RegisterMessage(InterfaceFilterExpr)

MatchInterface = _reflection.GeneratedProtocolMessageType('MatchInterface', (_message.Message,), {
  'DESCRIPTOR' : _MATCHINTERFACE,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchInterface)
  })
_sym_db.RegisterMessage(MatchInterface)

MatchInterfaceName = _reflection.GeneratedProtocolMessageType('MatchInterfaceName', (_message.Message,), {
  'DESCRIPTOR' : _MATCHINTERFACENAME,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchInterfaceName)
  })
_sym_db.RegisterMessage(MatchInterfaceName)

VrfFilterExpr = _reflection.GeneratedProtocolMessageType('VrfFilterExpr', (_message.Message,), {
  'DESCRIPTOR' : _VRFFILTEREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.VrfFilterExpr)
  })
_sym_db.RegisterMessage(VrfFilterExpr)

VrfNameExpr = _reflection.GeneratedProtocolMessageType('VrfNameExpr', (_message.Message,), {
  'DESCRIPTOR' : _VRFNAMEEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.VrfNameExpr)
  })
_sym_db.RegisterMessage(VrfNameExpr)

InterfaceExpr = _reflection.GeneratedProtocolMessageType('InterfaceExpr', (_message.Message,), {
  'DESCRIPTOR' : _INTERFACEEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.InterfaceExpr)
  })
_sym_db.RegisterMessage(InterfaceExpr)

FilterMatchExpr = _reflection.GeneratedProtocolMessageType('FilterMatchExpr', (_message.Message,), {
  'DESCRIPTOR' : _FILTERMATCHEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FilterMatchExpr)
  })
_sym_db.RegisterMessage(FilterMatchExpr)

FilterNameMatchExpr = _reflection.GeneratedProtocolMessageType('FilterNameMatchExpr', (_message.Message,), {
  'DESCRIPTOR' : _FILTERNAMEMATCHEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FilterNameMatchExpr)
  })
_sym_db.RegisterMessage(FilterNameMatchExpr)

DeviceFilterCiscoVendorExpr = _reflection.GeneratedProtocolMessageType('DeviceFilterCiscoVendorExpr', (_message.Message,), {
  'DESCRIPTOR' : _DEVICEFILTERCISCOVENDOREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DeviceFilterCiscoVendorExpr)
  })
_sym_db.RegisterMessage(DeviceFilterCiscoVendorExpr)

DeviceFilterVendorExpr = _reflection.GeneratedProtocolMessageType('DeviceFilterVendorExpr', (_message.Message,), {
  'DESCRIPTOR' : _DEVICEFILTERVENDOREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DeviceFilterVendorExpr)
  })
_sym_db.RegisterMessage(DeviceFilterVendorExpr)

DeviceFilterVendorListExpr = _reflection.GeneratedProtocolMessageType('DeviceFilterVendorListExpr', (_message.Message,), {
  'DESCRIPTOR' : _DEVICEFILTERVENDORLISTEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DeviceFilterVendorListExpr)
  })
_sym_db.RegisterMessage(DeviceFilterVendorListExpr)

FirewallLocationMatchExpr = _reflection.GeneratedProtocolMessageType('FirewallLocationMatchExpr', (_message.Message,), {
  'DESCRIPTOR' : _FIREWALLLOCATIONMATCHEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FirewallLocationMatchExpr)
  })
_sym_db.RegisterMessage(FirewallLocationMatchExpr)

ZoneMatchExpr = _reflection.GeneratedProtocolMessageType('ZoneMatchExpr', (_message.Message,), {
  'DESCRIPTOR' : _ZONEMATCHEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.ZoneMatchExpr)
  })
_sym_db.RegisterMessage(ZoneMatchExpr)

FilterBehaviorExpect = _reflection.GeneratedProtocolMessageType('FilterBehaviorExpect', (_message.Message,), {
  'DESCRIPTOR' : _FILTERBEHAVIOREXPECT,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FilterBehaviorExpect)
  })
_sym_db.RegisterMessage(FilterBehaviorExpect)

FirewallBehaviorExpect = _reflection.GeneratedProtocolMessageType('FirewallBehaviorExpect', (_message.Message,), {
  'DESCRIPTOR' : _FIREWALLBEHAVIOREXPECT,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FirewallBehaviorExpect)
  })
_sym_db.RegisterMessage(FirewallBehaviorExpect)

FlowFilterExpr = _reflection.GeneratedProtocolMessageType('FlowFilterExpr', (_message.Message,), {
  'DESCRIPTOR' : _FLOWFILTEREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FlowFilterExpr)
  })
_sym_db.RegisterMessage(FlowFilterExpr)

FlowExpr = _reflection.GeneratedProtocolMessageType('FlowExpr', (_message.Message,), {
  'DESCRIPTOR' : _FLOWEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FlowExpr)
  })
_sym_db.RegisterMessage(FlowExpr)

AdvancedApplicationExpr = _reflection.GeneratedProtocolMessageType('AdvancedApplicationExpr', (_message.Message,), {
  'DESCRIPTOR' : _ADVANCEDAPPLICATIONEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AdvancedApplicationExpr)
  })
_sym_db.RegisterMessage(AdvancedApplicationExpr)

IpAddressFilterExpr = _reflection.GeneratedProtocolMessageType('IpAddressFilterExpr', (_message.Message,), {
  'DESCRIPTOR' : _IPADDRESSFILTEREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.IpAddressFilterExpr)
  })
_sym_db.RegisterMessage(IpAddressFilterExpr)

FlowFilterAndExpr = _reflection.GeneratedProtocolMessageType('FlowFilterAndExpr', (_message.Message,), {
  'DESCRIPTOR' : _FLOWFILTERANDEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FlowFilterAndExpr)
  })
_sym_db.RegisterMessage(FlowFilterAndExpr)

FlowFilterOrExpr = _reflection.GeneratedProtocolMessageType('FlowFilterOrExpr', (_message.Message,), {
  'DESCRIPTOR' : _FLOWFILTEROREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FlowFilterOrExpr)
  })
_sym_db.RegisterMessage(FlowFilterOrExpr)

MatchServers = _reflection.GeneratedProtocolMessageType('MatchServers', (_message.Message,), {
  'DESCRIPTOR' : _MATCHSERVERS,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchServers)
  })
_sym_db.RegisterMessage(MatchServers)

MatchServersExpr = _reflection.GeneratedProtocolMessageType('MatchServersExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHSERVERSEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchServersExpr)
  })
_sym_db.RegisterMessage(MatchServersExpr)

BgpPeerFilterExpr = _reflection.GeneratedProtocolMessageType('BgpPeerFilterExpr', (_message.Message,), {
  'DESCRIPTOR' : _BGPPEERFILTEREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeerFilterExpr)
  })
_sym_db.RegisterMessage(BgpPeerFilterExpr)

MatchBgpPeer = _reflection.GeneratedProtocolMessageType('MatchBgpPeer', (_message.Message,), {
  'DESCRIPTOR' : _MATCHBGPPEER,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchBgpPeer)
  })
_sym_db.RegisterMessage(MatchBgpPeer)

BgpNeighborFilterExpr = _reflection.GeneratedProtocolMessageType('BgpNeighborFilterExpr', (_message.Message,), {

  'Active' : _reflection.GeneratedProtocolMessageType('Active', (_message.Message,), {
    'DESCRIPTOR' : _BGPNEIGHBORFILTEREXPR_ACTIVE,
    '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpNeighborFilterExpr.Active)
    })
  ,

  'Dynamic' : _reflection.GeneratedProtocolMessageType('Dynamic', (_message.Message,), {
    'DESCRIPTOR' : _BGPNEIGHBORFILTEREXPR_DYNAMIC,
    '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpNeighborFilterExpr.Dynamic)
    })
  ,

  'Unnumbered' : _reflection.GeneratedProtocolMessageType('Unnumbered', (_message.Message,), {
    'DESCRIPTOR' : _BGPNEIGHBORFILTEREXPR_UNNUMBERED,
    '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpNeighborFilterExpr.Unnumbered)
    })
  ,
  'DESCRIPTOR' : _BGPNEIGHBORFILTEREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpNeighborFilterExpr)
  })
_sym_db.RegisterMessage(BgpNeighborFilterExpr)
_sym_db.RegisterMessage(BgpNeighborFilterExpr.Active)
_sym_db.RegisterMessage(BgpNeighborFilterExpr.Dynamic)
_sym_db.RegisterMessage(BgpNeighborFilterExpr.Unnumbered)

BgpPeerGroupFilterExpr = _reflection.GeneratedProtocolMessageType('BgpPeerGroupFilterExpr', (_message.Message,), {
  'DESCRIPTOR' : _BGPPEERGROUPFILTEREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeerGroupFilterExpr)
  })
_sym_db.RegisterMessage(BgpPeerGroupFilterExpr)

BgpPeerGroupNameExpr = _reflection.GeneratedProtocolMessageType('BgpPeerGroupNameExpr', (_message.Message,), {
  'DESCRIPTOR' : _BGPPEERGROUPNAMEEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeerGroupNameExpr)
  })
_sym_db.RegisterMessage(BgpPeerGroupNameExpr)

AsnFilterExpr = _reflection.GeneratedProtocolMessageType('AsnFilterExpr', (_message.Message,), {
  'DESCRIPTOR' : _ASNFILTEREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AsnFilterExpr)
  })
_sym_db.RegisterMessage(AsnFilterExpr)

BgpProcessFilterExpr = _reflection.GeneratedProtocolMessageType('BgpProcessFilterExpr', (_message.Message,), {
  'DESCRIPTOR' : _BGPPROCESSFILTEREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpProcessFilterExpr)
  })
_sym_db.RegisterMessage(BgpProcessFilterExpr)

MatchBgpProcess = _reflection.GeneratedProtocolMessageType('MatchBgpProcess', (_message.Message,), {
  'DESCRIPTOR' : _MATCHBGPPROCESS,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchBgpProcess)
  })
_sym_db.RegisterMessage(MatchBgpProcess)

RouterIdFilterExpr = _reflection.GeneratedProtocolMessageType('RouterIdFilterExpr', (_message.Message,), {
  'DESCRIPTOR' : _ROUTERIDFILTEREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.RouterIdFilterExpr)
  })
_sym_db.RegisterMessage(RouterIdFilterExpr)

SecurityGroupFilter = _reflection.GeneratedProtocolMessageType('SecurityGroupFilter', (_message.Message,), {
  'DESCRIPTOR' : _SECURITYGROUPFILTER,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SecurityGroupFilter)
  })
_sym_db.RegisterMessage(SecurityGroupFilter)

SecurityGroupFilterExpr = _reflection.GeneratedProtocolMessageType('SecurityGroupFilterExpr', (_message.Message,), {
  'DESCRIPTOR' : _SECURITYGROUPFILTEREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SecurityGroupFilterExpr)
  })
_sym_db.RegisterMessage(SecurityGroupFilterExpr)

SecurityGroupFilterNameExpr = _reflection.GeneratedProtocolMessageType('SecurityGroupFilterNameExpr', (_message.Message,), {
  'DESCRIPTOR' : _SECURITYGROUPFILTERNAMEEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SecurityGroupFilterNameExpr)
  })
_sym_db.RegisterMessage(SecurityGroupFilterNameExpr)

MatchSecurityGroupRules = _reflection.GeneratedProtocolMessageType('MatchSecurityGroupRules', (_message.Message,), {
  'DESCRIPTOR' : _MATCHSECURITYGROUPRULES,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchSecurityGroupRules)
  })
_sym_db.RegisterMessage(MatchSecurityGroupRules)

AwsInstanceFilter = _reflection.GeneratedProtocolMessageType('AwsInstanceFilter', (_message.Message,), {
  'DESCRIPTOR' : _AWSINSTANCEFILTER,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AwsInstanceFilter)
  })
_sym_db.RegisterMessage(AwsInstanceFilter)

AwsInstanceFilterExpr = _reflection.GeneratedProtocolMessageType('AwsInstanceFilterExpr', (_message.Message,), {
  'DESCRIPTOR' : _AWSINSTANCEFILTEREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AwsInstanceFilterExpr)
  })
_sym_db.RegisterMessage(AwsInstanceFilterExpr)

AwsNetworkInterfaceFilter = _reflection.GeneratedProtocolMessageType('AwsNetworkInterfaceFilter', (_message.Message,), {
  'DESCRIPTOR' : _AWSNETWORKINTERFACEFILTER,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AwsNetworkInterfaceFilter)
  })
_sym_db.RegisterMessage(AwsNetworkInterfaceFilter)

AwsNetworkInterfaceFilterExpr = _reflection.GeneratedProtocolMessageType('AwsNetworkInterfaceFilterExpr', (_message.Message,), {
  'DESCRIPTOR' : _AWSNETWORKINTERFACEFILTEREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AwsNetworkInterfaceFilterExpr)
  })
_sym_db.RegisterMessage(AwsNetworkInterfaceFilterExpr)

AwsAccountMatchExpr = _reflection.GeneratedProtocolMessageType('AwsAccountMatchExpr', (_message.Message,), {
  'DESCRIPTOR' : _AWSACCOUNTMATCHEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AwsAccountMatchExpr)
  })
_sym_db.RegisterMessage(AwsAccountMatchExpr)

MatchAwsAccountEquals = _reflection.GeneratedProtocolMessageType('MatchAwsAccountEquals', (_message.Message,), {
  'DESCRIPTOR' : _MATCHAWSACCOUNTEQUALS,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchAwsAccountEquals)
  })
_sym_db.RegisterMessage(MatchAwsAccountEquals)

MatchAwsAccountAnyOf = _reflection.GeneratedProtocolMessageType('MatchAwsAccountAnyOf', (_message.Message,), {
  'DESCRIPTOR' : _MATCHAWSACCOUNTANYOF,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchAwsAccountAnyOf)
  })
_sym_db.RegisterMessage(MatchAwsAccountAnyOf)

AwsRegionMatchExpr = _reflection.GeneratedProtocolMessageType('AwsRegionMatchExpr', (_message.Message,), {
  'DESCRIPTOR' : _AWSREGIONMATCHEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AwsRegionMatchExpr)
  })
_sym_db.RegisterMessage(AwsRegionMatchExpr)

MatchAwsRegionEquals = _reflection.GeneratedProtocolMessageType('MatchAwsRegionEquals', (_message.Message,), {
  'DESCRIPTOR' : _MATCHAWSREGIONEQUALS,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchAwsRegionEquals)
  })
_sym_db.RegisterMessage(MatchAwsRegionEquals)

MatchAwsRegionAnyOf = _reflection.GeneratedProtocolMessageType('MatchAwsRegionAnyOf', (_message.Message,), {
  'DESCRIPTOR' : _MATCHAWSREGIONANYOF,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchAwsRegionAnyOf)
  })
_sym_db.RegisterMessage(MatchAwsRegionAnyOf)

AwsVpcMatchExpr = _reflection.GeneratedProtocolMessageType('AwsVpcMatchExpr', (_message.Message,), {
  'DESCRIPTOR' : _AWSVPCMATCHEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AwsVpcMatchExpr)
  })
_sym_db.RegisterMessage(AwsVpcMatchExpr)

MatchAwsVpcEquals = _reflection.GeneratedProtocolMessageType('MatchAwsVpcEquals', (_message.Message,), {
  'DESCRIPTOR' : _MATCHAWSVPCEQUALS,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchAwsVpcEquals)
  })
_sym_db.RegisterMessage(MatchAwsVpcEquals)

MatchAwsVpcAnyOf = _reflection.GeneratedProtocolMessageType('MatchAwsVpcAnyOf', (_message.Message,), {
  'DESCRIPTOR' : _MATCHAWSVPCANYOF,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchAwsVpcAnyOf)
  })
_sym_db.RegisterMessage(MatchAwsVpcAnyOf)

AwsTagMatchExpr = _reflection.GeneratedProtocolMessageType('AwsTagMatchExpr', (_message.Message,), {
  'DESCRIPTOR' : _AWSTAGMATCHEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AwsTagMatchExpr)
  })
_sym_db.RegisterMessage(AwsTagMatchExpr)

MatchProtocolWithPortsExpr = _reflection.GeneratedProtocolMessageType('MatchProtocolWithPortsExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHPROTOCOLWITHPORTSEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchProtocolWithPortsExpr)
  })
_sym_db.RegisterMessage(MatchProtocolWithPortsExpr)

MatchIcmpExpr = _reflection.GeneratedProtocolMessageType('MatchIcmpExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHICMPEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchIcmpExpr)
  })
_sym_db.RegisterMessage(MatchIcmpExpr)

MatchUInt32Expr = _reflection.GeneratedProtocolMessageType('MatchUInt32Expr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHUINT32EXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchUInt32Expr)
  })
_sym_db.RegisterMessage(MatchUInt32Expr)

MatchStringSetExpr = _reflection.GeneratedProtocolMessageType('MatchStringSetExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHSTRINGSETEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchStringSetExpr)
  })
_sym_db.RegisterMessage(MatchStringSetExpr)

MatchStringSetResult = _reflection.GeneratedProtocolMessageType('MatchStringSetResult', (_message.Message,), {
  'DESCRIPTOR' : _MATCHSTRINGSETRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchStringSetResult)
  })
_sym_db.RegisterMessage(MatchStringSetResult)

MatchStringSetProblems = _reflection.GeneratedProtocolMessageType('MatchStringSetProblems', (_message.Message,), {
  'DESCRIPTOR' : _MATCHSTRINGSETPROBLEMS,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchStringSetProblems)
  })
_sym_db.RegisterMessage(MatchStringSetProblems)

MatchIpProtocolExpr = _reflection.GeneratedProtocolMessageType('MatchIpProtocolExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHIPPROTOCOLEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchIpProtocolExpr)
  })
_sym_db.RegisterMessage(MatchIpProtocolExpr)

MatchIntRangeExpr = _reflection.GeneratedProtocolMessageType('MatchIntRangeExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHINTRANGEEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchIntRangeExpr)
  })
_sym_db.RegisterMessage(MatchIntRangeExpr)

MatchLongRangeExpr = _reflection.GeneratedProtocolMessageType('MatchLongRangeExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHLONGRANGEEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchLongRangeExpr)
  })
_sym_db.RegisterMessage(MatchLongRangeExpr)

MatchIpPrefixExpr = _reflection.GeneratedProtocolMessageType('MatchIpPrefixExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHIPPREFIXEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchIpPrefixExpr)
  })
_sym_db.RegisterMessage(MatchIpPrefixExpr)

StringCollection = _reflection.GeneratedProtocolMessageType('StringCollection', (_message.Message,), {
  'DESCRIPTOR' : _STRINGCOLLECTION,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.StringCollection)
  })
_sym_db.RegisterMessage(StringCollection)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _ROUTERIDFILTEREXPR.fields_by_name['router_id']._options = None
  _ROUTERIDFILTEREXPR.fields_by_name['router_id']._serialized_options = b'\030\001'
  _DEVICEFILTEREXPR._serialized_start=271
  _DEVICEFILTEREXPR._serialized_end=471
  _DEVICEFILTERHOSTNAMEEXPR._serialized_start=473
  _DEVICEFILTERHOSTNAMEEXPR._serialized_end=531
  _INTERFACEFILTEREXPR._serialized_start=534
  _INTERFACEFILTEREXPR._serialized_end=703
  _MATCHINTERFACE._serialized_start=706
  _MATCHINTERFACE._serialized_end=870
  _MATCHINTERFACENAME._serialized_start=872
  _MATCHINTERFACENAME._serialized_end=924
  _VRFFILTEREXPR._serialized_start=927
  _VRFFILTEREXPR._serialized_end=1083
  _VRFNAMEEXPR._serialized_start=1085
  _VRFNAMEEXPR._serialized_end=1130
  _INTERFACEEXPR._serialized_start=1132
  _INTERFACEEXPR._serialized_end=1214
  _FILTERMATCHEXPR._serialized_start=1216
  _FILTERMATCHEXPR._serialized_end=1316
  _FILTERNAMEMATCHEXPR._serialized_start=1318
  _FILTERNAMEMATCHEXPR._serialized_end=1371
  _DEVICEFILTERCISCOVENDOREXPR._serialized_start=1374
  _DEVICEFILTERCISCOVENDOREXPR._serialized_end=1587
  _DEVICEFILTERVENDOREXPR._serialized_start=1590
  _DEVICEFILTERVENDOREXPR._serialized_end=1859
  _DEVICEFILTERVENDORLISTEXPR._serialized_start=1861
  _DEVICEFILTERVENDORLISTEXPR._serialized_end=1963
  _FIREWALLLOCATIONMATCHEXPR._serialized_start=1965
  _FIREWALLLOCATIONMATCHEXPR._serialized_end=2069
  _ZONEMATCHEXPR._serialized_start=2071
  _ZONEMATCHEXPR._serialized_end=2116
  _FILTERBEHAVIOREXPECT._serialized_start=2119
  _FILTERBEHAVIOREXPECT._serialized_end=2271
  _FILTERBEHAVIOREXPECT_ACTION._serialized_start=2228
  _FILTERBEHAVIOREXPECT_ACTION._serialized_end=2271
  _FIREWALLBEHAVIOREXPECT._serialized_start=2274
  _FIREWALLBEHAVIOREXPECT._serialized_end=2430
  _FIREWALLBEHAVIOREXPECT_ACTION._serialized_start=2228
  _FIREWALLBEHAVIOREXPECT_ACTION._serialized_end=2271
  _FLOWFILTEREXPR._serialized_start=2433
  _FLOWFILTEREXPR._serialized_end=2976
  _FLOWEXPR._serialized_start=2979
  _FLOWEXPR._serialized_end=3315
  _ADVANCEDAPPLICATIONEXPR._serialized_start=3318
  _ADVANCEDAPPLICATIONEXPR._serialized_end=3463
  _IPADDRESSFILTEREXPR._serialized_start=3465
  _IPADDRESSFILTEREXPR._serialized_end=3560
  _FLOWFILTERANDEXPR._serialized_start=3562
  _FLOWFILTERANDEXPR._serialized_end=3657
  _FLOWFILTEROREXPR._serialized_start=3659
  _FLOWFILTEROREXPR._serialized_end=3753
  _MATCHSERVERS._serialized_start=3756
  _MATCHSERVERS._serialized_end=4156
  _MATCHSERVERSEXPR._serialized_start=4158
  _MATCHSERVERSEXPR._serialized_end=4256
  _BGPPEERFILTEREXPR._serialized_start=4259
  _BGPPEERFILTEREXPR._serialized_end=4422
  _MATCHBGPPEER._serialized_start=4425
  _MATCHBGPPEER._serialized_end=4832
  _BGPNEIGHBORFILTEREXPR._serialized_start=4835
  _BGPNEIGHBORFILTEREXPR._serialized_end=5445
  _BGPNEIGHBORFILTEREXPR_ACTIVE._serialized_start=5139
  _BGPNEIGHBORFILTEREXPR_ACTIVE._serialized_end=5231
  _BGPNEIGHBORFILTEREXPR_DYNAMIC._serialized_start=5233
  _BGPNEIGHBORFILTEREXPR_DYNAMIC._serialized_end=5330
  _BGPNEIGHBORFILTEREXPR_UNNUMBERED._serialized_start=5332
  _BGPNEIGHBORFILTEREXPR_UNNUMBERED._serialized_end=5437
  _BGPPEERGROUPFILTEREXPR._serialized_start=5447
  _BGPPEERGROUPFILTEREXPR._serialized_end=5545
  _BGPPEERGROUPNAMEEXPR._serialized_start=5547
  _BGPPEERGROUPNAMEEXPR._serialized_end=5601
  _ASNFILTEREXPR._serialized_start=5603
  _ASNFILTEREXPR._serialized_end=5709
  _BGPPROCESSFILTEREXPR._serialized_start=5712
  _BGPPROCESSFILTEREXPR._serialized_end=5884
  _MATCHBGPPROCESS._serialized_start=5887
  _MATCHBGPPROCESS._serialized_end=6133
  _ROUTERIDFILTEREXPR._serialized_start=6135
  _ROUTERIDFILTEREXPR._serialized_end=6247
  _SECURITYGROUPFILTER._serialized_start=6250
  _SECURITYGROUPFILTER._serialized_end=6437
  _SECURITYGROUPFILTEREXPR._serialized_start=6440
  _SECURITYGROUPFILTEREXPR._serialized_end=6752
  _SECURITYGROUPFILTERNAMEEXPR._serialized_start=6754
  _SECURITYGROUPFILTERNAMEEXPR._serialized_end=6815
  _MATCHSECURITYGROUPRULES._serialized_start=6818
  _MATCHSECURITYGROUPRULES._serialized_end=7226
  _AWSINSTANCEFILTER._serialized_start=7229
  _AWSINSTANCEFILTER._serialized_end=7410
  _AWSINSTANCEFILTEREXPR._serialized_start=7413
  _AWSINSTANCEFILTEREXPR._serialized_end=7758
  _AWSNETWORKINTERFACEFILTER._serialized_start=7761
  _AWSNETWORKINTERFACEFILTER._serialized_end=7966
  _AWSNETWORKINTERFACEFILTEREXPR._serialized_start=7969
  _AWSNETWORKINTERFACEFILTEREXPR._serialized_end=8178
  _AWSACCOUNTMATCHEXPR._serialized_start=8181
  _AWSACCOUNTMATCHEXPR._serialized_end=8365
  _MATCHAWSACCOUNTEQUALS._serialized_start=8367
  _MATCHAWSACCOUNTEQUALS._serialized_end=8406
  _MATCHAWSACCOUNTANYOF._serialized_start=8408
  _MATCHAWSACCOUNTANYOF._serialized_end=8501
  _AWSREGIONMATCHEXPR._serialized_start=8503
  _AWSREGIONMATCHEXPR._serialized_end=8604
  _MATCHAWSREGIONEQUALS._serialized_start=8606
  _MATCHAWSREGIONEQUALS._serialized_end=8648
  _MATCHAWSREGIONANYOF._serialized_start=8650
  _MATCHAWSREGIONANYOF._serialized_end=8741
  _AWSVPCMATCHEXPR._serialized_start=8744
  _AWSVPCMATCHEXPR._serialized_end=8916
  _MATCHAWSVPCEQUALS._serialized_start=8918
  _MATCHAWSVPCEQUALS._serialized_end=8953
  _MATCHAWSVPCANYOF._serialized_start=8955
  _MATCHAWSVPCANYOF._serialized_end=9040
  _AWSTAGMATCHEXPR._serialized_start=9042
  _AWSTAGMATCHEXPR._serialized_end=9139
  _MATCHPROTOCOLWITHPORTSEXPR._serialized_start=9141
  _MATCHPROTOCOLWITHPORTSEXPR._serialized_end=9242
  _MATCHICMPEXPR._serialized_start=9245
  _MATCHICMPEXPR._serialized_end=9374
  _MATCHUINT32EXPR._serialized_start=9377
  _MATCHUINT32EXPR._serialized_end=9633
  _MATCHSTRINGSETEXPR._serialized_start=9636
  _MATCHSTRINGSETEXPR._serialized_end=9894
  _MATCHSTRINGSETRESULT._serialized_start=9897
  _MATCHSTRINGSETRESULT._serialized_end=10027
  _MATCHSTRINGSETPROBLEMS._serialized_start=10029
  _MATCHSTRINGSETPROBLEMS._serialized_end=10143
  _MATCHIPPROTOCOLEXPR._serialized_start=10145
  _MATCHIPPROTOCOLEXPR._serialized_end=10204
  _MATCHINTRANGEEXPR._serialized_start=10206
  _MATCHINTRANGEEXPR._serialized_end=10304
  _MATCHLONGRANGEEXPR._serialized_start=10306
  _MATCHLONGRANGEEXPR._serialized_end=10406
  _MATCHIPPREFIXEXPR._serialized_start=10408
  _MATCHIPPREFIXEXPR._serialized_end=10534
  _STRINGCOLLECTION._serialized_start=10536
  _STRINGCOLLECTION._serialized_end=10576
# @@protoc_insertion_point(module_scope)
