# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: intentionet/bfe/proto/assertions/ospf.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from intentionet.bfe.proto.assertions import violations_pb2 as intentionet_dot_bfe_dot_proto_dot_assertions_dot_violations__pb2
from intentionet.bfe.proto.datamodel import device_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_device__pb2
from intentionet.bfe.proto.datamodel import ip_primitives_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_ip__primitives__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n+intentionet/bfe/proto/assertions/ospf.proto\x12\x1e\x63om.intentionet.bfe.assertions\x1a\x31intentionet/bfe/proto/assertions/violations.proto\x1a,intentionet/bfe/proto/datamodel/device.proto\x1a\x33intentionet/bfe/proto/datamodel/ip_primitives.proto\"^\n#DuplicateOspfRouterIdAssertionInput\x12\x37\n\x18ignore_same_device_reuse\x18\x01 \x01(\x08R\x15ignoreSameDeviceReuse\"\xa8\x06\n$DuplicateOspfRouterIdAssertionResult\x12k\n\tviolators\x18\x01 \x03(\x0b\x32M.com.intentionet.bfe.assertions.DuplicateOspfRouterIdAssertionResult.ViolatorR\tviolators\x12\x33\n\x15violator_descriptions\x18\x02 \x03(\tR\x14violatorDescriptions\x1a\xb4\x02\n\x08Violator\x12:\n\trouter_id\x18\x01 \x01(\x0b\x32\x1d.com.intentionet.datamodel.IpR\x08routerId\x12]\n\x11\x64\x65scription_index\x18\x02 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DescriptionIndexR\x10\x64\x65scriptionIndex\x12\x81\x01\n\x10\x61\x63ross_processes\x18\x03 \x01(\x0b\x32T.com.intentionet.bfe.assertions.DuplicateOspfRouterIdAssertionResult.AcrossProcessesH\x00R\x0f\x61\x63rossProcessesB\t\n\x07problem\x1a\x8a\x01\n\x0f\x41\x63rossProcesses\x12w\n\x0eospf_processes\x18\x01 \x03(\x0b\x32P.com.intentionet.bfe.assertions.DuplicateOspfRouterIdAssertionResult.OspfProcessR\rospfProcesses\x1a\x99\x01\n\x0bOspfProcess\x12\x39\n\x06\x64\x65vice\x18\x01 \x01(\x0b\x32!.com.intentionet.datamodel.DeviceR\x06\x64\x65vice\x12\x30\n\x03vrf\x18\x02 \x01(\x0b\x32\x1e.com.intentionet.datamodel.VrfR\x03vrf\x12\x1d\n\nprocess_id\x18\x03 \x01(\tR\tprocessIdb\x06proto3')



_DUPLICATEOSPFROUTERIDASSERTIONINPUT = DESCRIPTOR.message_types_by_name['DuplicateOspfRouterIdAssertionInput']
_DUPLICATEOSPFROUTERIDASSERTIONRESULT = DESCRIPTOR.message_types_by_name['DuplicateOspfRouterIdAssertionResult']
_DUPLICATEOSPFROUTERIDASSERTIONRESULT_VIOLATOR = _DUPLICATEOSPFROUTERIDASSERTIONRESULT.nested_types_by_name['Violator']
_DUPLICATEOSPFROUTERIDASSERTIONRESULT_ACROSSPROCESSES = _DUPLICATEOSPFROUTERIDASSERTIONRESULT.nested_types_by_name['AcrossProcesses']
_DUPLICATEOSPFROUTERIDASSERTIONRESULT_OSPFPROCESS = _DUPLICATEOSPFROUTERIDASSERTIONRESULT.nested_types_by_name['OspfProcess']
DuplicateOspfRouterIdAssertionInput = _reflection.GeneratedProtocolMessageType('DuplicateOspfRouterIdAssertionInput', (_message.Message,), {
  'DESCRIPTOR' : _DUPLICATEOSPFROUTERIDASSERTIONINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.ospf_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DuplicateOspfRouterIdAssertionInput)
  })
_sym_db.RegisterMessage(DuplicateOspfRouterIdAssertionInput)

DuplicateOspfRouterIdAssertionResult = _reflection.GeneratedProtocolMessageType('DuplicateOspfRouterIdAssertionResult', (_message.Message,), {

  'Violator' : _reflection.GeneratedProtocolMessageType('Violator', (_message.Message,), {
    'DESCRIPTOR' : _DUPLICATEOSPFROUTERIDASSERTIONRESULT_VIOLATOR,
    '__module__' : 'intentionet.bfe.proto.assertions.ospf_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DuplicateOspfRouterIdAssertionResult.Violator)
    })
  ,

  'AcrossProcesses' : _reflection.GeneratedProtocolMessageType('AcrossProcesses', (_message.Message,), {
    'DESCRIPTOR' : _DUPLICATEOSPFROUTERIDASSERTIONRESULT_ACROSSPROCESSES,
    '__module__' : 'intentionet.bfe.proto.assertions.ospf_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DuplicateOspfRouterIdAssertionResult.AcrossProcesses)
    })
  ,

  'OspfProcess' : _reflection.GeneratedProtocolMessageType('OspfProcess', (_message.Message,), {
    'DESCRIPTOR' : _DUPLICATEOSPFROUTERIDASSERTIONRESULT_OSPFPROCESS,
    '__module__' : 'intentionet.bfe.proto.assertions.ospf_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DuplicateOspfRouterIdAssertionResult.OspfProcess)
    })
  ,
  'DESCRIPTOR' : _DUPLICATEOSPFROUTERIDASSERTIONRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.ospf_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DuplicateOspfRouterIdAssertionResult)
  })
_sym_db.RegisterMessage(DuplicateOspfRouterIdAssertionResult)
_sym_db.RegisterMessage(DuplicateOspfRouterIdAssertionResult.Violator)
_sym_db.RegisterMessage(DuplicateOspfRouterIdAssertionResult.AcrossProcesses)
_sym_db.RegisterMessage(DuplicateOspfRouterIdAssertionResult.OspfProcess)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _DUPLICATEOSPFROUTERIDASSERTIONINPUT._serialized_start=229
  _DUPLICATEOSPFROUTERIDASSERTIONINPUT._serialized_end=323
  _DUPLICATEOSPFROUTERIDASSERTIONRESULT._serialized_start=326
  _DUPLICATEOSPFROUTERIDASSERTIONRESULT._serialized_end=1134
  _DUPLICATEOSPFROUTERIDASSERTIONRESULT_VIOLATOR._serialized_start=529
  _DUPLICATEOSPFROUTERIDASSERTIONRESULT_VIOLATOR._serialized_end=837
  _DUPLICATEOSPFROUTERIDASSERTIONRESULT_ACROSSPROCESSES._serialized_start=840
  _DUPLICATEOSPFROUTERIDASSERTIONRESULT_ACROSSPROCESSES._serialized_end=978
  _DUPLICATEOSPFROUTERIDASSERTIONRESULT_OSPFPROCESS._serialized_start=981
  _DUPLICATEOSPFROUTERIDASSERTIONRESULT_OSPFPROCESS._serialized_end=1134
# @@protoc_insertion_point(module_scope)
