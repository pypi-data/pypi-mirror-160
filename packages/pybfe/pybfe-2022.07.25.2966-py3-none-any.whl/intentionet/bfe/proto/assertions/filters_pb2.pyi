"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import intentionet.bfe.proto.assertions.parameters_pb2
import intentionet.bfe.proto.assertions.violations_pb2
import intentionet.bfe.proto.datamodel.config_text_pb2
import intentionet.bfe.proto.datamodel.device_pb2
import intentionet.bfe.proto.datamodel.flow_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _FilterAction:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _FilterActionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FilterAction.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    FILTER_ACTION_UNKNOWN: _FilterAction.ValueType  # 0
    FILTER_ACTION_PERMIT: _FilterAction.ValueType  # 1
    FILTER_ACTION_DENY: _FilterAction.ValueType  # 2
    FILTER_ACTION_VARIABLE: _FilterAction.ValueType  # 3
class FilterAction(_FilterAction, metaclass=_FilterActionEnumTypeWrapper):
    pass

FILTER_ACTION_UNKNOWN: FilterAction.ValueType  # 0
FILTER_ACTION_PERMIT: FilterAction.ValueType  # 1
FILTER_ACTION_DENY: FilterAction.ValueType  # 2
FILTER_ACTION_VARIABLE: FilterAction.ValueType  # 3
global___FilterAction = FilterAction


class CrossZonePolicyFiltersFlowsAssertionInput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FIREWALLS_FIELD_NUMBER: builtins.int
    FLOWS_FIELD_NUMBER: builtins.int
    FROM_FIELD_NUMBER: builtins.int
    TO_FIELD_NUMBER: builtins.int
    EXPECT_FIELD_NUMBER: builtins.int
    @property
    def firewalls(self) -> intentionet.bfe.proto.assertions.parameters_pb2.DeviceFilterExpr: ...
    @property
    def flows(self) -> intentionet.bfe.proto.assertions.parameters_pb2.FlowFilterExpr: ...
    @property
    def to(self) -> intentionet.bfe.proto.assertions.parameters_pb2.FirewallLocationMatchExpr: ...
    @property
    def expect(self) -> intentionet.bfe.proto.assertions.parameters_pb2.FirewallBehaviorExpect: ...
    def __init__(self,
        *,
        firewalls: typing.Optional[intentionet.bfe.proto.assertions.parameters_pb2.DeviceFilterExpr] = ...,
        flows: typing.Optional[intentionet.bfe.proto.assertions.parameters_pb2.FlowFilterExpr] = ...,
        to: typing.Optional[intentionet.bfe.proto.assertions.parameters_pb2.FirewallLocationMatchExpr] = ...,
        expect: typing.Optional[intentionet.bfe.proto.assertions.parameters_pb2.FirewallBehaviorExpect] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["expect",b"expect","firewalls",b"firewalls","flows",b"flows","from",b"from","to",b"to"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["expect",b"expect","firewalls",b"firewalls","flows",b"flows","from",b"from","to",b"to"]) -> None: ...
global___CrossZonePolicyFiltersFlowsAssertionInput = CrossZonePolicyFiltersFlowsAssertionInput

class CrossZonePolicyFiltersFlowsAssertionResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Element(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        DEVICE_FIELD_NUMBER: builtins.int
        ACTION_FIELD_NUMBER: builtins.int
        FILTER_FIELD_NUMBER: builtins.int
        DESCRIPTION_INDEX_FIELD_NUMBER: builtins.int
        FLOW_FIELD_NUMBER: builtins.int
        TEST_FILTERS_FIELD_NUMBER: builtins.int
        VIOLATIONS_FIELD_NUMBER: builtins.int
        @property
        def device(self) -> intentionet.bfe.proto.datamodel.device_pb2.Device: ...
        action: global___FilterAction.ValueType
        filter: typing.Text
        @property
        def description_index(self) -> intentionet.bfe.proto.assertions.violations_pb2.DescriptionIndex: ...
        @property
        def flow(self) -> intentionet.bfe.proto.datamodel.flow_pb2.Flow: ...
        @property
        def test_filters(self) -> global___TestFiltersResult: ...
        @property
        def violations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CrossZonePolicyFiltersFlowsAssertionResult.Violation]: ...
        def __init__(self,
            *,
            device: typing.Optional[intentionet.bfe.proto.datamodel.device_pb2.Device] = ...,
            action: global___FilterAction.ValueType = ...,
            filter: typing.Text = ...,
            description_index: typing.Optional[intentionet.bfe.proto.assertions.violations_pb2.DescriptionIndex] = ...,
            flow: typing.Optional[intentionet.bfe.proto.datamodel.flow_pb2.Flow] = ...,
            test_filters: typing.Optional[global___TestFiltersResult] = ...,
            violations: typing.Optional[typing.Iterable[global___CrossZonePolicyFiltersFlowsAssertionResult.Violation]] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["description_index",b"description_index","device",b"device","flow",b"flow","test_filters",b"test_filters"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["action",b"action","description_index",b"description_index","device",b"device","filter",b"filter","flow",b"flow","test_filters",b"test_filters","violations",b"violations"]) -> None: ...

    class Violation(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        FLOW_FIELD_NUMBER: builtins.int
        TEST_FILTERS_FIELD_NUMBER: builtins.int
        MATCHED_LINE_FIELD_NUMBER: builtins.int
        MATCHED_LINE_DEFINED_STRUCTURE_FIELD_NUMBER: builtins.int
        @property
        def flow(self) -> intentionet.bfe.proto.datamodel.flow_pb2.Flow: ...
        @property
        def test_filters(self) -> global___TestFiltersResult: ...
        matched_line: typing.Text
        @property
        def matched_line_defined_structure(self) -> intentionet.bfe.proto.datamodel.config_text_pb2.DefinedStructure: ...
        def __init__(self,
            *,
            flow: typing.Optional[intentionet.bfe.proto.datamodel.flow_pb2.Flow] = ...,
            test_filters: typing.Optional[global___TestFiltersResult] = ...,
            matched_line: typing.Text = ...,
            matched_line_defined_structure: typing.Optional[intentionet.bfe.proto.datamodel.config_text_pb2.DefinedStructure] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["flow",b"flow","matched_line_defined_structure",b"matched_line_defined_structure","test_filters",b"test_filters"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["flow",b"flow","matched_line",b"matched_line","matched_line_defined_structure",b"matched_line_defined_structure","test_filters",b"test_filters"]) -> None: ...

    class FailureResult(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        DEVICE_FIELD_NUMBER: builtins.int
        REASON_FIELD_NUMBER: builtins.int
        @property
        def device(self) -> intentionet.bfe.proto.datamodel.device_pb2.Device: ...
        reason: typing.Text
        def __init__(self,
            *,
            device: typing.Optional[intentionet.bfe.proto.datamodel.device_pb2.Device] = ...,
            reason: typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["device",b"device"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["device",b"device","reason",b"reason"]) -> None: ...

    VIOLATORS_FIELD_NUMBER: builtins.int
    CONFORMERS_FIELD_NUMBER: builtins.int
    VIOLATOR_DESCRIPTIONS_FIELD_NUMBER: builtins.int
    @property
    def violators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CrossZonePolicyFiltersFlowsAssertionResult.Element]: ...
    @property
    def conformers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CrossZonePolicyFiltersFlowsAssertionResult.Element]: ...
    @property
    def violator_descriptions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        violators: typing.Optional[typing.Iterable[global___CrossZonePolicyFiltersFlowsAssertionResult.Element]] = ...,
        conformers: typing.Optional[typing.Iterable[global___CrossZonePolicyFiltersFlowsAssertionResult.Element]] = ...,
        violator_descriptions: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["conformers",b"conformers","violator_descriptions",b"violator_descriptions","violators",b"violators"]) -> None: ...
global___CrossZonePolicyFiltersFlowsAssertionResult = CrossZonePolicyFiltersFlowsAssertionResult

class FilterBehaviorAssertionInput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DEVICES_FIELD_NUMBER: builtins.int
    FILTERS_FIELD_NUMBER: builtins.int
    FLOWS_FIELD_NUMBER: builtins.int
    EXPECT_FIELD_NUMBER: builtins.int
    @property
    def devices(self) -> intentionet.bfe.proto.assertions.parameters_pb2.DeviceFilterExpr: ...
    @property
    def filters(self) -> intentionet.bfe.proto.assertions.parameters_pb2.FilterMatchExpr: ...
    @property
    def flows(self) -> intentionet.bfe.proto.assertions.parameters_pb2.FlowFilterExpr: ...
    @property
    def expect(self) -> intentionet.bfe.proto.assertions.parameters_pb2.FilterBehaviorExpect: ...
    def __init__(self,
        *,
        devices: typing.Optional[intentionet.bfe.proto.assertions.parameters_pb2.DeviceFilterExpr] = ...,
        filters: typing.Optional[intentionet.bfe.proto.assertions.parameters_pb2.FilterMatchExpr] = ...,
        flows: typing.Optional[intentionet.bfe.proto.assertions.parameters_pb2.FlowFilterExpr] = ...,
        expect: typing.Optional[intentionet.bfe.proto.assertions.parameters_pb2.FilterBehaviorExpect] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["devices",b"devices","expect",b"expect","filters",b"filters","flows",b"flows"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["devices",b"devices","expect",b"expect","filters",b"filters","flows",b"flows"]) -> None: ...
global___FilterBehaviorAssertionInput = FilterBehaviorAssertionInput

class FilterBehaviorAssertionResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Element(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        FILTER_FIELD_NUMBER: builtins.int
        DESCRIPTION_INDEX_FIELD_NUMBER: builtins.int
        FLOW_FIELD_NUMBER: builtins.int
        TEST_FILTERS_FIELD_NUMBER: builtins.int
        VIOLATIONS_FIELD_NUMBER: builtins.int
        @property
        def filter(self) -> intentionet.bfe.proto.datamodel.device_pb2.Filter: ...
        @property
        def description_index(self) -> intentionet.bfe.proto.assertions.violations_pb2.DescriptionIndex: ...
        @property
        def flow(self) -> intentionet.bfe.proto.datamodel.flow_pb2.Flow: ...
        @property
        def test_filters(self) -> global___TestFiltersResult: ...
        @property
        def violations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FilterBehaviorAssertionResult.Violation]: ...
        def __init__(self,
            *,
            filter: typing.Optional[intentionet.bfe.proto.datamodel.device_pb2.Filter] = ...,
            description_index: typing.Optional[intentionet.bfe.proto.assertions.violations_pb2.DescriptionIndex] = ...,
            flow: typing.Optional[intentionet.bfe.proto.datamodel.flow_pb2.Flow] = ...,
            test_filters: typing.Optional[global___TestFiltersResult] = ...,
            violations: typing.Optional[typing.Iterable[global___FilterBehaviorAssertionResult.Violation]] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["description_index",b"description_index","filter",b"filter","flow",b"flow","test_filters",b"test_filters"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["description_index",b"description_index","filter",b"filter","flow",b"flow","test_filters",b"test_filters","violations",b"violations"]) -> None: ...

    class Violation(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        FLOW_FIELD_NUMBER: builtins.int
        TEST_FILTERS_FIELD_NUMBER: builtins.int
        MATCHED_LINE_FIELD_NUMBER: builtins.int
        MATCHED_LINE_DEFINED_STRUCTURE_FIELD_NUMBER: builtins.int
        @property
        def flow(self) -> intentionet.bfe.proto.datamodel.flow_pb2.Flow: ...
        @property
        def test_filters(self) -> global___TestFiltersResult: ...
        matched_line: typing.Text
        @property
        def matched_line_defined_structure(self) -> intentionet.bfe.proto.datamodel.config_text_pb2.DefinedStructure: ...
        def __init__(self,
            *,
            flow: typing.Optional[intentionet.bfe.proto.datamodel.flow_pb2.Flow] = ...,
            test_filters: typing.Optional[global___TestFiltersResult] = ...,
            matched_line: typing.Text = ...,
            matched_line_defined_structure: typing.Optional[intentionet.bfe.proto.datamodel.config_text_pb2.DefinedStructure] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["flow",b"flow","matched_line_defined_structure",b"matched_line_defined_structure","test_filters",b"test_filters"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["flow",b"flow","matched_line",b"matched_line","matched_line_defined_structure",b"matched_line_defined_structure","test_filters",b"test_filters"]) -> None: ...

    VIOLATORS_FIELD_NUMBER: builtins.int
    CONFORMERS_FIELD_NUMBER: builtins.int
    VIOLATOR_DESCRIPTIONS_FIELD_NUMBER: builtins.int
    @property
    def violators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FilterBehaviorAssertionResult.Element]: ...
    @property
    def conformers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FilterBehaviorAssertionResult.Element]: ...
    @property
    def violator_descriptions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        violators: typing.Optional[typing.Iterable[global___FilterBehaviorAssertionResult.Element]] = ...,
        conformers: typing.Optional[typing.Iterable[global___FilterBehaviorAssertionResult.Element]] = ...,
        violator_descriptions: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["conformers",b"conformers","violator_descriptions",b"violator_descriptions","violators",b"violators"]) -> None: ...
global___FilterBehaviorAssertionResult = FilterBehaviorAssertionResult

class TestFiltersResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MATCHED_LINE_FIELD_NUMBER: builtins.int
    MATCHED_LINE_DEFINED_STRUCTURE_FIELD_NUMBER: builtins.int
    TRACE_TREE_JSON_FIELD_NUMBER: builtins.int
    matched_line: typing.Text
    @property
    def matched_line_defined_structure(self) -> intentionet.bfe.proto.datamodel.config_text_pb2.DefinedStructure: ...
    @property
    def trace_tree_json(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        matched_line: typing.Text = ...,
        matched_line_defined_structure: typing.Optional[intentionet.bfe.proto.datamodel.config_text_pb2.DefinedStructure] = ...,
        trace_tree_json: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["matched_line_defined_structure",b"matched_line_defined_structure"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["matched_line",b"matched_line","matched_line_defined_structure",b"matched_line_defined_structure","trace_tree_json",b"trace_tree_json"]) -> None: ...
global___TestFiltersResult = TestFiltersResult

class FilterLineReachabilityAssertionInput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DEVICES_FIELD_NUMBER: builtins.int
    FILTERS_FIELD_NUMBER: builtins.int
    @property
    def devices(self) -> intentionet.bfe.proto.assertions.parameters_pb2.DeviceFilterExpr: ...
    @property
    def filters(self) -> intentionet.bfe.proto.assertions.parameters_pb2.FilterMatchExpr: ...
    def __init__(self,
        *,
        devices: typing.Optional[intentionet.bfe.proto.assertions.parameters_pb2.DeviceFilterExpr] = ...,
        filters: typing.Optional[intentionet.bfe.proto.assertions.parameters_pb2.FilterMatchExpr] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["devices",b"devices","filters",b"filters"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["devices",b"devices","filters",b"filters"]) -> None: ...
global___FilterLineReachabilityAssertionInput = FilterLineReachabilityAssertionInput

class FilterLineReachabilityAssertionResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Violator(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        FILTER_SET_FIELD_NUMBER: builtins.int
        VIOLATIONS_FIELD_NUMBER: builtins.int
        @property
        def filter_set(self) -> global___FilterLineReachabilityAssertionResult.FilterSet: ...
        @property
        def violations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FilterLineReachabilityAssertionResult.Violation]: ...
        def __init__(self,
            *,
            filter_set: typing.Optional[global___FilterLineReachabilityAssertionResult.FilterSet] = ...,
            violations: typing.Optional[typing.Iterable[global___FilterLineReachabilityAssertionResult.Violation]] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["filter_set",b"filter_set"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["filter_set",b"filter_set","violations",b"violations"]) -> None: ...

    class Violation(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        UNREACHABLE_LINE_FIELD_NUMBER: builtins.int
        SHADOWED_FIELD_NUMBER: builtins.int
        INDEPENDENTLY_UNMATCHABLE_FIELD_NUMBER: builtins.int
        UNDEFINED_REFERENCE_FIELD_NUMBER: builtins.int
        @property
        def unreachable_line(self) -> global___FilterLineReachabilityAssertionResult.UnreachableLine: ...
        @property
        def shadowed(self) -> global___FilterLineReachabilityAssertionResult.Shadowed: ...
        @property
        def independently_unmatchable(self) -> global___FilterLineReachabilityAssertionResult.IndependentlyUnmatchable: ...
        @property
        def undefined_reference(self) -> global___FilterLineReachabilityAssertionResult.UndefinedReference: ...
        def __init__(self,
            *,
            unreachable_line: typing.Optional[global___FilterLineReachabilityAssertionResult.UnreachableLine] = ...,
            shadowed: typing.Optional[global___FilterLineReachabilityAssertionResult.Shadowed] = ...,
            independently_unmatchable: typing.Optional[global___FilterLineReachabilityAssertionResult.IndependentlyUnmatchable] = ...,
            undefined_reference: typing.Optional[global___FilterLineReachabilityAssertionResult.UndefinedReference] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["independently_unmatchable",b"independently_unmatchable","shadowed",b"shadowed","type",b"type","undefined_reference",b"undefined_reference","unreachable_line",b"unreachable_line"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["independently_unmatchable",b"independently_unmatchable","shadowed",b"shadowed","type",b"type","undefined_reference",b"undefined_reference","unreachable_line",b"unreachable_line"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["type",b"type"]) -> typing.Optional[typing_extensions.Literal["shadowed","independently_unmatchable","undefined_reference"]]: ...

    class Shadowed(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        SHADOWING_LINES_FIELD_NUMBER: builtins.int
        DIFFERENT_ACTION_FIELD_NUMBER: builtins.int
        @property
        def shadowing_lines(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FilterLineReachabilityAssertionResult.ShadowingLine]: ...
        different_action: builtins.bool
        def __init__(self,
            *,
            shadowing_lines: typing.Optional[typing.Iterable[global___FilterLineReachabilityAssertionResult.ShadowingLine]] = ...,
            different_action: builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["different_action",b"different_action","shadowing_lines",b"shadowing_lines"]) -> None: ...

    class IndependentlyUnmatchable(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        def __init__(self,
            ) -> None: ...

    class UndefinedReference(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        def __init__(self,
            ) -> None: ...

    class UnreachableLine(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        LINE_TEXT_FIELD_NUMBER: builtins.int
        LINE_ACTION_FIELD_NUMBER: builtins.int
        DEFINED_STRUCTURE_FIELD_NUMBER: builtins.int
        line_text: typing.Text
        line_action: global___FilterAction.ValueType
        @property
        def defined_structure(self) -> intentionet.bfe.proto.datamodel.config_text_pb2.DefinedStructure: ...
        def __init__(self,
            *,
            line_text: typing.Text = ...,
            line_action: global___FilterAction.ValueType = ...,
            defined_structure: typing.Optional[intentionet.bfe.proto.datamodel.config_text_pb2.DefinedStructure] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["defined_structure",b"defined_structure"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["defined_structure",b"defined_structure","line_action",b"line_action","line_text",b"line_text"]) -> None: ...

    class ShadowingLine(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        LINE_TEXT_FIELD_NUMBER: builtins.int
        DEFINED_STRUCTURE_FIELD_NUMBER: builtins.int
        line_text: typing.Text
        @property
        def defined_structure(self) -> intentionet.bfe.proto.datamodel.config_text_pb2.DefinedStructure: ...
        def __init__(self,
            *,
            line_text: typing.Text = ...,
            defined_structure: typing.Optional[intentionet.bfe.proto.datamodel.config_text_pb2.DefinedStructure] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["defined_structure",b"defined_structure"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["defined_structure",b"defined_structure","line_text",b"line_text"]) -> None: ...

    class Conformer(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        FILTER_SET_FIELD_NUMBER: builtins.int
        @property
        def filter_set(self) -> global___FilterLineReachabilityAssertionResult.FilterSet: ...
        def __init__(self,
            *,
            filter_set: typing.Optional[global___FilterLineReachabilityAssertionResult.FilterSet] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["filter_set",b"filter_set"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["filter_set",b"filter_set"]) -> None: ...

    class FilterSet(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        REPRESENTATIVE_DEVICE_FIELD_NUMBER: builtins.int
        DEFINED_STRUCTURE_FIELD_NUMBER: builtins.int
        FILTERS_FIELD_NUMBER: builtins.int
        @property
        def representative_device(self) -> intentionet.bfe.proto.datamodel.device_pb2.Device: ...
        @property
        def defined_structure(self) -> intentionet.bfe.proto.datamodel.config_text_pb2.DefinedStructure: ...
        @property
        def filters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[intentionet.bfe.proto.datamodel.device_pb2.Filter]: ...
        def __init__(self,
            *,
            representative_device: typing.Optional[intentionet.bfe.proto.datamodel.device_pb2.Device] = ...,
            defined_structure: typing.Optional[intentionet.bfe.proto.datamodel.config_text_pb2.DefinedStructure] = ...,
            filters: typing.Optional[typing.Iterable[intentionet.bfe.proto.datamodel.device_pb2.Filter]] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["defined_structure",b"defined_structure","representative_device",b"representative_device"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["defined_structure",b"defined_structure","filters",b"filters","representative_device",b"representative_device"]) -> None: ...

    VIOLATORS_FIELD_NUMBER: builtins.int
    CONFORMERS_FIELD_NUMBER: builtins.int
    @property
    def violators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FilterLineReachabilityAssertionResult.Violator]: ...
    @property
    def conformers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FilterLineReachabilityAssertionResult.Conformer]: ...
    def __init__(self,
        *,
        violators: typing.Optional[typing.Iterable[global___FilterLineReachabilityAssertionResult.Violator]] = ...,
        conformers: typing.Optional[typing.Iterable[global___FilterLineReachabilityAssertionResult.Conformer]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["conformers",b"conformers","violators",b"violators"]) -> None: ...
global___FilterLineReachabilityAssertionResult = FilterLineReachabilityAssertionResult
