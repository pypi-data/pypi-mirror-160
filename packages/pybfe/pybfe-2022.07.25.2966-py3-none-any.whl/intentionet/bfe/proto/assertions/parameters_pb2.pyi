"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.empty_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2
import intentionet.bfe.proto.datamodel.ip_primitives_pb2
import intentionet.bfe.proto.datamodel.range_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class DeviceFilterExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HOSTNAME_FIELD_NUMBER: builtins.int
    VENDOR_FIELD_NUMBER: builtins.int
    @property
    def hostname(self) -> global___DeviceFilterHostnameExpr: ...
    @property
    def vendor(self) -> global___DeviceFilterVendorListExpr: ...
    def __init__(self,
        *,
        hostname: typing.Optional[global___DeviceFilterHostnameExpr] = ...,
        vendor: typing.Optional[global___DeviceFilterVendorListExpr] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["hostname",b"hostname","vendor",b"vendor"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["hostname",b"hostname","vendor",b"vendor"]) -> None: ...
global___DeviceFilterExpr = DeviceFilterExpr

class DeviceFilterHostnameExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    REGEX_FIELD_NUMBER: builtins.int
    regex: typing.Text
    def __init__(self,
        *,
        regex: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["expr",b"expr","regex",b"regex"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["expr",b"expr","regex",b"regex"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expr",b"expr"]) -> typing.Optional[typing_extensions.Literal["regex"]]: ...
global___DeviceFilterHostnameExpr = DeviceFilterHostnameExpr

class InterfaceFilterExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INCLUDE_FIELD_NUMBER: builtins.int
    EXCLUDE_FIELD_NUMBER: builtins.int
    @property
    def include(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MatchInterface]: ...
    @property
    def exclude(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MatchInterface]: ...
    def __init__(self,
        *,
        include: typing.Optional[typing.Iterable[global___MatchInterface]] = ...,
        exclude: typing.Optional[typing.Iterable[global___MatchInterface]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["exclude",b"exclude","include",b"include"]) -> None: ...
global___InterfaceFilterExpr = InterfaceFilterExpr

class MatchInterface(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DEVICES_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    @property
    def devices(self) -> global___DeviceFilterExpr: ...
    @property
    def name(self) -> global___MatchInterfaceName: ...
    def __init__(self,
        *,
        devices: typing.Optional[global___DeviceFilterExpr] = ...,
        name: typing.Optional[global___MatchInterfaceName] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["devices",b"devices","name",b"name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["devices",b"devices","name",b"name"]) -> None: ...
global___MatchInterface = MatchInterface

class MatchInterfaceName(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    REGEX_FIELD_NUMBER: builtins.int
    regex: typing.Text
    def __init__(self,
        *,
        regex: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["expr",b"expr","regex",b"regex"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["expr",b"expr","regex",b"regex"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expr",b"expr"]) -> typing.Optional[typing_extensions.Literal["regex"]]: ...
global___MatchInterfaceName = MatchInterfaceName

class VrfFilterExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DEVICES_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    @property
    def devices(self) -> global___DeviceFilterExpr: ...
    @property
    def name(self) -> global___VrfNameExpr: ...
    def __init__(self,
        *,
        devices: typing.Optional[global___DeviceFilterExpr] = ...,
        name: typing.Optional[global___VrfNameExpr] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["devices",b"devices","name",b"name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["devices",b"devices","name",b"name"]) -> None: ...
global___VrfFilterExpr = VrfFilterExpr

class VrfNameExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    REGEX_FIELD_NUMBER: builtins.int
    regex: typing.Text
    def __init__(self,
        *,
        regex: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["expr",b"expr","regex",b"regex"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["expr",b"expr","regex",b"regex"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expr",b"expr"]) -> typing.Optional[typing_extensions.Literal["regex"]]: ...
global___VrfNameExpr = VrfNameExpr

class InterfaceExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HOSTNAME_FIELD_NUMBER: builtins.int
    INTERFACE_NAME_FIELD_NUMBER: builtins.int
    hostname: typing.Text
    interface_name: typing.Text
    def __init__(self,
        *,
        hostname: typing.Text = ...,
        interface_name: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["hostname",b"hostname","interface_name",b"interface_name"]) -> None: ...
global___InterfaceExpr = InterfaceExpr

class FilterMatchExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    @property
    def name(self) -> global___FilterNameMatchExpr: ...
    def __init__(self,
        *,
        name: typing.Optional[global___FilterNameMatchExpr] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["expr",b"expr","name",b"name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["expr",b"expr","name",b"name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expr",b"expr"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
global___FilterMatchExpr = FilterMatchExpr

class FilterNameMatchExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    REGEX_FIELD_NUMBER: builtins.int
    regex: typing.Text
    def __init__(self,
        *,
        regex: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["expr",b"expr","regex",b"regex"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["expr",b"expr","regex",b"regex"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expr",b"expr"]) -> typing.Optional[typing_extensions.Literal["regex"]]: ...
global___FilterNameMatchExpr = FilterNameMatchExpr

class DeviceFilterCiscoVendorExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    IOS_FIELD_NUMBER: builtins.int
    NXOS_FIELD_NUMBER: builtins.int
    XR_FIELD_NUMBER: builtins.int
    ASA_FIELD_NUMBER: builtins.int
    @property
    def ios(self) -> google.protobuf.empty_pb2.Empty: ...
    @property
    def nxos(self) -> google.protobuf.empty_pb2.Empty: ...
    @property
    def xr(self) -> google.protobuf.empty_pb2.Empty: ...
    @property
    def asa(self) -> google.protobuf.empty_pb2.Empty: ...
    def __init__(self,
        *,
        ios: typing.Optional[google.protobuf.empty_pb2.Empty] = ...,
        nxos: typing.Optional[google.protobuf.empty_pb2.Empty] = ...,
        xr: typing.Optional[google.protobuf.empty_pb2.Empty] = ...,
        asa: typing.Optional[google.protobuf.empty_pb2.Empty] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["asa",b"asa","ios",b"ios","nxos",b"nxos","type",b"type","xr",b"xr"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["asa",b"asa","ios",b"ios","nxos",b"nxos","type",b"type","xr",b"xr"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["type",b"type"]) -> typing.Optional[typing_extensions.Literal["ios","nxos","xr","asa"]]: ...
global___DeviceFilterCiscoVendorExpr = DeviceFilterCiscoVendorExpr

class DeviceFilterVendorExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CISCO_FIELD_NUMBER: builtins.int
    ARISTA_FIELD_NUMBER: builtins.int
    JUNIPER_FIELD_NUMBER: builtins.int
    SONIC_FIELD_NUMBER: builtins.int
    @property
    def cisco(self) -> global___DeviceFilterCiscoVendorExpr: ...
    @property
    def arista(self) -> google.protobuf.empty_pb2.Empty: ...
    @property
    def juniper(self) -> google.protobuf.empty_pb2.Empty: ...
    @property
    def sonic(self) -> google.protobuf.empty_pb2.Empty: ...
    def __init__(self,
        *,
        cisco: typing.Optional[global___DeviceFilterCiscoVendorExpr] = ...,
        arista: typing.Optional[google.protobuf.empty_pb2.Empty] = ...,
        juniper: typing.Optional[google.protobuf.empty_pb2.Empty] = ...,
        sonic: typing.Optional[google.protobuf.empty_pb2.Empty] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["arista",b"arista","cisco",b"cisco","juniper",b"juniper","sonic",b"sonic","vendor",b"vendor"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["arista",b"arista","cisco",b"cisco","juniper",b"juniper","sonic",b"sonic","vendor",b"vendor"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["vendor",b"vendor"]) -> typing.Optional[typing_extensions.Literal["cisco","arista","juniper","sonic"]]: ...
global___DeviceFilterVendorExpr = DeviceFilterVendorExpr

class DeviceFilterVendorListExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ANY_FIELD_NUMBER: builtins.int
    @property
    def any(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DeviceFilterVendorExpr]: ...
    def __init__(self,
        *,
        any: typing.Optional[typing.Iterable[global___DeviceFilterVendorExpr]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["any",b"any"]) -> None: ...
global___DeviceFilterVendorListExpr = DeviceFilterVendorListExpr

class FirewallLocationMatchExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ZONE_FIELD_NUMBER: builtins.int
    @property
    def zone(self) -> global___ZoneMatchExpr: ...
    def __init__(self,
        *,
        zone: typing.Optional[global___ZoneMatchExpr] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["expr",b"expr","zone",b"zone"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["expr",b"expr","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expr",b"expr"]) -> typing.Optional[typing_extensions.Literal["zone"]]: ...
global___FirewallLocationMatchExpr = FirewallLocationMatchExpr

class ZoneMatchExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text
    def __init__(self,
        *,
        name: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["expr",b"expr","name",b"name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["expr",b"expr","name",b"name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expr",b"expr"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
global___ZoneMatchExpr = ZoneMatchExpr

class FilterBehaviorExpect(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Action:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ActionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[FilterBehaviorExpect._Action.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN: FilterBehaviorExpect._Action.ValueType  # 0
        PERMIT: FilterBehaviorExpect._Action.ValueType  # 1
        DENY: FilterBehaviorExpect._Action.ValueType  # 2
    class Action(_Action, metaclass=_ActionEnumTypeWrapper):
        pass

    UNKNOWN: FilterBehaviorExpect.Action.ValueType  # 0
    PERMIT: FilterBehaviorExpect.Action.ValueType  # 1
    DENY: FilterBehaviorExpect.Action.ValueType  # 2

    ACTION_FIELD_NUMBER: builtins.int
    action: global___FilterBehaviorExpect.Action.ValueType
    def __init__(self,
        *,
        action: global___FilterBehaviorExpect.Action.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["action",b"action"]) -> None: ...
global___FilterBehaviorExpect = FilterBehaviorExpect

class FirewallBehaviorExpect(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Action:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ActionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[FirewallBehaviorExpect._Action.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN: FirewallBehaviorExpect._Action.ValueType  # 0
        PERMIT: FirewallBehaviorExpect._Action.ValueType  # 1
        DENY: FirewallBehaviorExpect._Action.ValueType  # 2
    class Action(_Action, metaclass=_ActionEnumTypeWrapper):
        pass

    UNKNOWN: FirewallBehaviorExpect.Action.ValueType  # 0
    PERMIT: FirewallBehaviorExpect.Action.ValueType  # 1
    DENY: FirewallBehaviorExpect.Action.ValueType  # 2

    ACTION_FIELD_NUMBER: builtins.int
    action: global___FirewallBehaviorExpect.Action.ValueType
    def __init__(self,
        *,
        action: global___FirewallBehaviorExpect.Action.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["action",b"action"]) -> None: ...
global___FirewallBehaviorExpect = FirewallBehaviorExpect

class FlowFilterExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INCLUDE_FIELD_NUMBER: builtins.int
    EXCLUDE_FIELD_NUMBER: builtins.int
    AND_FIELD_NUMBER: builtins.int
    OR_FIELD_NUMBER: builtins.int
    NOT_FIELD_NUMBER: builtins.int
    SRC_IP_FIELD_NUMBER: builtins.int
    DST_IP_FIELD_NUMBER: builtins.int
    APP_FIELD_NUMBER: builtins.int
    @property
    def include(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FlowExpr]: ...
    @property
    def exclude(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FlowExpr]: ...
    @property
    def src_ip(self) -> global___IpAddressFilterExpr: ...
    @property
    def dst_ip(self) -> global___IpAddressFilterExpr: ...
    app: typing.Text
    def __init__(self,
        *,
        include: typing.Optional[typing.Iterable[global___FlowExpr]] = ...,
        exclude: typing.Optional[typing.Iterable[global___FlowExpr]] = ...,
        src_ip: typing.Optional[global___IpAddressFilterExpr] = ...,
        dst_ip: typing.Optional[global___IpAddressFilterExpr] = ...,
        app: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["and",b"and","app",b"app","dst_ip",b"dst_ip","expr",b"expr","not",b"not","or",b"or","src_ip",b"src_ip"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["and",b"and","app",b"app","dst_ip",b"dst_ip","exclude",b"exclude","expr",b"expr","include",b"include","not",b"not","or",b"or","src_ip",b"src_ip"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expr",b"expr"]) -> typing.Optional[typing_extensions.Literal["and","or","not","src_ip","dst_ip","app"]]: ...
global___FlowFilterExpr = FlowFilterExpr

class FlowExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SRC_IPS_FIELD_NUMBER: builtins.int
    DST_IPS_FIELD_NUMBER: builtins.int
    APPS_FIELD_NUMBER: builtins.int
    ADVANCED_APPS_FIELD_NUMBER: builtins.int
    UNFRAGMENTED_FLOWS_ONLY_FIELD_NUMBER: builtins.int
    @property
    def src_ips(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IpAddressFilterExpr]: ...
    @property
    def dst_ips(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IpAddressFilterExpr]: ...
    @property
    def apps(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def advanced_apps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AdvancedApplicationExpr]: ...
    unfragmented_flows_only: builtins.bool
    def __init__(self,
        *,
        src_ips: typing.Optional[typing.Iterable[global___IpAddressFilterExpr]] = ...,
        dst_ips: typing.Optional[typing.Iterable[global___IpAddressFilterExpr]] = ...,
        apps: typing.Optional[typing.Iterable[typing.Text]] = ...,
        advanced_apps: typing.Optional[typing.Iterable[global___AdvancedApplicationExpr]] = ...,
        unfragmented_flows_only: builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["advanced_apps",b"advanced_apps","apps",b"apps","dst_ips",b"dst_ips","src_ips",b"src_ips","unfragmented_flows_only",b"unfragmented_flows_only"]) -> None: ...
global___FlowExpr = FlowExpr

class AdvancedApplicationExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    IP_PROTOCOL_FIELD_NUMBER: builtins.int
    SRC_PORTS_FIELD_NUMBER: builtins.int
    DST_PORTS_FIELD_NUMBER: builtins.int
    TCP_FLAGS_FIELD_NUMBER: builtins.int
    ip_protocol: typing.Text
    src_ports: typing.Text
    dst_ports: typing.Text
    @property
    def tcp_flags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        ip_protocol: typing.Text = ...,
        src_ports: typing.Text = ...,
        dst_ports: typing.Text = ...,
        tcp_flags: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dst_ports",b"dst_ports","ip_protocol",b"ip_protocol","src_ports",b"src_ports","tcp_flags",b"tcp_flags"]) -> None: ...
global___AdvancedApplicationExpr = AdvancedApplicationExpr

class IpAddressFilterExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EXACT_MATCH_FIELD_NUMBER: builtins.int
    IN_PREFIX_FIELD_NUMBER: builtins.int
    exact_match: typing.Text
    in_prefix: typing.Text
    def __init__(self,
        *,
        exact_match: typing.Text = ...,
        in_prefix: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["exact_match",b"exact_match","expr",b"expr","in_prefix",b"in_prefix"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["exact_match",b"exact_match","expr",b"expr","in_prefix",b"in_prefix"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expr",b"expr"]) -> typing.Optional[typing_extensions.Literal["exact_match","in_prefix"]]: ...
global___IpAddressFilterExpr = IpAddressFilterExpr

class FlowFilterAndExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ELEMENTS_FIELD_NUMBER: builtins.int
    @property
    def elements(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FlowFilterExpr]: ...
    def __init__(self,
        *,
        elements: typing.Optional[typing.Iterable[global___FlowFilterExpr]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["elements",b"elements"]) -> None: ...
global___FlowFilterAndExpr = FlowFilterAndExpr

class FlowFilterOrExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ELEMENTS_FIELD_NUMBER: builtins.int
    @property
    def elements(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FlowFilterExpr]: ...
    def __init__(self,
        *,
        elements: typing.Optional[typing.Iterable[global___FlowFilterExpr]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["elements",b"elements"]) -> None: ...
global___FlowFilterOrExpr = FlowFilterOrExpr

class MatchServers(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NTP_FIELD_NUMBER: builtins.int
    DNS_FIELD_NUMBER: builtins.int
    SNMP_TRAP_FIELD_NUMBER: builtins.int
    LOGGING_FIELD_NUMBER: builtins.int
    TACACS_FIELD_NUMBER: builtins.int
    @property
    def ntp(self) -> global___MatchServersExpr: ...
    @property
    def dns(self) -> global___MatchServersExpr: ...
    @property
    def snmp_trap(self) -> global___MatchServersExpr: ...
    @property
    def logging(self) -> global___MatchServersExpr: ...
    @property
    def tacacs(self) -> global___MatchServersExpr: ...
    def __init__(self,
        *,
        ntp: typing.Optional[global___MatchServersExpr] = ...,
        dns: typing.Optional[global___MatchServersExpr] = ...,
        snmp_trap: typing.Optional[global___MatchServersExpr] = ...,
        logging: typing.Optional[global___MatchServersExpr] = ...,
        tacacs: typing.Optional[global___MatchServersExpr] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dns",b"dns","logging",b"logging","ntp",b"ntp","servers",b"servers","snmp_trap",b"snmp_trap","tacacs",b"tacacs"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dns",b"dns","logging",b"logging","ntp",b"ntp","servers",b"servers","snmp_trap",b"snmp_trap","tacacs",b"tacacs"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["servers",b"servers"]) -> typing.Optional[typing_extensions.Literal["ntp","dns","snmp_trap","logging","tacacs"]]: ...
global___MatchServers = MatchServers

class MatchServersExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SET_FIELD_NUMBER: builtins.int
    @property
    def set(self) -> global___MatchStringSetExpr: ...
    def __init__(self,
        *,
        set: typing.Optional[global___MatchStringSetExpr] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["expr",b"expr","set",b"set"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["expr",b"expr","set",b"set"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expr",b"expr"]) -> typing.Optional[typing_extensions.Literal["set"]]: ...
global___MatchServersExpr = MatchServersExpr

class BgpPeerFilterExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INCLUDE_FIELD_NUMBER: builtins.int
    EXCLUDE_FIELD_NUMBER: builtins.int
    @property
    def include(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MatchBgpPeer]: ...
    @property
    def exclude(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MatchBgpPeer]: ...
    def __init__(self,
        *,
        include: typing.Optional[typing.Iterable[global___MatchBgpPeer]] = ...,
        exclude: typing.Optional[typing.Iterable[global___MatchBgpPeer]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["exclude",b"exclude","include",b"include"]) -> None: ...
global___BgpPeerFilterExpr = BgpPeerFilterExpr

class MatchBgpPeer(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DEVICES_FIELD_NUMBER: builtins.int
    PEER_GROUPS_FIELD_NUMBER: builtins.int
    LOCAL_ASNS_FIELD_NUMBER: builtins.int
    NEIGHBORS_FIELD_NUMBER: builtins.int
    VRFS_FIELD_NUMBER: builtins.int
    @property
    def devices(self) -> global___DeviceFilterExpr: ...
    @property
    def peer_groups(self) -> global___BgpPeerGroupFilterExpr: ...
    @property
    def local_asns(self) -> global___AsnFilterExpr: ...
    @property
    def neighbors(self) -> global___BgpNeighborFilterExpr: ...
    @property
    def vrfs(self) -> global___VrfNameExpr: ...
    def __init__(self,
        *,
        devices: typing.Optional[global___DeviceFilterExpr] = ...,
        peer_groups: typing.Optional[global___BgpPeerGroupFilterExpr] = ...,
        local_asns: typing.Optional[global___AsnFilterExpr] = ...,
        neighbors: typing.Optional[global___BgpNeighborFilterExpr] = ...,
        vrfs: typing.Optional[global___VrfNameExpr] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["devices",b"devices","local_asns",b"local_asns","neighbors",b"neighbors","peer_groups",b"peer_groups","vrfs",b"vrfs"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["devices",b"devices","local_asns",b"local_asns","neighbors",b"neighbors","peer_groups",b"peer_groups","vrfs",b"vrfs"]) -> None: ...
global___MatchBgpPeer = MatchBgpPeer

class BgpNeighborFilterExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Active(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        REMOTE_IPS_FIELD_NUMBER: builtins.int
        @property
        def remote_ips(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IpAddressFilterExpr]: ...
        def __init__(self,
            *,
            remote_ips: typing.Optional[typing.Iterable[global___IpAddressFilterExpr]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["remote_ips",b"remote_ips"]) -> None: ...

    class Dynamic(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        LISTEN_RANGES_FIELD_NUMBER: builtins.int
        @property
        def listen_ranges(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MatchIpPrefixExpr]: ...
        def __init__(self,
            *,
            listen_ranges: typing.Optional[typing.Iterable[global___MatchIpPrefixExpr]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["listen_ranges",b"listen_ranges"]) -> None: ...

    class Unnumbered(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        INTERFACE_NAMES_FIELD_NUMBER: builtins.int
        @property
        def interface_names(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MatchInterfaceName]: ...
        def __init__(self,
            *,
            interface_names: typing.Optional[typing.Iterable[global___MatchInterfaceName]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["interface_names",b"interface_names"]) -> None: ...

    ACTIVE_FIELD_NUMBER: builtins.int
    DYNAMIC_FIELD_NUMBER: builtins.int
    UNNUMBERED_FIELD_NUMBER: builtins.int
    @property
    def active(self) -> global___BgpNeighborFilterExpr.Active: ...
    @property
    def dynamic(self) -> global___BgpNeighborFilterExpr.Dynamic: ...
    @property
    def unnumbered(self) -> global___BgpNeighborFilterExpr.Unnumbered: ...
    def __init__(self,
        *,
        active: typing.Optional[global___BgpNeighborFilterExpr.Active] = ...,
        dynamic: typing.Optional[global___BgpNeighborFilterExpr.Dynamic] = ...,
        unnumbered: typing.Optional[global___BgpNeighborFilterExpr.Unnumbered] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["active",b"active","dynamic",b"dynamic","type",b"type","unnumbered",b"unnumbered"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["active",b"active","dynamic",b"dynamic","type",b"type","unnumbered",b"unnumbered"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["type",b"type"]) -> typing.Optional[typing_extensions.Literal["active","dynamic","unnumbered"]]: ...
global___BgpNeighborFilterExpr = BgpNeighborFilterExpr

class BgpPeerGroupFilterExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    @property
    def name(self) -> global___BgpPeerGroupNameExpr: ...
    def __init__(self,
        *,
        name: typing.Optional[global___BgpPeerGroupNameExpr] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["name",b"name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___BgpPeerGroupFilterExpr = BgpPeerGroupFilterExpr

class BgpPeerGroupNameExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    REGEX_FIELD_NUMBER: builtins.int
    regex: typing.Text
    def __init__(self,
        *,
        regex: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["expr",b"expr","regex",b"regex"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["expr",b"expr","regex",b"regex"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expr",b"expr"]) -> typing.Optional[typing_extensions.Literal["regex"]]: ...
global___BgpPeerGroupNameExpr = BgpPeerGroupNameExpr

class AsnFilterExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ASN_RANGE_FIELD_NUMBER: builtins.int
    @property
    def asn_range(self) -> global___MatchLongRangeExpr: ...
    def __init__(self,
        *,
        asn_range: typing.Optional[global___MatchLongRangeExpr] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["asn_range",b"asn_range","expr",b"expr"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["asn_range",b"asn_range","expr",b"expr"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expr",b"expr"]) -> typing.Optional[typing_extensions.Literal["asn_range"]]: ...
global___AsnFilterExpr = AsnFilterExpr

class BgpProcessFilterExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INCLUDE_FIELD_NUMBER: builtins.int
    EXCLUDE_FIELD_NUMBER: builtins.int
    @property
    def include(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MatchBgpProcess]: ...
    @property
    def exclude(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MatchBgpProcess]: ...
    def __init__(self,
        *,
        include: typing.Optional[typing.Iterable[global___MatchBgpProcess]] = ...,
        exclude: typing.Optional[typing.Iterable[global___MatchBgpProcess]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["exclude",b"exclude","include",b"include"]) -> None: ...
global___BgpProcessFilterExpr = BgpProcessFilterExpr

class MatchBgpProcess(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DEVICES_FIELD_NUMBER: builtins.int
    ROUTER_ID_FIELD_NUMBER: builtins.int
    VRF_NAME_FIELD_NUMBER: builtins.int
    @property
    def devices(self) -> global___DeviceFilterExpr: ...
    @property
    def router_id(self) -> global___RouterIdFilterExpr: ...
    @property
    def vrf_name(self) -> global___VrfNameExpr: ...
    def __init__(self,
        *,
        devices: typing.Optional[global___DeviceFilterExpr] = ...,
        router_id: typing.Optional[global___RouterIdFilterExpr] = ...,
        vrf_name: typing.Optional[global___VrfNameExpr] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["devices",b"devices","router_id",b"router_id","vrf_name",b"vrf_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["devices",b"devices","router_id",b"router_id","vrf_name",b"vrf_name"]) -> None: ...
global___MatchBgpProcess = MatchBgpProcess

class RouterIdFilterExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ROUTER_ID_FIELD_NUMBER: builtins.int
    IP_FIELD_NUMBER: builtins.int
    @property
    def router_id(self) -> intentionet.bfe.proto.datamodel.ip_primitives_pb2.Ip: ...
    ip: typing.Text
    def __init__(self,
        *,
        router_id: typing.Optional[intentionet.bfe.proto.datamodel.ip_primitives_pb2.Ip] = ...,
        ip: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["expr",b"expr","ip",b"ip","router_id",b"router_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["expr",b"expr","ip",b"ip","router_id",b"router_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expr",b"expr"]) -> typing.Optional[typing_extensions.Literal["router_id","ip"]]: ...
global___RouterIdFilterExpr = RouterIdFilterExpr

class SecurityGroupFilter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INCLUDE_FIELD_NUMBER: builtins.int
    EXCLUDE_FIELD_NUMBER: builtins.int
    @property
    def include(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SecurityGroupFilterExpr]: ...
    @property
    def exclude(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SecurityGroupFilterExpr]: ...
    def __init__(self,
        *,
        include: typing.Optional[typing.Iterable[global___SecurityGroupFilterExpr]] = ...,
        exclude: typing.Optional[typing.Iterable[global___SecurityGroupFilterExpr]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["exclude",b"exclude","include",b"include"]) -> None: ...
global___SecurityGroupFilter = SecurityGroupFilter

class SecurityGroupFilterExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ACCOUNT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    GROUP_ID_FIELD_NUMBER: builtins.int
    @property
    def account(self) -> global___AwsAccountMatchExpr: ...
    @property
    def region(self) -> global___AwsRegionMatchExpr: ...
    @property
    def name(self) -> global___SecurityGroupFilterNameExpr: ...
    @property
    def group_id(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        account: typing.Optional[global___AwsAccountMatchExpr] = ...,
        region: typing.Optional[global___AwsRegionMatchExpr] = ...,
        name: typing.Optional[global___SecurityGroupFilterNameExpr] = ...,
        group_id: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["account",b"account","name",b"name","region",b"region"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["account",b"account","group_id",b"group_id","name",b"name","region",b"region"]) -> None: ...
global___SecurityGroupFilterExpr = SecurityGroupFilterExpr

class SecurityGroupFilterNameExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    REGEX_FIELD_NUMBER: builtins.int
    regex: typing.Text
    def __init__(self,
        *,
        regex: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["expr",b"expr","regex",b"regex"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["expr",b"expr","regex",b"regex"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expr",b"expr"]) -> typing.Optional[typing_extensions.Literal["regex"]]: ...
global___SecurityGroupFilterNameExpr = SecurityGroupFilterNameExpr

class MatchSecurityGroupRules(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    IP_PREFIX_FIELD_NUMBER: builtins.int
    ALL_FIELD_NUMBER: builtins.int
    TCP_FIELD_NUMBER: builtins.int
    UDP_FIELD_NUMBER: builtins.int
    ICMP_FIELD_NUMBER: builtins.int
    @property
    def ip_prefix(self) -> global___MatchIpPrefixExpr: ...
    @property
    def all(self) -> google.protobuf.empty_pb2.Empty: ...
    @property
    def tcp(self) -> global___MatchProtocolWithPortsExpr: ...
    @property
    def udp(self) -> global___MatchProtocolWithPortsExpr: ...
    @property
    def icmp(self) -> global___MatchIcmpExpr: ...
    def __init__(self,
        *,
        ip_prefix: typing.Optional[global___MatchIpPrefixExpr] = ...,
        all: typing.Optional[google.protobuf.empty_pb2.Empty] = ...,
        tcp: typing.Optional[global___MatchProtocolWithPortsExpr] = ...,
        udp: typing.Optional[global___MatchProtocolWithPortsExpr] = ...,
        icmp: typing.Optional[global___MatchIcmpExpr] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["all",b"all","icmp",b"icmp","ip_prefix",b"ip_prefix","protocol",b"protocol","tcp",b"tcp","udp",b"udp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["all",b"all","icmp",b"icmp","ip_prefix",b"ip_prefix","protocol",b"protocol","tcp",b"tcp","udp",b"udp"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["protocol",b"protocol"]) -> typing.Optional[typing_extensions.Literal["all","tcp","udp","icmp"]]: ...
global___MatchSecurityGroupRules = MatchSecurityGroupRules

class AwsInstanceFilter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INCLUDE_FIELD_NUMBER: builtins.int
    EXCLUDE_FIELD_NUMBER: builtins.int
    @property
    def include(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AwsInstanceFilterExpr]: ...
    @property
    def exclude(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AwsInstanceFilterExpr]: ...
    def __init__(self,
        *,
        include: typing.Optional[typing.Iterable[global___AwsInstanceFilterExpr]] = ...,
        exclude: typing.Optional[typing.Iterable[global___AwsInstanceFilterExpr]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["exclude",b"exclude","include",b"include"]) -> None: ...
global___AwsInstanceFilter = AwsInstanceFilter

class AwsInstanceFilterExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ACCOUNT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    VPC_FIELD_NUMBER: builtins.int
    TAG_FIELD_NUMBER: builtins.int
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    @property
    def account(self) -> global___AwsAccountMatchExpr: ...
    @property
    def region(self) -> global___AwsRegionMatchExpr: ...
    @property
    def vpc(self) -> global___AwsVpcMatchExpr: ...
    @property
    def tag(self) -> global___AwsTagMatchExpr: ...
    @property
    def instance_id(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        account: typing.Optional[global___AwsAccountMatchExpr] = ...,
        region: typing.Optional[global___AwsRegionMatchExpr] = ...,
        vpc: typing.Optional[global___AwsVpcMatchExpr] = ...,
        tag: typing.Optional[global___AwsTagMatchExpr] = ...,
        instance_id: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["account",b"account","region",b"region","tag",b"tag","vpc",b"vpc"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["account",b"account","instance_id",b"instance_id","region",b"region","tag",b"tag","vpc",b"vpc"]) -> None: ...
global___AwsInstanceFilterExpr = AwsInstanceFilterExpr

class AwsNetworkInterfaceFilter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INCLUDE_FIELD_NUMBER: builtins.int
    EXCLUDE_FIELD_NUMBER: builtins.int
    @property
    def include(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AwsNetworkInterfaceFilterExpr]: ...
    @property
    def exclude(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AwsNetworkInterfaceFilterExpr]: ...
    def __init__(self,
        *,
        include: typing.Optional[typing.Iterable[global___AwsNetworkInterfaceFilterExpr]] = ...,
        exclude: typing.Optional[typing.Iterable[global___AwsNetworkInterfaceFilterExpr]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["exclude",b"exclude","include",b"include"]) -> None: ...
global___AwsNetworkInterfaceFilter = AwsNetworkInterfaceFilter

class AwsNetworkInterfaceFilterExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ACCOUNT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    ENI_ID_FIELD_NUMBER: builtins.int
    @property
    def account(self) -> global___AwsAccountMatchExpr: ...
    @property
    def region(self) -> global___AwsRegionMatchExpr: ...
    @property
    def eni_id(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        account: typing.Optional[global___AwsAccountMatchExpr] = ...,
        region: typing.Optional[global___AwsRegionMatchExpr] = ...,
        eni_id: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["account",b"account","region",b"region"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["account",b"account","eni_id",b"eni_id","region",b"region"]) -> None: ...
global___AwsNetworkInterfaceFilterExpr = AwsNetworkInterfaceFilterExpr

class AwsAccountMatchExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EQUALS_FIELD_NUMBER: builtins.int
    ANY_FIELD_NUMBER: builtins.int
    @property
    def equals(self) -> global___MatchAwsAccountEquals: ...
    @property
    def any(self) -> global___MatchAwsAccountAnyOf: ...
    def __init__(self,
        *,
        equals: typing.Optional[global___MatchAwsAccountEquals] = ...,
        any: typing.Optional[global___MatchAwsAccountAnyOf] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["any",b"any","equals",b"equals","expr",b"expr"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["any",b"any","equals",b"equals","expr",b"expr"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expr",b"expr"]) -> typing.Optional[typing_extensions.Literal["equals","any"]]: ...
global___AwsAccountMatchExpr = AwsAccountMatchExpr

class MatchAwsAccountEquals(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    id: typing.Text
    def __init__(self,
        *,
        id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id"]) -> None: ...
global___MatchAwsAccountEquals = MatchAwsAccountEquals

class MatchAwsAccountAnyOf(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    OF_FIELD_NUMBER: builtins.int
    @property
    def of(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MatchAwsAccountEquals]: ...
    def __init__(self,
        *,
        of: typing.Optional[typing.Iterable[global___MatchAwsAccountEquals]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["of",b"of"]) -> None: ...
global___MatchAwsAccountAnyOf = MatchAwsAccountAnyOf

class AwsRegionMatchExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ANY_FIELD_NUMBER: builtins.int
    @property
    def any(self) -> global___MatchAwsRegionAnyOf: ...
    def __init__(self,
        *,
        any: typing.Optional[global___MatchAwsRegionAnyOf] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["any",b"any","expr",b"expr"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["any",b"any","expr",b"expr"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expr",b"expr"]) -> typing.Optional[typing_extensions.Literal["any"]]: ...
global___AwsRegionMatchExpr = AwsRegionMatchExpr

class MatchAwsRegionEquals(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text
    def __init__(self,
        *,
        name: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___MatchAwsRegionEquals = MatchAwsRegionEquals

class MatchAwsRegionAnyOf(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    OF_FIELD_NUMBER: builtins.int
    @property
    def of(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MatchAwsRegionEquals]: ...
    def __init__(self,
        *,
        of: typing.Optional[typing.Iterable[global___MatchAwsRegionEquals]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["of",b"of"]) -> None: ...
global___MatchAwsRegionAnyOf = MatchAwsRegionAnyOf

class AwsVpcMatchExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EQUALS_FIELD_NUMBER: builtins.int
    ANY_FIELD_NUMBER: builtins.int
    @property
    def equals(self) -> global___MatchAwsVpcEquals: ...
    @property
    def any(self) -> global___MatchAwsVpcAnyOf: ...
    def __init__(self,
        *,
        equals: typing.Optional[global___MatchAwsVpcEquals] = ...,
        any: typing.Optional[global___MatchAwsVpcAnyOf] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["any",b"any","equals",b"equals","expr",b"expr"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["any",b"any","equals",b"equals","expr",b"expr"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expr",b"expr"]) -> typing.Optional[typing_extensions.Literal["equals","any"]]: ...
global___AwsVpcMatchExpr = AwsVpcMatchExpr

class MatchAwsVpcEquals(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    id: typing.Text
    def __init__(self,
        *,
        id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id"]) -> None: ...
global___MatchAwsVpcEquals = MatchAwsVpcEquals

class MatchAwsVpcAnyOf(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    OF_FIELD_NUMBER: builtins.int
    @property
    def of(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MatchAwsVpcEquals]: ...
    def __init__(self,
        *,
        of: typing.Optional[typing.Iterable[global___MatchAwsVpcEquals]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["of",b"of"]) -> None: ...
global___MatchAwsVpcAnyOf = MatchAwsVpcAnyOf

class AwsTagMatchExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EQUALS_FIELD_NUMBER: builtins.int
    @property
    def equals(self) -> intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.Tag: ...
    def __init__(self,
        *,
        equals: typing.Optional[intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.Tag] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["equals",b"equals","expr",b"expr"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["equals",b"equals","expr",b"expr"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expr",b"expr"]) -> typing.Optional[typing_extensions.Literal["equals"]]: ...
global___AwsTagMatchExpr = AwsTagMatchExpr

class MatchProtocolWithPortsExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PORTS_FIELD_NUMBER: builtins.int
    @property
    def ports(self) -> global___MatchIntRangeExpr: ...
    def __init__(self,
        *,
        ports: typing.Optional[global___MatchIntRangeExpr] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["ports",b"ports"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ports",b"ports"]) -> None: ...
global___MatchProtocolWithPortsExpr = MatchProtocolWithPortsExpr

class MatchIcmpExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TYPE_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    @property
    def type(self) -> intentionet.bfe.proto.datamodel.ip_primitives_pb2.IcmpType: ...
    @property
    def code(self) -> intentionet.bfe.proto.datamodel.ip_primitives_pb2.IcmpCode: ...
    def __init__(self,
        *,
        type: typing.Optional[intentionet.bfe.proto.datamodel.ip_primitives_pb2.IcmpType] = ...,
        code: typing.Optional[intentionet.bfe.proto.datamodel.ip_primitives_pb2.IcmpCode] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["code",b"code","type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["code",b"code","type",b"type"]) -> None: ...
global___MatchIcmpExpr = MatchIcmpExpr

class MatchUInt32Expr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EQUALS_FIELD_NUMBER: builtins.int
    GREATER_THAN_FIELD_NUMBER: builtins.int
    GREATER_THAN_OR_EQUALS_FIELD_NUMBER: builtins.int
    LESS_THAN_FIELD_NUMBER: builtins.int
    LESS_THAN_OR_EQUALS_FIELD_NUMBER: builtins.int
    NOT_EQUALS_FIELD_NUMBER: builtins.int
    equals: builtins.int
    greater_than: builtins.int
    greater_than_or_equals: builtins.int
    less_than: builtins.int
    less_than_or_equals: builtins.int
    not_equals: builtins.int
    def __init__(self,
        *,
        equals: builtins.int = ...,
        greater_than: builtins.int = ...,
        greater_than_or_equals: builtins.int = ...,
        less_than: builtins.int = ...,
        less_than_or_equals: builtins.int = ...,
        not_equals: builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["equals",b"equals","expr",b"expr","greater_than",b"greater_than","greater_than_or_equals",b"greater_than_or_equals","less_than",b"less_than","less_than_or_equals",b"less_than_or_equals","not_equals",b"not_equals"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["equals",b"equals","expr",b"expr","greater_than",b"greater_than","greater_than_or_equals",b"greater_than_or_equals","less_than",b"less_than","less_than_or_equals",b"less_than_or_equals","not_equals",b"not_equals"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expr",b"expr"]) -> typing.Optional[typing_extensions.Literal["equals","greater_than","greater_than_or_equals","less_than","less_than_or_equals","not_equals"]]: ...
global___MatchUInt32Expr = MatchUInt32Expr

class MatchStringSetExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EQUALS_FIELD_NUMBER: builtins.int
    HAS_ANY_FIELD_NUMBER: builtins.int
    HAS_ALL_FIELD_NUMBER: builtins.int
    @property
    def equals(self) -> global___StringCollection: ...
    @property
    def has_any(self) -> global___StringCollection: ...
    @property
    def has_all(self) -> global___StringCollection: ...
    def __init__(self,
        *,
        equals: typing.Optional[global___StringCollection] = ...,
        has_any: typing.Optional[global___StringCollection] = ...,
        has_all: typing.Optional[global___StringCollection] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["equals",b"equals","expr",b"expr","has_all",b"has_all","has_any",b"has_any"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["equals",b"equals","expr",b"expr","has_all",b"has_all","has_any",b"has_any"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expr",b"expr"]) -> typing.Optional[typing_extensions.Literal["equals","has_any","has_all"]]: ...
global___MatchStringSetExpr = MatchStringSetExpr

class MatchStringSetResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUES_FIELD_NUMBER: builtins.int
    PROBLEMS_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def problems(self) -> global___MatchStringSetProblems: ...
    def __init__(self,
        *,
        values: typing.Optional[typing.Iterable[typing.Text]] = ...,
        problems: typing.Optional[global___MatchStringSetProblems] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["problems",b"problems"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["problems",b"problems","values",b"values"]) -> None: ...
global___MatchStringSetResult = MatchStringSetResult

class MatchStringSetProblems(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MISSING_ALL_FIELD_NUMBER: builtins.int
    MISSING_SOME_FIELD_NUMBER: builtins.int
    EXTRA_FIELD_NUMBER: builtins.int
    @property
    def missing_all(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def missing_some(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def extra(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        missing_all: typing.Optional[typing.Iterable[typing.Text]] = ...,
        missing_some: typing.Optional[typing.Iterable[typing.Text]] = ...,
        extra: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["extra",b"extra","missing_all",b"missing_all","missing_some",b"missing_some"]) -> None: ...
global___MatchStringSetProblems = MatchStringSetProblems

class MatchIpProtocolExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INCLUDES_FIELD_NUMBER: builtins.int
    includes: typing.Text
    def __init__(self,
        *,
        includes: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["expr",b"expr","includes",b"includes"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["expr",b"expr","includes",b"includes"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expr",b"expr"]) -> typing.Optional[typing_extensions.Literal["includes"]]: ...
global___MatchIpProtocolExpr = MatchIpProtocolExpr

class MatchIntRangeExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INTERSECTS_FIELD_NUMBER: builtins.int
    @property
    def intersects(self) -> intentionet.bfe.proto.datamodel.range_pb2.IntRange: ...
    def __init__(self,
        *,
        intersects: typing.Optional[intentionet.bfe.proto.datamodel.range_pb2.IntRange] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["expr",b"expr","intersects",b"intersects"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["expr",b"expr","intersects",b"intersects"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expr",b"expr"]) -> typing.Optional[typing_extensions.Literal["intersects"]]: ...
global___MatchIntRangeExpr = MatchIntRangeExpr

class MatchLongRangeExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INTERSECTS_FIELD_NUMBER: builtins.int
    @property
    def intersects(self) -> intentionet.bfe.proto.datamodel.range_pb2.LongRange: ...
    def __init__(self,
        *,
        intersects: typing.Optional[intentionet.bfe.proto.datamodel.range_pb2.LongRange] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["expr",b"expr","intersects",b"intersects"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["expr",b"expr","intersects",b"intersects"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expr",b"expr"]) -> typing.Optional[typing_extensions.Literal["intersects"]]: ...
global___MatchLongRangeExpr = MatchLongRangeExpr

class MatchIpPrefixExpr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EQUALS_FIELD_NUMBER: builtins.int
    CONTAINS_FIELD_NUMBER: builtins.int
    CONTAINED_BY_FIELD_NUMBER: builtins.int
    equals: typing.Text
    contains: typing.Text
    contained_by: typing.Text
    def __init__(self,
        *,
        equals: typing.Text = ...,
        contains: typing.Text = ...,
        contained_by: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["contained_by",b"contained_by","contains",b"contains","equals",b"equals","expr",b"expr"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["contained_by",b"contained_by","contains",b"contains","equals",b"equals","expr",b"expr"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expr",b"expr"]) -> typing.Optional[typing_extensions.Literal["equals","contains","contained_by"]]: ...
global___MatchIpPrefixExpr = MatchIpPrefixExpr

class StringCollection(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ITEMS_FIELD_NUMBER: builtins.int
    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        items: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["items",b"items"]) -> None: ...
global___StringCollection = StringCollection
