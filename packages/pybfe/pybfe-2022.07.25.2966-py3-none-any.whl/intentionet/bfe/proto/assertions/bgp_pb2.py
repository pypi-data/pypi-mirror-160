# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: intentionet/bfe/proto/assertions/bgp.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from intentionet.bfe.proto.assertions import flow_pb2 as intentionet_dot_bfe_dot_proto_dot_assertions_dot_flow__pb2
from intentionet.bfe.proto.assertions import parameters_pb2 as intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2
from intentionet.bfe.proto.assertions import violations_pb2 as intentionet_dot_bfe_dot_proto_dot_assertions_dot_violations__pb2
from intentionet.bfe.proto.datamodel import flow_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_flow__pb2
from intentionet.bfe.proto.datamodel import bgp_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_bgp__pb2
from intentionet.bfe.proto.datamodel import device_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_device__pb2
from intentionet.bfe.proto.datamodel import ip_primitives_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_ip__primitives__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n*intentionet/bfe/proto/assertions/bgp.proto\x12\x1e\x63om.intentionet.bfe.assertions\x1a+intentionet/bfe/proto/assertions/flow.proto\x1a\x31intentionet/bfe/proto/assertions/parameters.proto\x1a\x31intentionet/bfe/proto/assertions/violations.proto\x1a*intentionet/bfe/proto/datamodel/flow.proto\x1a)intentionet/bfe/proto/datamodel/bgp.proto\x1a,intentionet/bfe/proto/datamodel/device.proto\x1a\x33intentionet/bfe/proto/datamodel/ip_primitives.proto\"\'\n%BgpSessionEstablishmentAssertionInput\"\x91\t\n&BgpSessionEstablishmentAssertionResult\x12m\n\tviolators\x18\x01 \x03(\x0b\x32O.com.intentionet.bfe.assertions.BgpSessionEstablishmentAssertionResult.ViolatorR\tviolators\x12\x33\n\x15violator_descriptions\x18\x02 \x03(\tR\x14violatorDescriptions\x1a\xd5\x02\n\x08Violator\x12@\n\tinitiator\x18\x01 \x01(\x0b\x32\".com.intentionet.datamodel.BgpPeerR\tinitiator\x12]\n\x11\x64\x65scription_index\x18\x02 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DescriptionIndexR\x10\x64\x65scriptionIndex\x12\x9c\x01\n\x19\x61\x63tive_connection_failure\x18\x03 \x01(\x0b\x32^.com.intentionet.bfe.assertions.BgpSessionEstablishmentAssertionResult.ActiveConnectionFailureH\x00R\x17\x61\x63tiveConnectionFailureB\t\n\x07problem\x1a\xff\x01\n\x17\x41\x63tiveConnectionFailure\x12\'\n\x0ftotal_listeners\x18\x01 \x01(\rR\x0etotalListeners\x12\x89\x01\n\x13\x63onnection_failures\x18\x02 \x03(\x0b\x32X.com.intentionet.bfe.assertions.BgpSessionEstablishmentAssertionResult.ConnectionFailureR\x12\x63onnectionFailures\x12/\n\x13initiator_interface\x18\x05 \x01(\tR\x12initiatorInterface\x1a\xe8\x02\n\x11\x43onnectionFailure\x12>\n\x08listener\x18\x01 \x01(\x0b\x32\".com.intentionet.datamodel.BgpPeerR\x08listener\x12\'\n\x0f\x66\x61ilure_summary\x18\x02 \x01(\tR\x0e\x66\x61ilureSummary\x12\x33\n\x04\x66low\x18\x03 \x01(\x0b\x32\x1f.com.intentionet.datamodel.FlowR\x04\x66low\x12\x80\x01\n\tdirection\x18\x04 \x01(\x0e\x32\x62.com.intentionet.bfe.assertions.BgpSessionEstablishmentAssertionResult.ConnectionFailure.DirectionR\tdirection\"2\n\tDirection\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0b\n\x07\x46ORWARD\x10\x01\x12\x0b\n\x07REVERSE\x10\x02\"o\n\x1d\x44uplicateBgpAsnAssertionInput\x12N\n\tbgp_peers\x18\x01 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.BgpPeerFilterExprR\x08\x62gpPeers\"\xba\x04\n\x1e\x44uplicateBgpAsnAssertionResult\x12\x65\n\tviolators\x18\x01 \x03(\x0b\x32G.com.intentionet.bfe.assertions.DuplicateBgpAsnAssertionResult.ViolatorR\tviolators\x12\x33\n\x15violator_descriptions\x18\x02 \x03(\tR\x14violatorDescriptions\x1a\xaa\x02\n\x08Violator\x12\x33\n\x03\x61sn\x18\x01 \x01(\x0b\x32!.com.intentionet.datamodel.BgpAsnR\x03\x61sn\x12]\n\x11\x64\x65scription_index\x18\x02 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DescriptionIndexR\x10\x64\x65scriptionIndex\x12\x7f\n\x12reuse_across_nodes\x18\x03 \x01(\x0b\x32O.com.intentionet.bfe.assertions.DuplicateBgpAsnAssertionResult.ReuseAcrossNodesH\x00R\x10reuseAcrossNodesB\t\n\x07problem\x1aO\n\x10ReuseAcrossNodes\x12;\n\x07\x64\x65vices\x18\x01 \x03(\x0b\x32!.com.intentionet.datamodel.DeviceR\x07\x64\x65vices\"\xb8\x01\n\"DuplicateBgpRouterIdAssertionInput\x12Y\n\rbgp_processes\x18\x01 \x01(\x0b\x32\x34.com.intentionet.bfe.assertions.BgpProcessFilterExprR\x0c\x62gpProcesses\x12\x37\n\x18ignore_same_device_reuse\x18\x02 \x01(\x08R\x15ignoreSameDeviceReuse\"\x80\x06\n#DuplicateBgpRouterIdAssertionResult\x12j\n\tviolators\x18\x01 \x03(\x0b\x32L.com.intentionet.bfe.assertions.DuplicateBgpRouterIdAssertionResult.ViolatorR\tviolators\x12\x33\n\x15violator_descriptions\x18\x02 \x03(\tR\x14violatorDescriptions\x1a\xb3\x02\n\x08Violator\x12:\n\trouter_id\x18\x01 \x01(\x0b\x32\x1d.com.intentionet.datamodel.IpR\x08routerId\x12]\n\x11\x64\x65scription_index\x18\x02 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DescriptionIndexR\x10\x64\x65scriptionIndex\x12\x80\x01\n\x10\x61\x63ross_processes\x18\x03 \x01(\x0b\x32S.com.intentionet.bfe.assertions.DuplicateBgpRouterIdAssertionResult.AcrossProcessesH\x00R\x0f\x61\x63rossProcessesB\t\n\x07problem\x1a\x86\x01\n\x0f\x41\x63rossProcesses\x12s\n\rbgp_processes\x18\x01 \x03(\x0b\x32N.com.intentionet.bfe.assertions.DuplicateBgpRouterIdAssertionResult.BgpProcessR\x0c\x62gpProcesses\x1ay\n\nBgpProcess\x12\x39\n\x06\x64\x65vice\x18\x01 \x01(\x0b\x32!.com.intentionet.datamodel.DeviceR\x06\x64\x65vice\x12\x30\n\x03vrf\x18\x02 \x01(\x0b\x32\x1e.com.intentionet.datamodel.VrfR\x03vrf\"\xe6\x03\n%BgpPeeringEstablishmentAssertionInput\x12N\n\tbgp_peers\x18\x01 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.BgpPeerFilterExprR\x08\x62gpPeers\x12r\n\x1cignore_unknown_remote_device\x18\x02 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.BgpPeerFilterExprR\x19ignoreUnknownRemoteDevice\x12}\n\"ignore_inactive_interface_local_ip\x18\x03 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.BgpPeerFilterExprR\x1eignoreInactiveInterfaceLocalIp\x12z\n ignore_inactive_remote_interface\x18\x04 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.BgpPeerFilterExprR\x1dignoreInactiveRemoteInterface\"\xda\x36\n&BgpPeeringEstablishmentAssertionResult\x12m\n\tviolators\x18\x01 \x03(\x0b\x32O.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.ViolatorR\tviolators\x12p\n\nconformers\x18\x02 \x03(\x0b\x32P.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.ConformerR\nconformers\x1a\xfc\x02\n\tConformer\x12=\n\x08\x62gp_peer\x18\x01 \x01(\x0b\x32\".com.intentionet.datamodel.BgpPeerR\x07\x62gpPeer\x12 \n\x0b\x64\x65scription\x18\x02 \x01(\tR\x0b\x64\x65scription\x12z\n\rno_violations\x18\x03 \x01(\x0b\x32S.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoViolationsH\x00R\x0cnoViolations\x12\x89\x01\n\x12ignored_violations\x18\x04 \x01(\x0b\x32X.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.IgnoredViolationsH\x00R\x11ignoredViolationsB\x06\n\x04type\x1ag\n\x0cNoViolations\x12W\n\x15\x65stablished_neighbors\x18\x01 \x03(\x0b\x32\".com.intentionet.datamodel.BgpPeerR\x14\x65stablishedNeighbors\x1a\x42\n\x11IgnoredViolations\x12-\n\x12ignored_violations\x18\x01 \x03(\tR\x11ignoredViolations\x1a\xdd\x01\n\x08Violator\x12=\n\x08\x62gp_peer\x18\x01 \x01(\x0b\x32\".com.intentionet.datamodel.BgpPeerR\x07\x62gpPeer\x12 \n\x0b\x64\x65scription\x18\x02 \x01(\tR\x0b\x64\x65scription\x12p\n\nviolations\x18\x03 \x03(\x0b\x32P.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.ViolationR\nviolations\x1a\xba\x14\n\tViolation\x12r\n\x0bno_local_as\x18\x01 \x01(\x0b\x32P.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoLocalAsH\x00R\tnoLocalAs\x12u\n\x0cno_remote_as\x18\x02 \x01(\x0b\x32Q.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoRemoteAsH\x00R\nnoRemoteAs\x12\x85\x01\n\x12no_usable_local_ip\x18\x0b \x01(\x0b\x32V.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoUsableLocalIpH\x00R\x0fnoUsableLocalIp\x12\x85\x01\n\x10invalid_local_ip\x18\x0c \x01(\x0b\x32U.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.InvalidLocalIpB\x02\x18\x01H\x00R\x0einvalidLocalIp\x12\x89\x01\n\x12inactive_interface\x18\r \x01(\x0b\x32X.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.InactiveInterfaceH\x00R\x11inactiveInterface\x12\xa0\x01\n\x1binactive_interface_local_ip\x18\x0e \x01(\x0b\x32_.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.InactiveInterfaceLocalIpH\x00R\x18inactiveInterfaceLocalIp\x12\x85\x01\n\x12other_vrf_local_ip\x18\x0f \x01(\x0b\x32V.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.OtherVrfLocalIpH\x00R\x0fotherVrfLocalIp\x12\x81\x01\n\x10unknown_local_ip\x18\x10 \x01(\x0b\x32U.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.UnknownLocalIpH\x00R\x0eunknownLocalIp\x12u\n\x0cno_remote_ip\x18\x15 \x01(\x0b\x32Q.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoRemoteIpH\x00R\nnoRemoteIp\x12\x81\x01\n\x10no_remote_prefix\x18\x16 \x01(\x0b\x32U.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoRemotePrefixH\x00R\x0enoRemotePrefix\x12\x90\x01\n\x15invalid_remote_prefix\x18\x17 \x01(\x0b\x32Z.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.InvalidRemotePrefixH\x00R\x13invalidRemotePrefix\x12\x90\x01\n\x15unknown_remote_device\x18\x1f \x01(\x0b\x32Z.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.UnknownRemoteDeviceH\x00R\x13unknownRemoteDevice\x12\x9c\x01\n\x19inactive_remote_interface\x18% \x01(\x0b\x32^.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.InactiveRemoteInterfaceH\x00R\x17inactiveRemoteInterface\x12\xc1\x01\n&no_candidate_listener_at_remote_device\x18  \x01(\x0b\x32h.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoCandidateListenerAtRemoteDeviceB\x02\x18\x01H\x00R!noCandidateListenerAtRemoteDevice\x12\x93\x01\n\x16no_compatible_listener\x18! \x01(\x0b\x32[.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoCompatibleListenerH\x00R\x14noCompatibleListener\x12\x96\x01\n\x17no_compatible_initiator\x18\" \x01(\x0b\x32\\.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoCompatibleInitiatorH\x00R\x15noCompatibleInitiator\x12\x90\x01\n\x15no_reachable_listener\x18# \x01(\x0b\x32Z.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoReachableListenerH\x00R\x13noReachableListener\x12\xa8\x01\n\x1dmultiple_successful_listeners\x18$ \x01(\x0b\x32\x62.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.MultipleSuccessfulListenersH\x00R\x1bmultipleSuccessfulListenersB\x06\n\x04type\x1a\x0b\n\tNoLocalAs\x1a\x0c\n\nNoRemoteAs\x1a\x11\n\x0fNoUsableLocalIp\x1aJ\n\x0eInvalidLocalIp\x12\x38\n\x08local_ip\x18\x01 \x01(\x0b\x32\x1d.com.intentionet.datamodel.IpR\x07localIp\x1a\x9a\x01\n\x18InactiveInterfaceLocalIp\x12\x38\n\x08local_ip\x18\x01 \x01(\x0b\x32\x1d.com.intentionet.datamodel.IpR\x07localIp\x12\x44\n\ninterfaces\x18\x02 \x03(\x0b\x32$.com.intentionet.datamodel.InterfaceR\ninterfaces\x1a\xf4\x02\n\x0fOtherVrfLocalIp\x12\x38\n\x08local_ip\x18\x01 \x01(\x0b\x32\x1d.com.intentionet.datamodel.IpR\x07localIp\x12\x9a\x01\n\x14other_vrf_interfaces\x18\x02 \x03(\x0b\x32h.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.OtherVrfLocalIp.OtherVrfInterfaceR\x12otherVrfInterfaces\x1a\x89\x01\n\x11OtherVrfInterface\x12\x42\n\tinterface\x18\x01 \x01(\x0b\x32$.com.intentionet.datamodel.InterfaceR\tinterface\x12\x30\n\x03vrf\x18\x02 \x01(\x0b\x32\x1e.com.intentionet.datamodel.VrfR\x03vrf\x1aJ\n\x0eUnknownLocalIp\x12\x38\n\x08local_ip\x18\x01 \x01(\x0b\x32\x1d.com.intentionet.datamodel.IpR\x07localIp\x1a\x13\n\x11InactiveInterface\x1a\x0c\n\nNoRemoteIp\x1a\x10\n\x0eNoRemotePrefix\x1a\x15\n\x13InvalidRemotePrefix\x1a\x15\n\x13UnknownRemoteDevice\x1a_\n\x17InactiveRemoteInterface\x12\x44\n\ninterfaces\x18\x01 \x03(\x0b\x32$.com.intentionet.datamodel.InterfaceR\ninterfaces\x1a\xa2\x02\n!NoCandidateListenerAtRemoteDevice\x12\x8f\x01\n\x07remotes\x18\x01 \x03(\x0b\x32u.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoCandidateListenerAtRemoteDevice.RemoteDeviceR\x07remotes\x1ak\n\x0cRemoteDevice\x12\x39\n\x06\x64\x65vice\x18\x01 \x01(\x0b\x32!.com.intentionet.datamodel.DeviceR\x06\x64\x65vice\x12 \n\x0b\x65xplanation\x18\x02 \x01(\tR\x0b\x65xplanation\x1a\x88\x02\n\x1bMultipleSuccessfulListeners\x12\x93\x01\n\tlisteners\x18\x01 \x03(\x0b\x32u.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.MultipleSuccessfulListeners.SuccessfulListenerR\tlisteners\x1aS\n\x12SuccessfulListener\x12=\n\x08\x62gp_peer\x18\x01 \x01(\x0b\x32\".com.intentionet.datamodel.BgpPeerR\x07\x62gpPeer\x1a\xa3\x05\n\x13NoReachableListener\x12\x8c\x01\n\tlisteners\x18\x01 \x03(\x0b\x32n.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoReachableListener.UnreachableListenerR\tlisteners\x1a\xf1\x02\n\x13UnreachableListener\x12=\n\x08\x62gp_peer\x18\x01 \x01(\x0b\x32\".com.intentionet.datamodel.BgpPeerR\x07\x62gpPeer\x12N\n\x04\x66low\x18\x02 \x01(\x0b\x32\x36.com.intentionet.bfe.assertions.TracerouteParamsOrFlowB\x02\x18\x01R\x04\x66low\x12+\n\x0f\x66\x61ilure_summary\x18\x03 \x01(\tB\x02\x18\x01R\x0e\x66\x61ilureSummary\x12\x9d\x01\n\x13\x63onnection_attempts\x18\x04 \x03(\x0b\x32l.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoReachableListener.ConnectionAttemptR\x12\x63onnectionAttempts\x1a\x88\x01\n\x11\x43onnectionAttempt\x12J\n\x04\x66low\x18\x01 \x01(\x0b\x32\x36.com.intentionet.bfe.assertions.TracerouteParamsOrFlowR\x04\x66low\x12\'\n\x0f\x66\x61ilure_summary\x18\x02 \x01(\tR\x0e\x66\x61ilureSummary\x1a\xf8\x08\n\x14NoCompatibleListener\x12\x92\x01\n\tlisteners\x18\x01 \x03(\x0b\x32p.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoCompatibleListener.IncompatibleListenerB\x02\x18\x01R\tlisteners\x12\xa1\x01\n\x14incompatible_remotes\x18\x02 \x03(\x0b\x32n.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoCompatibleListener.IncompatibleRemoteR\x13incompatibleRemotes\x1a\x9b\x02\n\x12IncompatibleRemote\x12\x39\n\x06\x64\x65vice\x18\x01 \x01(\x0b\x32!.com.intentionet.datamodel.DeviceR\x06\x64\x65vice\x12 \n\x0b\x65xplanation\x18\x02 \x01(\tR\x0b\x65xplanation\x12\xa7\x01\n\x16incompatible_listeners\x18\x03 \x03(\x0b\x32p.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoCompatibleListener.IncompatibleListenerR\x15incompatibleListeners\x1a\xdc\x03\n\x14IncompatibleListener\x12=\n\x08\x62gp_peer\x18\x01 \x01(\x0b\x32\".com.intentionet.datamodel.BgpPeerR\x07\x62gpPeer\x12\xad\x01\n\x19incompatible_ip_or_prefix\x18\x02 \x01(\x0b\x32r.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoCompatibleListener.IncompatibleIpOrPrefixR\x16incompatibleIpOrPrefix\x12\x93\x01\n\x0fincompatible_as\x18\x03 \x01(\x0b\x32j.com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoCompatibleListener.IncompatibleAsR\x0eincompatibleAs\x12?\n\x1bincompatibility_description\x18\x04 \x01(\tR\x1aincompatibilityDescription\x1a\x18\n\x16IncompatibleIpOrPrefix\x1a\x10\n\x0eIncompatibleAs\x1a\x17\n\x15NoCompatibleInitiatorb\x06proto3')



_BGPSESSIONESTABLISHMENTASSERTIONINPUT = DESCRIPTOR.message_types_by_name['BgpSessionEstablishmentAssertionInput']
_BGPSESSIONESTABLISHMENTASSERTIONRESULT = DESCRIPTOR.message_types_by_name['BgpSessionEstablishmentAssertionResult']
_BGPSESSIONESTABLISHMENTASSERTIONRESULT_VIOLATOR = _BGPSESSIONESTABLISHMENTASSERTIONRESULT.nested_types_by_name['Violator']
_BGPSESSIONESTABLISHMENTASSERTIONRESULT_ACTIVECONNECTIONFAILURE = _BGPSESSIONESTABLISHMENTASSERTIONRESULT.nested_types_by_name['ActiveConnectionFailure']
_BGPSESSIONESTABLISHMENTASSERTIONRESULT_CONNECTIONFAILURE = _BGPSESSIONESTABLISHMENTASSERTIONRESULT.nested_types_by_name['ConnectionFailure']
_DUPLICATEBGPASNASSERTIONINPUT = DESCRIPTOR.message_types_by_name['DuplicateBgpAsnAssertionInput']
_DUPLICATEBGPASNASSERTIONRESULT = DESCRIPTOR.message_types_by_name['DuplicateBgpAsnAssertionResult']
_DUPLICATEBGPASNASSERTIONRESULT_VIOLATOR = _DUPLICATEBGPASNASSERTIONRESULT.nested_types_by_name['Violator']
_DUPLICATEBGPASNASSERTIONRESULT_REUSEACROSSNODES = _DUPLICATEBGPASNASSERTIONRESULT.nested_types_by_name['ReuseAcrossNodes']
_DUPLICATEBGPROUTERIDASSERTIONINPUT = DESCRIPTOR.message_types_by_name['DuplicateBgpRouterIdAssertionInput']
_DUPLICATEBGPROUTERIDASSERTIONRESULT = DESCRIPTOR.message_types_by_name['DuplicateBgpRouterIdAssertionResult']
_DUPLICATEBGPROUTERIDASSERTIONRESULT_VIOLATOR = _DUPLICATEBGPROUTERIDASSERTIONRESULT.nested_types_by_name['Violator']
_DUPLICATEBGPROUTERIDASSERTIONRESULT_ACROSSPROCESSES = _DUPLICATEBGPROUTERIDASSERTIONRESULT.nested_types_by_name['AcrossProcesses']
_DUPLICATEBGPROUTERIDASSERTIONRESULT_BGPPROCESS = _DUPLICATEBGPROUTERIDASSERTIONRESULT.nested_types_by_name['BgpProcess']
_BGPPEERINGESTABLISHMENTASSERTIONINPUT = DESCRIPTOR.message_types_by_name['BgpPeeringEstablishmentAssertionInput']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT = DESCRIPTOR.message_types_by_name['BgpPeeringEstablishmentAssertionResult']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_CONFORMER = _BGPPEERINGESTABLISHMENTASSERTIONRESULT.nested_types_by_name['Conformer']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOVIOLATIONS = _BGPPEERINGESTABLISHMENTASSERTIONRESULT.nested_types_by_name['NoViolations']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_IGNOREDVIOLATIONS = _BGPPEERINGESTABLISHMENTASSERTIONRESULT.nested_types_by_name['IgnoredViolations']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_VIOLATOR = _BGPPEERINGESTABLISHMENTASSERTIONRESULT.nested_types_by_name['Violator']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_VIOLATION = _BGPPEERINGESTABLISHMENTASSERTIONRESULT.nested_types_by_name['Violation']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOLOCALAS = _BGPPEERINGESTABLISHMENTASSERTIONRESULT.nested_types_by_name['NoLocalAs']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREMOTEAS = _BGPPEERINGESTABLISHMENTASSERTIONRESULT.nested_types_by_name['NoRemoteAs']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOUSABLELOCALIP = _BGPPEERINGESTABLISHMENTASSERTIONRESULT.nested_types_by_name['NoUsableLocalIp']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_INVALIDLOCALIP = _BGPPEERINGESTABLISHMENTASSERTIONRESULT.nested_types_by_name['InvalidLocalIp']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_INACTIVEINTERFACELOCALIP = _BGPPEERINGESTABLISHMENTASSERTIONRESULT.nested_types_by_name['InactiveInterfaceLocalIp']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_OTHERVRFLOCALIP = _BGPPEERINGESTABLISHMENTASSERTIONRESULT.nested_types_by_name['OtherVrfLocalIp']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_OTHERVRFLOCALIP_OTHERVRFINTERFACE = _BGPPEERINGESTABLISHMENTASSERTIONRESULT_OTHERVRFLOCALIP.nested_types_by_name['OtherVrfInterface']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_UNKNOWNLOCALIP = _BGPPEERINGESTABLISHMENTASSERTIONRESULT.nested_types_by_name['UnknownLocalIp']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_INACTIVEINTERFACE = _BGPPEERINGESTABLISHMENTASSERTIONRESULT.nested_types_by_name['InactiveInterface']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREMOTEIP = _BGPPEERINGESTABLISHMENTASSERTIONRESULT.nested_types_by_name['NoRemoteIp']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREMOTEPREFIX = _BGPPEERINGESTABLISHMENTASSERTIONRESULT.nested_types_by_name['NoRemotePrefix']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_INVALIDREMOTEPREFIX = _BGPPEERINGESTABLISHMENTASSERTIONRESULT.nested_types_by_name['InvalidRemotePrefix']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_UNKNOWNREMOTEDEVICE = _BGPPEERINGESTABLISHMENTASSERTIONRESULT.nested_types_by_name['UnknownRemoteDevice']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_INACTIVEREMOTEINTERFACE = _BGPPEERINGESTABLISHMENTASSERTIONRESULT.nested_types_by_name['InactiveRemoteInterface']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCANDIDATELISTENERATREMOTEDEVICE = _BGPPEERINGESTABLISHMENTASSERTIONRESULT.nested_types_by_name['NoCandidateListenerAtRemoteDevice']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCANDIDATELISTENERATREMOTEDEVICE_REMOTEDEVICE = _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCANDIDATELISTENERATREMOTEDEVICE.nested_types_by_name['RemoteDevice']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_MULTIPLESUCCESSFULLISTENERS = _BGPPEERINGESTABLISHMENTASSERTIONRESULT.nested_types_by_name['MultipleSuccessfulListeners']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_MULTIPLESUCCESSFULLISTENERS_SUCCESSFULLISTENER = _BGPPEERINGESTABLISHMENTASSERTIONRESULT_MULTIPLESUCCESSFULLISTENERS.nested_types_by_name['SuccessfulListener']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREACHABLELISTENER = _BGPPEERINGESTABLISHMENTASSERTIONRESULT.nested_types_by_name['NoReachableListener']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREACHABLELISTENER_UNREACHABLELISTENER = _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREACHABLELISTENER.nested_types_by_name['UnreachableListener']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREACHABLELISTENER_CONNECTIONATTEMPT = _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREACHABLELISTENER.nested_types_by_name['ConnectionAttempt']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER = _BGPPEERINGESTABLISHMENTASSERTIONRESULT.nested_types_by_name['NoCompatibleListener']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER_INCOMPATIBLEREMOTE = _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER.nested_types_by_name['IncompatibleRemote']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER_INCOMPATIBLELISTENER = _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER.nested_types_by_name['IncompatibleListener']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER_INCOMPATIBLEIPORPREFIX = _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER.nested_types_by_name['IncompatibleIpOrPrefix']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER_INCOMPATIBLEAS = _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER.nested_types_by_name['IncompatibleAs']
_BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLEINITIATOR = _BGPPEERINGESTABLISHMENTASSERTIONRESULT.nested_types_by_name['NoCompatibleInitiator']
_BGPSESSIONESTABLISHMENTASSERTIONRESULT_CONNECTIONFAILURE_DIRECTION = _BGPSESSIONESTABLISHMENTASSERTIONRESULT_CONNECTIONFAILURE.enum_types_by_name['Direction']
BgpSessionEstablishmentAssertionInput = _reflection.GeneratedProtocolMessageType('BgpSessionEstablishmentAssertionInput', (_message.Message,), {
  'DESCRIPTOR' : _BGPSESSIONESTABLISHMENTASSERTIONINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpSessionEstablishmentAssertionInput)
  })
_sym_db.RegisterMessage(BgpSessionEstablishmentAssertionInput)

BgpSessionEstablishmentAssertionResult = _reflection.GeneratedProtocolMessageType('BgpSessionEstablishmentAssertionResult', (_message.Message,), {

  'Violator' : _reflection.GeneratedProtocolMessageType('Violator', (_message.Message,), {
    'DESCRIPTOR' : _BGPSESSIONESTABLISHMENTASSERTIONRESULT_VIOLATOR,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpSessionEstablishmentAssertionResult.Violator)
    })
  ,

  'ActiveConnectionFailure' : _reflection.GeneratedProtocolMessageType('ActiveConnectionFailure', (_message.Message,), {
    'DESCRIPTOR' : _BGPSESSIONESTABLISHMENTASSERTIONRESULT_ACTIVECONNECTIONFAILURE,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpSessionEstablishmentAssertionResult.ActiveConnectionFailure)
    })
  ,

  'ConnectionFailure' : _reflection.GeneratedProtocolMessageType('ConnectionFailure', (_message.Message,), {
    'DESCRIPTOR' : _BGPSESSIONESTABLISHMENTASSERTIONRESULT_CONNECTIONFAILURE,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpSessionEstablishmentAssertionResult.ConnectionFailure)
    })
  ,
  'DESCRIPTOR' : _BGPSESSIONESTABLISHMENTASSERTIONRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpSessionEstablishmentAssertionResult)
  })
_sym_db.RegisterMessage(BgpSessionEstablishmentAssertionResult)
_sym_db.RegisterMessage(BgpSessionEstablishmentAssertionResult.Violator)
_sym_db.RegisterMessage(BgpSessionEstablishmentAssertionResult.ActiveConnectionFailure)
_sym_db.RegisterMessage(BgpSessionEstablishmentAssertionResult.ConnectionFailure)

DuplicateBgpAsnAssertionInput = _reflection.GeneratedProtocolMessageType('DuplicateBgpAsnAssertionInput', (_message.Message,), {
  'DESCRIPTOR' : _DUPLICATEBGPASNASSERTIONINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DuplicateBgpAsnAssertionInput)
  })
_sym_db.RegisterMessage(DuplicateBgpAsnAssertionInput)

DuplicateBgpAsnAssertionResult = _reflection.GeneratedProtocolMessageType('DuplicateBgpAsnAssertionResult', (_message.Message,), {

  'Violator' : _reflection.GeneratedProtocolMessageType('Violator', (_message.Message,), {
    'DESCRIPTOR' : _DUPLICATEBGPASNASSERTIONRESULT_VIOLATOR,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DuplicateBgpAsnAssertionResult.Violator)
    })
  ,

  'ReuseAcrossNodes' : _reflection.GeneratedProtocolMessageType('ReuseAcrossNodes', (_message.Message,), {
    'DESCRIPTOR' : _DUPLICATEBGPASNASSERTIONRESULT_REUSEACROSSNODES,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DuplicateBgpAsnAssertionResult.ReuseAcrossNodes)
    })
  ,
  'DESCRIPTOR' : _DUPLICATEBGPASNASSERTIONRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DuplicateBgpAsnAssertionResult)
  })
_sym_db.RegisterMessage(DuplicateBgpAsnAssertionResult)
_sym_db.RegisterMessage(DuplicateBgpAsnAssertionResult.Violator)
_sym_db.RegisterMessage(DuplicateBgpAsnAssertionResult.ReuseAcrossNodes)

DuplicateBgpRouterIdAssertionInput = _reflection.GeneratedProtocolMessageType('DuplicateBgpRouterIdAssertionInput', (_message.Message,), {
  'DESCRIPTOR' : _DUPLICATEBGPROUTERIDASSERTIONINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DuplicateBgpRouterIdAssertionInput)
  })
_sym_db.RegisterMessage(DuplicateBgpRouterIdAssertionInput)

DuplicateBgpRouterIdAssertionResult = _reflection.GeneratedProtocolMessageType('DuplicateBgpRouterIdAssertionResult', (_message.Message,), {

  'Violator' : _reflection.GeneratedProtocolMessageType('Violator', (_message.Message,), {
    'DESCRIPTOR' : _DUPLICATEBGPROUTERIDASSERTIONRESULT_VIOLATOR,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DuplicateBgpRouterIdAssertionResult.Violator)
    })
  ,

  'AcrossProcesses' : _reflection.GeneratedProtocolMessageType('AcrossProcesses', (_message.Message,), {
    'DESCRIPTOR' : _DUPLICATEBGPROUTERIDASSERTIONRESULT_ACROSSPROCESSES,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DuplicateBgpRouterIdAssertionResult.AcrossProcesses)
    })
  ,

  'BgpProcess' : _reflection.GeneratedProtocolMessageType('BgpProcess', (_message.Message,), {
    'DESCRIPTOR' : _DUPLICATEBGPROUTERIDASSERTIONRESULT_BGPPROCESS,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DuplicateBgpRouterIdAssertionResult.BgpProcess)
    })
  ,
  'DESCRIPTOR' : _DUPLICATEBGPROUTERIDASSERTIONRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DuplicateBgpRouterIdAssertionResult)
  })
_sym_db.RegisterMessage(DuplicateBgpRouterIdAssertionResult)
_sym_db.RegisterMessage(DuplicateBgpRouterIdAssertionResult.Violator)
_sym_db.RegisterMessage(DuplicateBgpRouterIdAssertionResult.AcrossProcesses)
_sym_db.RegisterMessage(DuplicateBgpRouterIdAssertionResult.BgpProcess)

BgpPeeringEstablishmentAssertionInput = _reflection.GeneratedProtocolMessageType('BgpPeeringEstablishmentAssertionInput', (_message.Message,), {
  'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionInput)
  })
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionInput)

BgpPeeringEstablishmentAssertionResult = _reflection.GeneratedProtocolMessageType('BgpPeeringEstablishmentAssertionResult', (_message.Message,), {

  'Conformer' : _reflection.GeneratedProtocolMessageType('Conformer', (_message.Message,), {
    'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_CONFORMER,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.Conformer)
    })
  ,

  'NoViolations' : _reflection.GeneratedProtocolMessageType('NoViolations', (_message.Message,), {
    'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOVIOLATIONS,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoViolations)
    })
  ,

  'IgnoredViolations' : _reflection.GeneratedProtocolMessageType('IgnoredViolations', (_message.Message,), {
    'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_IGNOREDVIOLATIONS,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.IgnoredViolations)
    })
  ,

  'Violator' : _reflection.GeneratedProtocolMessageType('Violator', (_message.Message,), {
    'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_VIOLATOR,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.Violator)
    })
  ,

  'Violation' : _reflection.GeneratedProtocolMessageType('Violation', (_message.Message,), {
    'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_VIOLATION,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.Violation)
    })
  ,

  'NoLocalAs' : _reflection.GeneratedProtocolMessageType('NoLocalAs', (_message.Message,), {
    'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOLOCALAS,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoLocalAs)
    })
  ,

  'NoRemoteAs' : _reflection.GeneratedProtocolMessageType('NoRemoteAs', (_message.Message,), {
    'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREMOTEAS,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoRemoteAs)
    })
  ,

  'NoUsableLocalIp' : _reflection.GeneratedProtocolMessageType('NoUsableLocalIp', (_message.Message,), {
    'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOUSABLELOCALIP,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoUsableLocalIp)
    })
  ,

  'InvalidLocalIp' : _reflection.GeneratedProtocolMessageType('InvalidLocalIp', (_message.Message,), {
    'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_INVALIDLOCALIP,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.InvalidLocalIp)
    })
  ,

  'InactiveInterfaceLocalIp' : _reflection.GeneratedProtocolMessageType('InactiveInterfaceLocalIp', (_message.Message,), {
    'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_INACTIVEINTERFACELOCALIP,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.InactiveInterfaceLocalIp)
    })
  ,

  'OtherVrfLocalIp' : _reflection.GeneratedProtocolMessageType('OtherVrfLocalIp', (_message.Message,), {

    'OtherVrfInterface' : _reflection.GeneratedProtocolMessageType('OtherVrfInterface', (_message.Message,), {
      'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_OTHERVRFLOCALIP_OTHERVRFINTERFACE,
      '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
      # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.OtherVrfLocalIp.OtherVrfInterface)
      })
    ,
    'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_OTHERVRFLOCALIP,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.OtherVrfLocalIp)
    })
  ,

  'UnknownLocalIp' : _reflection.GeneratedProtocolMessageType('UnknownLocalIp', (_message.Message,), {
    'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_UNKNOWNLOCALIP,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.UnknownLocalIp)
    })
  ,

  'InactiveInterface' : _reflection.GeneratedProtocolMessageType('InactiveInterface', (_message.Message,), {
    'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_INACTIVEINTERFACE,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.InactiveInterface)
    })
  ,

  'NoRemoteIp' : _reflection.GeneratedProtocolMessageType('NoRemoteIp', (_message.Message,), {
    'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREMOTEIP,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoRemoteIp)
    })
  ,

  'NoRemotePrefix' : _reflection.GeneratedProtocolMessageType('NoRemotePrefix', (_message.Message,), {
    'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREMOTEPREFIX,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoRemotePrefix)
    })
  ,

  'InvalidRemotePrefix' : _reflection.GeneratedProtocolMessageType('InvalidRemotePrefix', (_message.Message,), {
    'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_INVALIDREMOTEPREFIX,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.InvalidRemotePrefix)
    })
  ,

  'UnknownRemoteDevice' : _reflection.GeneratedProtocolMessageType('UnknownRemoteDevice', (_message.Message,), {
    'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_UNKNOWNREMOTEDEVICE,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.UnknownRemoteDevice)
    })
  ,

  'InactiveRemoteInterface' : _reflection.GeneratedProtocolMessageType('InactiveRemoteInterface', (_message.Message,), {
    'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_INACTIVEREMOTEINTERFACE,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.InactiveRemoteInterface)
    })
  ,

  'NoCandidateListenerAtRemoteDevice' : _reflection.GeneratedProtocolMessageType('NoCandidateListenerAtRemoteDevice', (_message.Message,), {

    'RemoteDevice' : _reflection.GeneratedProtocolMessageType('RemoteDevice', (_message.Message,), {
      'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCANDIDATELISTENERATREMOTEDEVICE_REMOTEDEVICE,
      '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
      # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoCandidateListenerAtRemoteDevice.RemoteDevice)
      })
    ,
    'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCANDIDATELISTENERATREMOTEDEVICE,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoCandidateListenerAtRemoteDevice)
    })
  ,

  'MultipleSuccessfulListeners' : _reflection.GeneratedProtocolMessageType('MultipleSuccessfulListeners', (_message.Message,), {

    'SuccessfulListener' : _reflection.GeneratedProtocolMessageType('SuccessfulListener', (_message.Message,), {
      'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_MULTIPLESUCCESSFULLISTENERS_SUCCESSFULLISTENER,
      '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
      # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.MultipleSuccessfulListeners.SuccessfulListener)
      })
    ,
    'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_MULTIPLESUCCESSFULLISTENERS,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.MultipleSuccessfulListeners)
    })
  ,

  'NoReachableListener' : _reflection.GeneratedProtocolMessageType('NoReachableListener', (_message.Message,), {

    'UnreachableListener' : _reflection.GeneratedProtocolMessageType('UnreachableListener', (_message.Message,), {
      'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREACHABLELISTENER_UNREACHABLELISTENER,
      '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
      # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoReachableListener.UnreachableListener)
      })
    ,

    'ConnectionAttempt' : _reflection.GeneratedProtocolMessageType('ConnectionAttempt', (_message.Message,), {
      'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREACHABLELISTENER_CONNECTIONATTEMPT,
      '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
      # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoReachableListener.ConnectionAttempt)
      })
    ,
    'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREACHABLELISTENER,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoReachableListener)
    })
  ,

  'NoCompatibleListener' : _reflection.GeneratedProtocolMessageType('NoCompatibleListener', (_message.Message,), {

    'IncompatibleRemote' : _reflection.GeneratedProtocolMessageType('IncompatibleRemote', (_message.Message,), {
      'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER_INCOMPATIBLEREMOTE,
      '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
      # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoCompatibleListener.IncompatibleRemote)
      })
    ,

    'IncompatibleListener' : _reflection.GeneratedProtocolMessageType('IncompatibleListener', (_message.Message,), {
      'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER_INCOMPATIBLELISTENER,
      '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
      # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoCompatibleListener.IncompatibleListener)
      })
    ,

    'IncompatibleIpOrPrefix' : _reflection.GeneratedProtocolMessageType('IncompatibleIpOrPrefix', (_message.Message,), {
      'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER_INCOMPATIBLEIPORPREFIX,
      '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
      # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoCompatibleListener.IncompatibleIpOrPrefix)
      })
    ,

    'IncompatibleAs' : _reflection.GeneratedProtocolMessageType('IncompatibleAs', (_message.Message,), {
      'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER_INCOMPATIBLEAS,
      '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
      # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoCompatibleListener.IncompatibleAs)
      })
    ,
    'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoCompatibleListener)
    })
  ,

  'NoCompatibleInitiator' : _reflection.GeneratedProtocolMessageType('NoCompatibleInitiator', (_message.Message,), {
    'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLEINITIATOR,
    '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult.NoCompatibleInitiator)
    })
  ,
  'DESCRIPTOR' : _BGPPEERINGESTABLISHMENTASSERTIONRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.bgp_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.BgpPeeringEstablishmentAssertionResult)
  })
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.Conformer)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.NoViolations)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.IgnoredViolations)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.Violator)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.Violation)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.NoLocalAs)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.NoRemoteAs)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.NoUsableLocalIp)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.InvalidLocalIp)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.InactiveInterfaceLocalIp)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.OtherVrfLocalIp)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.OtherVrfLocalIp.OtherVrfInterface)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.UnknownLocalIp)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.InactiveInterface)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.NoRemoteIp)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.NoRemotePrefix)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.InvalidRemotePrefix)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.UnknownRemoteDevice)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.InactiveRemoteInterface)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.NoCandidateListenerAtRemoteDevice)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.NoCandidateListenerAtRemoteDevice.RemoteDevice)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.MultipleSuccessfulListeners)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.MultipleSuccessfulListeners.SuccessfulListener)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.NoReachableListener)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.NoReachableListener.UnreachableListener)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.NoReachableListener.ConnectionAttempt)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.NoCompatibleListener)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.NoCompatibleListener.IncompatibleRemote)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.NoCompatibleListener.IncompatibleListener)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.NoCompatibleListener.IncompatibleIpOrPrefix)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.NoCompatibleListener.IncompatibleAs)
_sym_db.RegisterMessage(BgpPeeringEstablishmentAssertionResult.NoCompatibleInitiator)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_VIOLATION.fields_by_name['invalid_local_ip']._options = None
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_VIOLATION.fields_by_name['invalid_local_ip']._serialized_options = b'\030\001'
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_VIOLATION.fields_by_name['no_candidate_listener_at_remote_device']._options = None
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_VIOLATION.fields_by_name['no_candidate_listener_at_remote_device']._serialized_options = b'\030\001'
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREACHABLELISTENER_UNREACHABLELISTENER.fields_by_name['flow']._options = None
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREACHABLELISTENER_UNREACHABLELISTENER.fields_by_name['flow']._serialized_options = b'\030\001'
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREACHABLELISTENER_UNREACHABLELISTENER.fields_by_name['failure_summary']._options = None
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREACHABLELISTENER_UNREACHABLELISTENER.fields_by_name['failure_summary']._serialized_options = b'\030\001'
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER.fields_by_name['listeners']._options = None
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER.fields_by_name['listeners']._serialized_options = b'\030\001'
  _BGPSESSIONESTABLISHMENTASSERTIONINPUT._serialized_start=411
  _BGPSESSIONESTABLISHMENTASSERTIONINPUT._serialized_end=450
  _BGPSESSIONESTABLISHMENTASSERTIONRESULT._serialized_start=453
  _BGPSESSIONESTABLISHMENTASSERTIONRESULT._serialized_end=1622
  _BGPSESSIONESTABLISHMENTASSERTIONRESULT_VIOLATOR._serialized_start=660
  _BGPSESSIONESTABLISHMENTASSERTIONRESULT_VIOLATOR._serialized_end=1001
  _BGPSESSIONESTABLISHMENTASSERTIONRESULT_ACTIVECONNECTIONFAILURE._serialized_start=1004
  _BGPSESSIONESTABLISHMENTASSERTIONRESULT_ACTIVECONNECTIONFAILURE._serialized_end=1259
  _BGPSESSIONESTABLISHMENTASSERTIONRESULT_CONNECTIONFAILURE._serialized_start=1262
  _BGPSESSIONESTABLISHMENTASSERTIONRESULT_CONNECTIONFAILURE._serialized_end=1622
  _BGPSESSIONESTABLISHMENTASSERTIONRESULT_CONNECTIONFAILURE_DIRECTION._serialized_start=1572
  _BGPSESSIONESTABLISHMENTASSERTIONRESULT_CONNECTIONFAILURE_DIRECTION._serialized_end=1622
  _DUPLICATEBGPASNASSERTIONINPUT._serialized_start=1624
  _DUPLICATEBGPASNASSERTIONINPUT._serialized_end=1735
  _DUPLICATEBGPASNASSERTIONRESULT._serialized_start=1738
  _DUPLICATEBGPASNASSERTIONRESULT._serialized_end=2308
  _DUPLICATEBGPASNASSERTIONRESULT_VIOLATOR._serialized_start=1929
  _DUPLICATEBGPASNASSERTIONRESULT_VIOLATOR._serialized_end=2227
  _DUPLICATEBGPASNASSERTIONRESULT_REUSEACROSSNODES._serialized_start=2229
  _DUPLICATEBGPASNASSERTIONRESULT_REUSEACROSSNODES._serialized_end=2308
  _DUPLICATEBGPROUTERIDASSERTIONINPUT._serialized_start=2311
  _DUPLICATEBGPROUTERIDASSERTIONINPUT._serialized_end=2495
  _DUPLICATEBGPROUTERIDASSERTIONRESULT._serialized_start=2498
  _DUPLICATEBGPROUTERIDASSERTIONRESULT._serialized_end=3266
  _DUPLICATEBGPROUTERIDASSERTIONRESULT_VIOLATOR._serialized_start=2699
  _DUPLICATEBGPROUTERIDASSERTIONRESULT_VIOLATOR._serialized_end=3006
  _DUPLICATEBGPROUTERIDASSERTIONRESULT_ACROSSPROCESSES._serialized_start=3009
  _DUPLICATEBGPROUTERIDASSERTIONRESULT_ACROSSPROCESSES._serialized_end=3143
  _DUPLICATEBGPROUTERIDASSERTIONRESULT_BGPPROCESS._serialized_start=3145
  _DUPLICATEBGPROUTERIDASSERTIONRESULT_BGPPROCESS._serialized_end=3266
  _BGPPEERINGESTABLISHMENTASSERTIONINPUT._serialized_start=3269
  _BGPPEERINGESTABLISHMENTASSERTIONINPUT._serialized_end=3755
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT._serialized_start=3758
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT._serialized_end=10760
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_CONFORMER._serialized_start=4026
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_CONFORMER._serialized_end=4406
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOVIOLATIONS._serialized_start=4408
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOVIOLATIONS._serialized_end=4511
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_IGNOREDVIOLATIONS._serialized_start=4513
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_IGNOREDVIOLATIONS._serialized_end=4579
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_VIOLATOR._serialized_start=4582
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_VIOLATOR._serialized_end=4803
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_VIOLATION._serialized_start=4806
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_VIOLATION._serialized_end=7424
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOLOCALAS._serialized_start=7426
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOLOCALAS._serialized_end=7437
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREMOTEAS._serialized_start=7439
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREMOTEAS._serialized_end=7451
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOUSABLELOCALIP._serialized_start=7453
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOUSABLELOCALIP._serialized_end=7470
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_INVALIDLOCALIP._serialized_start=7472
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_INVALIDLOCALIP._serialized_end=7546
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_INACTIVEINTERFACELOCALIP._serialized_start=7549
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_INACTIVEINTERFACELOCALIP._serialized_end=7703
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_OTHERVRFLOCALIP._serialized_start=7706
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_OTHERVRFLOCALIP._serialized_end=8078
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_OTHERVRFLOCALIP_OTHERVRFINTERFACE._serialized_start=7941
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_OTHERVRFLOCALIP_OTHERVRFINTERFACE._serialized_end=8078
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_UNKNOWNLOCALIP._serialized_start=8080
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_UNKNOWNLOCALIP._serialized_end=8154
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_INACTIVEINTERFACE._serialized_start=8156
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_INACTIVEINTERFACE._serialized_end=8175
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREMOTEIP._serialized_start=8177
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREMOTEIP._serialized_end=8189
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREMOTEPREFIX._serialized_start=8191
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREMOTEPREFIX._serialized_end=8207
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_INVALIDREMOTEPREFIX._serialized_start=8209
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_INVALIDREMOTEPREFIX._serialized_end=8230
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_UNKNOWNREMOTEDEVICE._serialized_start=8232
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_UNKNOWNREMOTEDEVICE._serialized_end=8253
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_INACTIVEREMOTEINTERFACE._serialized_start=8255
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_INACTIVEREMOTEINTERFACE._serialized_end=8350
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCANDIDATELISTENERATREMOTEDEVICE._serialized_start=8353
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCANDIDATELISTENERATREMOTEDEVICE._serialized_end=8643
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCANDIDATELISTENERATREMOTEDEVICE_REMOTEDEVICE._serialized_start=8536
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCANDIDATELISTENERATREMOTEDEVICE_REMOTEDEVICE._serialized_end=8643
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_MULTIPLESUCCESSFULLISTENERS._serialized_start=8646
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_MULTIPLESUCCESSFULLISTENERS._serialized_end=8910
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_MULTIPLESUCCESSFULLISTENERS_SUCCESSFULLISTENER._serialized_start=8827
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_MULTIPLESUCCESSFULLISTENERS_SUCCESSFULLISTENER._serialized_end=8910
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREACHABLELISTENER._serialized_start=8913
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREACHABLELISTENER._serialized_end=9588
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREACHABLELISTENER_UNREACHABLELISTENER._serialized_start=9080
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREACHABLELISTENER_UNREACHABLELISTENER._serialized_end=9449
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREACHABLELISTENER_CONNECTIONATTEMPT._serialized_start=9452
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOREACHABLELISTENER_CONNECTIONATTEMPT._serialized_end=9588
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER._serialized_start=9591
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER._serialized_end=10735
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER_INCOMPATIBLEREMOTE._serialized_start=9929
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER_INCOMPATIBLEREMOTE._serialized_end=10212
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER_INCOMPATIBLELISTENER._serialized_start=10215
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER_INCOMPATIBLELISTENER._serialized_end=10691
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER_INCOMPATIBLEIPORPREFIX._serialized_start=10693
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER_INCOMPATIBLEIPORPREFIX._serialized_end=10717
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER_INCOMPATIBLEAS._serialized_start=10719
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLELISTENER_INCOMPATIBLEAS._serialized_end=10735
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLEINITIATOR._serialized_start=10737
  _BGPPEERINGESTABLISHMENTASSERTIONRESULT_NOCOMPATIBLEINITIATOR._serialized_end=10760
# @@protoc_insertion_point(module_scope)
