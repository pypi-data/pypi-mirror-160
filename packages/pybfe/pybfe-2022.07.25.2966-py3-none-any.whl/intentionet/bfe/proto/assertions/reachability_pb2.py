# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: intentionet/bfe/proto/assertions/reachability.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from intentionet.bfe.proto.assertions import flow_pb2 as intentionet_dot_bfe_dot_proto_dot_assertions_dot_flow__pb2
from intentionet.bfe.proto.assertions import parameters_pb2 as intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2
from intentionet.bfe.proto.assertions import violations_pb2 as intentionet_dot_bfe_dot_proto_dot_assertions_dot_violations__pb2
from intentionet.bfe.proto.datamodel import range_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_range__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n3intentionet/bfe/proto/assertions/reachability.proto\x12\x1e\x63om.intentionet.bfe.assertions\x1a+intentionet/bfe/proto/assertions/flow.proto\x1a\x31intentionet/bfe/proto/assertions/parameters.proto\x1a\x31intentionet/bfe/proto/assertions/violations.proto\x1a+intentionet/bfe/proto/datamodel/range.proto\"\x87\x02\n\"ServiceAccessibilityAssertionInput\x12\x46\n\x06source\x18\x01 \x01(\x0b\x32*.com.intentionet.bfe.assertions.SourceExprB\x02\x18\x01R\x06source\x12G\n\x08services\x18\x02 \x03(\x0b\x32+.com.intentionet.bfe.assertions.ServiceExprR\x08services\x12P\n\rsource_groups\x18\x03 \x03(\x0b\x32+.com.intentionet.bfe.assertions.SourceGroupR\x0csourceGroups\"\xd7\x0f\n#ServiceAccessibilityAssertionResult\x12j\n\tviolators\x18\x01 \x03(\x0b\x32L.com.intentionet.bfe.assertions.ServiceAccessibilityAssertionResult.ViolatorR\tviolators\x12\x33\n\x15violator_descriptions\x18\x02 \x03(\tR\x14violatorDescriptions\x12m\n\nconformers\x18\x03 \x03(\x0b\x32M.com.intentionet.bfe.assertions.ServiceAccessibilityAssertionResult.ConformerR\nconformers\x1a\x8f\x05\n\x08Violator\x12!\n\x0cservice_name\x18\x01 \x01(\tR\x0bserviceName\x12]\n\x11\x64\x65scription_index\x18\x02 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DescriptionIndexR\x10\x64\x65scriptionIndex\x12x\n\x0e\x61ll_flows_fail\x18\x03 \x01(\x0b\x32P.com.intentionet.bfe.assertions.ServiceAccessibilityAssertionResult.AllFlowsFailH\x00R\x0c\x61llFlowsFail\x12\x81\x01\n\x11some_sources_fail\x18\x06 \x01(\x0b\x32S.com.intentionet.bfe.assertions.ServiceAccessibilityAssertionResult.SomeSourcesFailH\x00R\x0fsomeSourcesFail\x12{\n\x0fsome_flows_fail\x18\x04 \x01(\x0b\x32Q.com.intentionet.bfe.assertions.ServiceAccessibilityAssertionResult.SomeFlowsFailH\x00R\rsomeFlowsFail\x12{\n\x0fsome_paths_fail\x18\x05 \x01(\x0b\x32Q.com.intentionet.bfe.assertions.ServiceAccessibilityAssertionResult.SomePathsFailH\x00R\rsomePathsFailB\t\n\x07problem\x1a\xa3\x01\n\tConformer\x12!\n\x0cservice_name\x18\x01 \x01(\tR\x0bserviceName\x12J\n\x04\x66low\x18\x02 \x01(\x0b\x32\x36.com.intentionet.bfe.assertions.TracerouteParamsOrFlowR\x04\x66low\x12\'\n\x0fsuccess_summary\x18\x03 \x01(\tR\x0esuccessSummary\x1a\x86\x01\n\x0c\x41llFlowsFail\x12S\n\tfail_flow\x18\x01 \x01(\x0b\x32\x36.com.intentionet.bfe.assertions.TracerouteParamsOrFlowR\x08\x66\x61ilFlow\x12!\n\x0c\x66\x61il_summary\x18\x02 \x01(\tR\x0b\x66\x61ilSummary\x1a\x8d\x02\n\x0fSomeSourcesFail\x12S\n\tfail_flow\x18\x01 \x01(\x0b\x32\x36.com.intentionet.bfe.assertions.TracerouteParamsOrFlowR\x08\x66\x61ilFlow\x12!\n\x0c\x66\x61il_summary\x18\x02 \x01(\tR\x0b\x66\x61ilSummary\x12Y\n\x0csuccess_flow\x18\x03 \x01(\x0b\x32\x36.com.intentionet.bfe.assertions.TracerouteParamsOrFlowR\x0bsuccessFlow\x12\'\n\x0fsuccess_summary\x18\x04 \x01(\tR\x0esuccessSummary\x1a\x8b\x02\n\rSomeFlowsFail\x12S\n\tfail_flow\x18\x01 \x01(\x0b\x32\x36.com.intentionet.bfe.assertions.TracerouteParamsOrFlowR\x08\x66\x61ilFlow\x12!\n\x0c\x66\x61il_summary\x18\x02 \x01(\tR\x0b\x66\x61ilSummary\x12Y\n\x0csuccess_flow\x18\x03 \x01(\x0b\x32\x36.com.intentionet.bfe.assertions.TracerouteParamsOrFlowR\x0bsuccessFlow\x12\'\n\x0fsuccess_summary\x18\x04 \x01(\tR\x0esuccessSummary\x1a\xc0\x01\n\rSomePathsFail\x12\x63\n\x11inconsistent_flow\x18\x01 \x01(\x0b\x32\x36.com.intentionet.bfe.assertions.TracerouteParamsOrFlowR\x10inconsistentFlow\x12!\n\x0c\x66\x61il_summary\x18\x02 \x01(\tR\x0b\x66\x61ilSummary\x12\'\n\x0fsuccess_summary\x18\x03 \x01(\tR\x0esuccessSummary\"\x84\x02\n\x1fServiceProtectionAssertionInput\x12\x46\n\x06source\x18\x01 \x01(\x0b\x32*.com.intentionet.bfe.assertions.SourceExprB\x02\x18\x01R\x06source\x12G\n\x08services\x18\x02 \x03(\x0b\x32+.com.intentionet.bfe.assertions.ServiceExprR\x08services\x12P\n\rsource_groups\x18\x03 \x03(\x0b\x32+.com.intentionet.bfe.assertions.SourceGroupR\x0csourceGroups\"\x9e\x10\n ServiceProtectionAssertionResult\x12g\n\tviolators\x18\x01 \x03(\x0b\x32I.com.intentionet.bfe.assertions.ServiceProtectionAssertionResult.ViolatorR\tviolators\x12\x33\n\x15violator_descriptions\x18\x02 \x03(\tR\x14violatorDescriptions\x12j\n\nconformers\x18\x03 \x03(\x0b\x32J.com.intentionet.bfe.assertions.ServiceProtectionAssertionResult.ConformerR\nconformers\x1a\xa9\x05\n\x08Violator\x12!\n\x0cservice_name\x18\x01 \x01(\tR\x0bserviceName\x12]\n\x11\x64\x65scription_index\x18\x02 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DescriptionIndexR\x10\x64\x65scriptionIndex\x12~\n\x11\x61ll_flows_allowed\x18\x03 \x01(\x0b\x32P.com.intentionet.bfe.assertions.ServiceProtectionAssertionResult.AllFlowsAllowedH\x00R\x0f\x61llFlowsAllowed\x12\x87\x01\n\x14some_sources_allowed\x18\x06 \x01(\x0b\x32S.com.intentionet.bfe.assertions.ServiceProtectionAssertionResult.SomeSourcesAllowedH\x00R\x12someSourcesAllowed\x12\x81\x01\n\x12some_flows_allowed\x18\x04 \x01(\x0b\x32Q.com.intentionet.bfe.assertions.ServiceProtectionAssertionResult.SomeFlowsAllowedH\x00R\x10someFlowsAllowed\x12\x81\x01\n\x12some_paths_allowed\x18\x05 \x01(\x0b\x32Q.com.intentionet.bfe.assertions.ServiceProtectionAssertionResult.SomePathsAllowedH\x00R\x10somePathsAllowedB\t\n\x07problem\x1a\xa3\x01\n\tConformer\x12!\n\x0cservice_name\x18\x01 \x01(\tR\x0bserviceName\x12J\n\x04\x66low\x18\x02 \x01(\x0b\x32\x36.com.intentionet.bfe.assertions.TracerouteParamsOrFlowR\x04\x66low\x12\'\n\x0f\x62locked_summary\x18\x03 \x01(\tR\x0e\x62lockedSummary\x1a\x95\x01\n\x0f\x41llFlowsAllowed\x12Y\n\x0c\x61llowed_flow\x18\x01 \x01(\x0b\x32\x36.com.intentionet.bfe.assertions.TracerouteParamsOrFlowR\x0b\x61llowedFlow\x12\'\n\x0f\x61llowed_summary\x18\x03 \x01(\tR\x0e\x61llowedSummary\x1a\x9c\x02\n\x12SomeSourcesAllowed\x12Y\n\x0c\x61llowed_flow\x18\x01 \x01(\x0b\x32\x36.com.intentionet.bfe.assertions.TracerouteParamsOrFlowR\x0b\x61llowedFlow\x12\'\n\x0f\x61llowed_summary\x18\x02 \x01(\tR\x0e\x61llowedSummary\x12Y\n\x0c\x62locked_flow\x18\x03 \x01(\x0b\x32\x36.com.intentionet.bfe.assertions.TracerouteParamsOrFlowR\x0b\x62lockedFlow\x12\'\n\x0f\x62locked_summary\x18\x04 \x01(\tR\x0e\x62lockedSummary\x1a\x9a\x02\n\x10SomeFlowsAllowed\x12Y\n\x0c\x61llowed_flow\x18\x01 \x01(\x0b\x32\x36.com.intentionet.bfe.assertions.TracerouteParamsOrFlowR\x0b\x61llowedFlow\x12\'\n\x0f\x61llowed_summary\x18\x02 \x01(\tR\x0e\x61llowedSummary\x12Y\n\x0c\x62locked_flow\x18\x03 \x01(\x0b\x32\x36.com.intentionet.bfe.assertions.TracerouteParamsOrFlowR\x0b\x62lockedFlow\x12\'\n\x0f\x62locked_summary\x18\x04 \x01(\tR\x0e\x62lockedSummary\x1a\xc9\x01\n\x10SomePathsAllowed\x12\x63\n\x11inconsistent_flow\x18\x01 \x01(\x0b\x32\x36.com.intentionet.bfe.assertions.TracerouteParamsOrFlowR\x10inconsistentFlow\x12\'\n\x0f\x62locked_summary\x18\x02 \x01(\tR\x0e\x62lockedSummary\x12\'\n\x0f\x61llowed_summary\x18\x03 \x01(\tR\x0e\x61llowedSummary\"\xe8\x01\n\x0bSourceGroup\x12G\n\tlocations\x18\x01 \x01(\x0b\x32).com.intentionet.bfe.assertions.LocationsR\tlocations\x12H\n\nsource_ips\x18\x02 \x01(\x0b\x32).com.intentionet.bfe.assertions.SourceIpsR\tsourceIps\x12\x46\n\x0csource_ports\x18\x03 \x03(\x0b\x32#.com.intentionet.datamodel.IntRangeR\x0bsourcePorts\"\x9d\x01\n\tLocations\x12I\n\toriginate\x18\x01 \x01(\x0b\x32).com.intentionet.bfe.assertions.OriginateH\x00R\toriginate\x12=\n\x05\x65nter\x18\x02 \x01(\x0b\x32%.com.intentionet.bfe.assertions.EnterH\x00R\x05\x65nterB\x06\n\x04type\"`\n\tOriginate\x12S\n\ninterfaces\x18\x01 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.InterfaceFilterExprR\ninterfaces\"\\\n\x05\x45nter\x12S\n\ninterfaces\x18\x01 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.InterfaceFilterExprR\ninterfaces\"\xa9\x01\n\tSourceIps\x12M\n\x07include\x18\x01 \x03(\x0b\x32\x33.com.intentionet.bfe.assertions.IpAddressFilterExprR\x07include\x12M\n\x07\x65xclude\x18\x02 \x03(\x0b\x32\x33.com.intentionet.bfe.assertions.IpAddressFilterExprR\x07\x65xclude\"\xe5\x01\n\x0bServiceExpr\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12R\n\nservice_ip\x18\x02 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.IpAddressFilterExprR\tserviceIp\x12T\n\x0bservice_ips\x18\x04 \x03(\x0b\x32\x33.com.intentionet.bfe.assertions.IpAddressFilterExprR\nserviceIps\x12\x12\n\x04\x61pps\x18\x05 \x03(\tR\x04\x61ppsJ\x04\x08\x03\x10\x04\"\xe8\x01\n\nSourceExpr\x12H\n\x08location\x18\x01 \x01(\x0b\x32,.com.intentionet.bfe.assertions.LocationExprR\x08location\x12H\n\nsource_ips\x18\x02 \x01(\x0b\x32).com.intentionet.bfe.assertions.SourceIpsR\tsourceIps\x12\x46\n\x0csource_ports\x18\x03 \x03(\x0b\x32#.com.intentionet.datamodel.IntRangeR\x0bsourcePorts\"\xf7\x01\n\x0cLocationExpr\x12\x66\n\x12interface_location\x18\x01 \x01(\x0b\x32\x35.com.intentionet.bfe.assertions.InterfaceLocationExprH\x00R\x11interfaceLocation\x12s\n\x17interface_link_location\x18\x02 \x01(\x0b\x32\x39.com.intentionet.bfe.assertions.InterfaceLinkLocationExprH\x00R\x15interfaceLinkLocationB\n\n\x08location\"d\n\x15InterfaceLocationExpr\x12K\n\tinterface\x18\x01 \x01(\x0b\x32-.com.intentionet.bfe.assertions.InterfaceExprR\tinterface\"h\n\x19InterfaceLinkLocationExpr\x12K\n\tinterface\x18\x01 \x01(\x0b\x32-.com.intentionet.bfe.assertions.InterfaceExprR\tinterfaceb\x06proto3')



_SERVICEACCESSIBILITYASSERTIONINPUT = DESCRIPTOR.message_types_by_name['ServiceAccessibilityAssertionInput']
_SERVICEACCESSIBILITYASSERTIONRESULT = DESCRIPTOR.message_types_by_name['ServiceAccessibilityAssertionResult']
_SERVICEACCESSIBILITYASSERTIONRESULT_VIOLATOR = _SERVICEACCESSIBILITYASSERTIONRESULT.nested_types_by_name['Violator']
_SERVICEACCESSIBILITYASSERTIONRESULT_CONFORMER = _SERVICEACCESSIBILITYASSERTIONRESULT.nested_types_by_name['Conformer']
_SERVICEACCESSIBILITYASSERTIONRESULT_ALLFLOWSFAIL = _SERVICEACCESSIBILITYASSERTIONRESULT.nested_types_by_name['AllFlowsFail']
_SERVICEACCESSIBILITYASSERTIONRESULT_SOMESOURCESFAIL = _SERVICEACCESSIBILITYASSERTIONRESULT.nested_types_by_name['SomeSourcesFail']
_SERVICEACCESSIBILITYASSERTIONRESULT_SOMEFLOWSFAIL = _SERVICEACCESSIBILITYASSERTIONRESULT.nested_types_by_name['SomeFlowsFail']
_SERVICEACCESSIBILITYASSERTIONRESULT_SOMEPATHSFAIL = _SERVICEACCESSIBILITYASSERTIONRESULT.nested_types_by_name['SomePathsFail']
_SERVICEPROTECTIONASSERTIONINPUT = DESCRIPTOR.message_types_by_name['ServiceProtectionAssertionInput']
_SERVICEPROTECTIONASSERTIONRESULT = DESCRIPTOR.message_types_by_name['ServiceProtectionAssertionResult']
_SERVICEPROTECTIONASSERTIONRESULT_VIOLATOR = _SERVICEPROTECTIONASSERTIONRESULT.nested_types_by_name['Violator']
_SERVICEPROTECTIONASSERTIONRESULT_CONFORMER = _SERVICEPROTECTIONASSERTIONRESULT.nested_types_by_name['Conformer']
_SERVICEPROTECTIONASSERTIONRESULT_ALLFLOWSALLOWED = _SERVICEPROTECTIONASSERTIONRESULT.nested_types_by_name['AllFlowsAllowed']
_SERVICEPROTECTIONASSERTIONRESULT_SOMESOURCESALLOWED = _SERVICEPROTECTIONASSERTIONRESULT.nested_types_by_name['SomeSourcesAllowed']
_SERVICEPROTECTIONASSERTIONRESULT_SOMEFLOWSALLOWED = _SERVICEPROTECTIONASSERTIONRESULT.nested_types_by_name['SomeFlowsAllowed']
_SERVICEPROTECTIONASSERTIONRESULT_SOMEPATHSALLOWED = _SERVICEPROTECTIONASSERTIONRESULT.nested_types_by_name['SomePathsAllowed']
_SOURCEGROUP = DESCRIPTOR.message_types_by_name['SourceGroup']
_LOCATIONS = DESCRIPTOR.message_types_by_name['Locations']
_ORIGINATE = DESCRIPTOR.message_types_by_name['Originate']
_ENTER = DESCRIPTOR.message_types_by_name['Enter']
_SOURCEIPS = DESCRIPTOR.message_types_by_name['SourceIps']
_SERVICEEXPR = DESCRIPTOR.message_types_by_name['ServiceExpr']
_SOURCEEXPR = DESCRIPTOR.message_types_by_name['SourceExpr']
_LOCATIONEXPR = DESCRIPTOR.message_types_by_name['LocationExpr']
_INTERFACELOCATIONEXPR = DESCRIPTOR.message_types_by_name['InterfaceLocationExpr']
_INTERFACELINKLOCATIONEXPR = DESCRIPTOR.message_types_by_name['InterfaceLinkLocationExpr']
ServiceAccessibilityAssertionInput = _reflection.GeneratedProtocolMessageType('ServiceAccessibilityAssertionInput', (_message.Message,), {
  'DESCRIPTOR' : _SERVICEACCESSIBILITYASSERTIONINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.ServiceAccessibilityAssertionInput)
  })
_sym_db.RegisterMessage(ServiceAccessibilityAssertionInput)

ServiceAccessibilityAssertionResult = _reflection.GeneratedProtocolMessageType('ServiceAccessibilityAssertionResult', (_message.Message,), {

  'Violator' : _reflection.GeneratedProtocolMessageType('Violator', (_message.Message,), {
    'DESCRIPTOR' : _SERVICEACCESSIBILITYASSERTIONRESULT_VIOLATOR,
    '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.ServiceAccessibilityAssertionResult.Violator)
    })
  ,

  'Conformer' : _reflection.GeneratedProtocolMessageType('Conformer', (_message.Message,), {
    'DESCRIPTOR' : _SERVICEACCESSIBILITYASSERTIONRESULT_CONFORMER,
    '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.ServiceAccessibilityAssertionResult.Conformer)
    })
  ,

  'AllFlowsFail' : _reflection.GeneratedProtocolMessageType('AllFlowsFail', (_message.Message,), {
    'DESCRIPTOR' : _SERVICEACCESSIBILITYASSERTIONRESULT_ALLFLOWSFAIL,
    '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.ServiceAccessibilityAssertionResult.AllFlowsFail)
    })
  ,

  'SomeSourcesFail' : _reflection.GeneratedProtocolMessageType('SomeSourcesFail', (_message.Message,), {
    'DESCRIPTOR' : _SERVICEACCESSIBILITYASSERTIONRESULT_SOMESOURCESFAIL,
    '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.ServiceAccessibilityAssertionResult.SomeSourcesFail)
    })
  ,

  'SomeFlowsFail' : _reflection.GeneratedProtocolMessageType('SomeFlowsFail', (_message.Message,), {
    'DESCRIPTOR' : _SERVICEACCESSIBILITYASSERTIONRESULT_SOMEFLOWSFAIL,
    '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.ServiceAccessibilityAssertionResult.SomeFlowsFail)
    })
  ,

  'SomePathsFail' : _reflection.GeneratedProtocolMessageType('SomePathsFail', (_message.Message,), {
    'DESCRIPTOR' : _SERVICEACCESSIBILITYASSERTIONRESULT_SOMEPATHSFAIL,
    '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.ServiceAccessibilityAssertionResult.SomePathsFail)
    })
  ,
  'DESCRIPTOR' : _SERVICEACCESSIBILITYASSERTIONRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.ServiceAccessibilityAssertionResult)
  })
_sym_db.RegisterMessage(ServiceAccessibilityAssertionResult)
_sym_db.RegisterMessage(ServiceAccessibilityAssertionResult.Violator)
_sym_db.RegisterMessage(ServiceAccessibilityAssertionResult.Conformer)
_sym_db.RegisterMessage(ServiceAccessibilityAssertionResult.AllFlowsFail)
_sym_db.RegisterMessage(ServiceAccessibilityAssertionResult.SomeSourcesFail)
_sym_db.RegisterMessage(ServiceAccessibilityAssertionResult.SomeFlowsFail)
_sym_db.RegisterMessage(ServiceAccessibilityAssertionResult.SomePathsFail)

ServiceProtectionAssertionInput = _reflection.GeneratedProtocolMessageType('ServiceProtectionAssertionInput', (_message.Message,), {
  'DESCRIPTOR' : _SERVICEPROTECTIONASSERTIONINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.ServiceProtectionAssertionInput)
  })
_sym_db.RegisterMessage(ServiceProtectionAssertionInput)

ServiceProtectionAssertionResult = _reflection.GeneratedProtocolMessageType('ServiceProtectionAssertionResult', (_message.Message,), {

  'Violator' : _reflection.GeneratedProtocolMessageType('Violator', (_message.Message,), {
    'DESCRIPTOR' : _SERVICEPROTECTIONASSERTIONRESULT_VIOLATOR,
    '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.ServiceProtectionAssertionResult.Violator)
    })
  ,

  'Conformer' : _reflection.GeneratedProtocolMessageType('Conformer', (_message.Message,), {
    'DESCRIPTOR' : _SERVICEPROTECTIONASSERTIONRESULT_CONFORMER,
    '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.ServiceProtectionAssertionResult.Conformer)
    })
  ,

  'AllFlowsAllowed' : _reflection.GeneratedProtocolMessageType('AllFlowsAllowed', (_message.Message,), {
    'DESCRIPTOR' : _SERVICEPROTECTIONASSERTIONRESULT_ALLFLOWSALLOWED,
    '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.ServiceProtectionAssertionResult.AllFlowsAllowed)
    })
  ,

  'SomeSourcesAllowed' : _reflection.GeneratedProtocolMessageType('SomeSourcesAllowed', (_message.Message,), {
    'DESCRIPTOR' : _SERVICEPROTECTIONASSERTIONRESULT_SOMESOURCESALLOWED,
    '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.ServiceProtectionAssertionResult.SomeSourcesAllowed)
    })
  ,

  'SomeFlowsAllowed' : _reflection.GeneratedProtocolMessageType('SomeFlowsAllowed', (_message.Message,), {
    'DESCRIPTOR' : _SERVICEPROTECTIONASSERTIONRESULT_SOMEFLOWSALLOWED,
    '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.ServiceProtectionAssertionResult.SomeFlowsAllowed)
    })
  ,

  'SomePathsAllowed' : _reflection.GeneratedProtocolMessageType('SomePathsAllowed', (_message.Message,), {
    'DESCRIPTOR' : _SERVICEPROTECTIONASSERTIONRESULT_SOMEPATHSALLOWED,
    '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.ServiceProtectionAssertionResult.SomePathsAllowed)
    })
  ,
  'DESCRIPTOR' : _SERVICEPROTECTIONASSERTIONRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.ServiceProtectionAssertionResult)
  })
_sym_db.RegisterMessage(ServiceProtectionAssertionResult)
_sym_db.RegisterMessage(ServiceProtectionAssertionResult.Violator)
_sym_db.RegisterMessage(ServiceProtectionAssertionResult.Conformer)
_sym_db.RegisterMessage(ServiceProtectionAssertionResult.AllFlowsAllowed)
_sym_db.RegisterMessage(ServiceProtectionAssertionResult.SomeSourcesAllowed)
_sym_db.RegisterMessage(ServiceProtectionAssertionResult.SomeFlowsAllowed)
_sym_db.RegisterMessage(ServiceProtectionAssertionResult.SomePathsAllowed)

SourceGroup = _reflection.GeneratedProtocolMessageType('SourceGroup', (_message.Message,), {
  'DESCRIPTOR' : _SOURCEGROUP,
  '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SourceGroup)
  })
_sym_db.RegisterMessage(SourceGroup)

Locations = _reflection.GeneratedProtocolMessageType('Locations', (_message.Message,), {
  'DESCRIPTOR' : _LOCATIONS,
  '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.Locations)
  })
_sym_db.RegisterMessage(Locations)

Originate = _reflection.GeneratedProtocolMessageType('Originate', (_message.Message,), {
  'DESCRIPTOR' : _ORIGINATE,
  '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.Originate)
  })
_sym_db.RegisterMessage(Originate)

Enter = _reflection.GeneratedProtocolMessageType('Enter', (_message.Message,), {
  'DESCRIPTOR' : _ENTER,
  '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.Enter)
  })
_sym_db.RegisterMessage(Enter)

SourceIps = _reflection.GeneratedProtocolMessageType('SourceIps', (_message.Message,), {
  'DESCRIPTOR' : _SOURCEIPS,
  '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SourceIps)
  })
_sym_db.RegisterMessage(SourceIps)

ServiceExpr = _reflection.GeneratedProtocolMessageType('ServiceExpr', (_message.Message,), {
  'DESCRIPTOR' : _SERVICEEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.ServiceExpr)
  })
_sym_db.RegisterMessage(ServiceExpr)

SourceExpr = _reflection.GeneratedProtocolMessageType('SourceExpr', (_message.Message,), {
  'DESCRIPTOR' : _SOURCEEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SourceExpr)
  })
_sym_db.RegisterMessage(SourceExpr)

LocationExpr = _reflection.GeneratedProtocolMessageType('LocationExpr', (_message.Message,), {
  'DESCRIPTOR' : _LOCATIONEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.LocationExpr)
  })
_sym_db.RegisterMessage(LocationExpr)

InterfaceLocationExpr = _reflection.GeneratedProtocolMessageType('InterfaceLocationExpr', (_message.Message,), {
  'DESCRIPTOR' : _INTERFACELOCATIONEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.InterfaceLocationExpr)
  })
_sym_db.RegisterMessage(InterfaceLocationExpr)

InterfaceLinkLocationExpr = _reflection.GeneratedProtocolMessageType('InterfaceLinkLocationExpr', (_message.Message,), {
  'DESCRIPTOR' : _INTERFACELINKLOCATIONEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.reachability_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.InterfaceLinkLocationExpr)
  })
_sym_db.RegisterMessage(InterfaceLinkLocationExpr)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _SERVICEACCESSIBILITYASSERTIONINPUT.fields_by_name['source']._options = None
  _SERVICEACCESSIBILITYASSERTIONINPUT.fields_by_name['source']._serialized_options = b'\030\001'
  _SERVICEPROTECTIONASSERTIONINPUT.fields_by_name['source']._options = None
  _SERVICEPROTECTIONASSERTIONINPUT.fields_by_name['source']._serialized_options = b'\030\001'
  _SERVICEACCESSIBILITYASSERTIONINPUT._serialized_start=280
  _SERVICEACCESSIBILITYASSERTIONINPUT._serialized_end=543
  _SERVICEACCESSIBILITYASSERTIONRESULT._serialized_start=546
  _SERVICEACCESSIBILITYASSERTIONRESULT._serialized_end=2553
  _SERVICEACCESSIBILITYASSERTIONRESULT_VIOLATOR._serialized_start=858
  _SERVICEACCESSIBILITYASSERTIONRESULT_VIOLATOR._serialized_end=1513
  _SERVICEACCESSIBILITYASSERTIONRESULT_CONFORMER._serialized_start=1516
  _SERVICEACCESSIBILITYASSERTIONRESULT_CONFORMER._serialized_end=1679
  _SERVICEACCESSIBILITYASSERTIONRESULT_ALLFLOWSFAIL._serialized_start=1682
  _SERVICEACCESSIBILITYASSERTIONRESULT_ALLFLOWSFAIL._serialized_end=1816
  _SERVICEACCESSIBILITYASSERTIONRESULT_SOMESOURCESFAIL._serialized_start=1819
  _SERVICEACCESSIBILITYASSERTIONRESULT_SOMESOURCESFAIL._serialized_end=2088
  _SERVICEACCESSIBILITYASSERTIONRESULT_SOMEFLOWSFAIL._serialized_start=2091
  _SERVICEACCESSIBILITYASSERTIONRESULT_SOMEFLOWSFAIL._serialized_end=2358
  _SERVICEACCESSIBILITYASSERTIONRESULT_SOMEPATHSFAIL._serialized_start=2361
  _SERVICEACCESSIBILITYASSERTIONRESULT_SOMEPATHSFAIL._serialized_end=2553
  _SERVICEPROTECTIONASSERTIONINPUT._serialized_start=2556
  _SERVICEPROTECTIONASSERTIONINPUT._serialized_end=2816
  _SERVICEPROTECTIONASSERTIONRESULT._serialized_start=2819
  _SERVICEPROTECTIONASSERTIONRESULT._serialized_end=4897
  _SERVICEPROTECTIONASSERTIONRESULT_VIOLATOR._serialized_start=3122
  _SERVICEPROTECTIONASSERTIONRESULT_VIOLATOR._serialized_end=3803
  _SERVICEPROTECTIONASSERTIONRESULT_CONFORMER._serialized_start=3806
  _SERVICEPROTECTIONASSERTIONRESULT_CONFORMER._serialized_end=3969
  _SERVICEPROTECTIONASSERTIONRESULT_ALLFLOWSALLOWED._serialized_start=3972
  _SERVICEPROTECTIONASSERTIONRESULT_ALLFLOWSALLOWED._serialized_end=4121
  _SERVICEPROTECTIONASSERTIONRESULT_SOMESOURCESALLOWED._serialized_start=4124
  _SERVICEPROTECTIONASSERTIONRESULT_SOMESOURCESALLOWED._serialized_end=4408
  _SERVICEPROTECTIONASSERTIONRESULT_SOMEFLOWSALLOWED._serialized_start=4411
  _SERVICEPROTECTIONASSERTIONRESULT_SOMEFLOWSALLOWED._serialized_end=4693
  _SERVICEPROTECTIONASSERTIONRESULT_SOMEPATHSALLOWED._serialized_start=4696
  _SERVICEPROTECTIONASSERTIONRESULT_SOMEPATHSALLOWED._serialized_end=4897
  _SOURCEGROUP._serialized_start=4900
  _SOURCEGROUP._serialized_end=5132
  _LOCATIONS._serialized_start=5135
  _LOCATIONS._serialized_end=5292
  _ORIGINATE._serialized_start=5294
  _ORIGINATE._serialized_end=5390
  _ENTER._serialized_start=5392
  _ENTER._serialized_end=5484
  _SOURCEIPS._serialized_start=5487
  _SOURCEIPS._serialized_end=5656
  _SERVICEEXPR._serialized_start=5659
  _SERVICEEXPR._serialized_end=5888
  _SOURCEEXPR._serialized_start=5891
  _SOURCEEXPR._serialized_end=6123
  _LOCATIONEXPR._serialized_start=6126
  _LOCATIONEXPR._serialized_end=6373
  _INTERFACELOCATIONEXPR._serialized_start=6375
  _INTERFACELOCATIONEXPR._serialized_end=6475
  _INTERFACELINKLOCATIONEXPR._serialized_start=6477
  _INTERFACELINKLOCATIONEXPR._serialized_end=6581
# @@protoc_insertion_point(module_scope)
