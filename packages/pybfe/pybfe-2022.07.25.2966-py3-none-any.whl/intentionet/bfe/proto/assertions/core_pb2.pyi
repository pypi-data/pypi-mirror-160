"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import intentionet.bfe.proto.assertions.bgp_pb2
import intentionet.bfe.proto.assertions.filters_pb2
import intentionet.bfe.proto.assertions.isis_pb2
import intentionet.bfe.proto.assertions.mlag_pb2
import intentionet.bfe.proto.assertions.ospf_pb2
import intentionet.bfe.proto.assertions.parameters_pb2
import intentionet.bfe.proto.assertions.reachability_pb2
import intentionet.bfe.proto.assertions.reference_pb2
import intentionet.bfe.proto.assertions.route_pb2
import intentionet.bfe.proto.assertions.snmp_pb2
import intentionet.bfe.proto.assertions.text_pb2
import intentionet.bfe.proto.assertions.traceroute_pb2
import intentionet.bfe.proto.assertions.violations_pb2
import intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2
import intentionet.bfe.proto.datamodel.bgp_pb2
import intentionet.bfe.proto.datamodel.device_pb2
import intentionet.bfe.proto.datamodel.flow_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _AssertionStatus:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _AssertionStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AssertionStatus.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ASSERTION_STATUS_UNKNOWN: _AssertionStatus.ValueType  # 0
    ASSERTION_STATUS_PASS: _AssertionStatus.ValueType  # 1
    ASSERTION_STATUS_FAIL: _AssertionStatus.ValueType  # 2
    ASSERTION_STATUS_ERROR: _AssertionStatus.ValueType  # 3
    ASSERTION_STATUS_PASS_WARN: _AssertionStatus.ValueType  # 4
class AssertionStatus(_AssertionStatus, metaclass=_AssertionStatusEnumTypeWrapper):
    pass

ASSERTION_STATUS_UNKNOWN: AssertionStatus.ValueType  # 0
ASSERTION_STATUS_PASS: AssertionStatus.ValueType  # 1
ASSERTION_STATUS_FAIL: AssertionStatus.ValueType  # 2
ASSERTION_STATUS_ERROR: AssertionStatus.ValueType  # 3
ASSERTION_STATUS_PASS_WARN: AssertionStatus.ValueType  # 4
global___AssertionStatus = AssertionStatus


class _AssertionErrorCode:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _AssertionErrorCodeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AssertionErrorCode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UNKNOWN: _AssertionErrorCode.ValueType  # 0
    BFE_ERROR: _AssertionErrorCode.ValueType  # 1
    UNSATISFIED_PRECONDITION: _AssertionErrorCode.ValueType  # 2
    INVALID_ARGUMENT: _AssertionErrorCode.ValueType  # 3
class AssertionErrorCode(_AssertionErrorCode, metaclass=_AssertionErrorCodeEnumTypeWrapper):
    pass

UNKNOWN: AssertionErrorCode.ValueType  # 0
BFE_ERROR: AssertionErrorCode.ValueType  # 1
UNSATISFIED_PRECONDITION: AssertionErrorCode.ValueType  # 2
INVALID_ARGUMENT: AssertionErrorCode.ValueType  # 3
global___AssertionErrorCode = AssertionErrorCode


class _SgRuleType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _SgRuleTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SgRuleType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    SG_RULE_TYPE_EITHER: _SgRuleType.ValueType  # 0
    SG_RULE_TYPE_INBOUND: _SgRuleType.ValueType  # 1
    SG_RULE_TYPE_OUTBOUND: _SgRuleType.ValueType  # 2
class SgRuleType(_SgRuleType, metaclass=_SgRuleTypeEnumTypeWrapper):
    pass

SG_RULE_TYPE_EITHER: SgRuleType.ValueType  # 0
SG_RULE_TYPE_INBOUND: SgRuleType.ValueType  # 1
SG_RULE_TYPE_OUTBOUND: SgRuleType.ValueType  # 2
global___SgRuleType = SgRuleType


class AssertionInput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DEVICES_HAVE_SERVERS_FIELD_NUMBER: builtins.int
    SECURITY_GROUP_DOES_NOT_HAVE_RULE_FIELD_NUMBER: builtins.int
    SG_RULES_BLOCKED_BY_NACL_FIELD_NUMBER: builtins.int
    CROSS_ZONE_POLICY_FILTERS_FLOWS_FIELD_NUMBER: builtins.int
    DEVICES_HAVE_ROUTES_FIELD_NUMBER: builtins.int
    VPC_ENDPOINT_FOR_S3_FIELD_NUMBER: builtins.int
    PUBLIC_INSTANCES_FIELD_NUMBER: builtins.int
    PUBLIC_IP_NOT_IN_PRIVATE_SUBNET_FIELD_NUMBER: builtins.int
    LB_TARGETS_WITH_PUBLIC_IP_FIELD_NUMBER: builtins.int
    STEPPING_STONES_FIELD_NUMBER: builtins.int
    SNMP_COMMUNITY_CLIENTS_FIELD_NUMBER: builtins.int
    PASSIVE_BGP_NO_SUBNET_FIELD_NUMBER: builtins.int
    FILTER_BEHAVIOR_FIELD_NUMBER: builtins.int
    UNDEFINED_REFERENCE_FIELD_NUMBER: builtins.int
    BGP_SESSION_ESTABLISHMENT_FIELD_NUMBER: builtins.int
    ARISTA_MLAG_ANALYZER_FIELD_NUMBER: builtins.int
    BGP_PEERING_ESTABLISHMENT_FIELD_NUMBER: builtins.int
    FILTER_LINE_REACHABILITY_FIELD_NUMBER: builtins.int
    SERVICE_ACCESSIBILITY_FIELD_NUMBER: builtins.int
    SERVICE_PROTECTION_FIELD_NUMBER: builtins.int
    DUPLICATE_BGP_ASN_FIELD_NUMBER: builtins.int
    DUPLICATE_BGP_ROUTER_ID_FIELD_NUMBER: builtins.int
    DUPLICATE_OSPF_ROUTER_ID_FIELD_NUMBER: builtins.int
    ISIS_COST_FIELD_NUMBER: builtins.int
    DEVICES_HAVE_DEFINITION_TEXT_FIELD_NUMBER: builtins.int
    DEVICES_HAVE_TEXT_FIELD_NUMBER: builtins.int
    TRACEROUTE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    @property
    def devices_have_servers(self) -> global___DevicesHaveServersAssertionInput: ...
    @property
    def security_group_does_not_have_rule(self) -> global___SecurityGroupDoesNotHaveRuleAssertionInput: ...
    @property
    def sg_rules_blocked_by_nacl(self) -> global___SgRulesBlockedByNaclInput: ...
    @property
    def cross_zone_policy_filters_flows(self) -> intentionet.bfe.proto.assertions.filters_pb2.CrossZonePolicyFiltersFlowsAssertionInput: ...
    @property
    def devices_have_routes(self) -> intentionet.bfe.proto.assertions.route_pb2.DevicesHaveRoutesAssertionInput: ...
    @property
    def vpc_endpoint_for_s3(self) -> global___VpcEndpointForS3Input: ...
    @property
    def public_instances(self) -> global___PublicInstancesInput: ...
    @property
    def public_ip_not_in_private_subnet(self) -> global___PublicIpNotInPrivateSubnetInput: ...
    @property
    def lb_targets_with_public_ip(self) -> global___LbTargetsWithPublicIpInput: ...
    @property
    def stepping_stones(self) -> global___SteppingStonesInput: ...
    @property
    def snmp_community_clients(self) -> intentionet.bfe.proto.assertions.snmp_pb2.SnmpCommunityClientsAssertionInput: ...
    @property
    def passive_bgp_no_subnet(self) -> global___PassiveBgpNoSubnetAssertionInput: ...
    @property
    def filter_behavior(self) -> intentionet.bfe.proto.assertions.filters_pb2.FilterBehaviorAssertionInput: ...
    @property
    def undefined_reference(self) -> intentionet.bfe.proto.assertions.reference_pb2.UndefinedReferenceAssertionInput: ...
    @property
    def bgp_session_establishment(self) -> intentionet.bfe.proto.assertions.bgp_pb2.BgpSessionEstablishmentAssertionInput: ...
    @property
    def arista_mlag_analyzer(self) -> intentionet.bfe.proto.assertions.mlag_pb2.AristaMlagAnalyzerAssertionInput: ...
    @property
    def bgp_peering_establishment(self) -> intentionet.bfe.proto.assertions.bgp_pb2.BgpPeeringEstablishmentAssertionInput: ...
    @property
    def filter_line_reachability(self) -> intentionet.bfe.proto.assertions.filters_pb2.FilterLineReachabilityAssertionInput: ...
    @property
    def service_accessibility(self) -> intentionet.bfe.proto.assertions.reachability_pb2.ServiceAccessibilityAssertionInput: ...
    @property
    def service_protection(self) -> intentionet.bfe.proto.assertions.reachability_pb2.ServiceProtectionAssertionInput: ...
    @property
    def duplicate_bgp_asn(self) -> intentionet.bfe.proto.assertions.bgp_pb2.DuplicateBgpAsnAssertionInput: ...
    @property
    def duplicate_bgp_router_id(self) -> intentionet.bfe.proto.assertions.bgp_pb2.DuplicateBgpRouterIdAssertionInput: ...
    @property
    def duplicate_ospf_router_id(self) -> intentionet.bfe.proto.assertions.ospf_pb2.DuplicateOspfRouterIdAssertionInput: ...
    @property
    def isis_cost(self) -> intentionet.bfe.proto.assertions.isis_pb2.IsisCostAssertionInput: ...
    @property
    def devices_have_definition_text(self) -> intentionet.bfe.proto.assertions.text_pb2.DevicesHaveDefinitionTextInput: ...
    @property
    def devices_have_text(self) -> intentionet.bfe.proto.assertions.text_pb2.DevicesHaveTextInput: ...
    @property
    def traceroute(self) -> intentionet.bfe.proto.assertions.traceroute_pb2.TracerouteAssertionInput: ...
    description: typing.Text
    title: typing.Text
    def __init__(self,
        *,
        devices_have_servers: typing.Optional[global___DevicesHaveServersAssertionInput] = ...,
        security_group_does_not_have_rule: typing.Optional[global___SecurityGroupDoesNotHaveRuleAssertionInput] = ...,
        sg_rules_blocked_by_nacl: typing.Optional[global___SgRulesBlockedByNaclInput] = ...,
        cross_zone_policy_filters_flows: typing.Optional[intentionet.bfe.proto.assertions.filters_pb2.CrossZonePolicyFiltersFlowsAssertionInput] = ...,
        devices_have_routes: typing.Optional[intentionet.bfe.proto.assertions.route_pb2.DevicesHaveRoutesAssertionInput] = ...,
        vpc_endpoint_for_s3: typing.Optional[global___VpcEndpointForS3Input] = ...,
        public_instances: typing.Optional[global___PublicInstancesInput] = ...,
        public_ip_not_in_private_subnet: typing.Optional[global___PublicIpNotInPrivateSubnetInput] = ...,
        lb_targets_with_public_ip: typing.Optional[global___LbTargetsWithPublicIpInput] = ...,
        stepping_stones: typing.Optional[global___SteppingStonesInput] = ...,
        snmp_community_clients: typing.Optional[intentionet.bfe.proto.assertions.snmp_pb2.SnmpCommunityClientsAssertionInput] = ...,
        passive_bgp_no_subnet: typing.Optional[global___PassiveBgpNoSubnetAssertionInput] = ...,
        filter_behavior: typing.Optional[intentionet.bfe.proto.assertions.filters_pb2.FilterBehaviorAssertionInput] = ...,
        undefined_reference: typing.Optional[intentionet.bfe.proto.assertions.reference_pb2.UndefinedReferenceAssertionInput] = ...,
        bgp_session_establishment: typing.Optional[intentionet.bfe.proto.assertions.bgp_pb2.BgpSessionEstablishmentAssertionInput] = ...,
        arista_mlag_analyzer: typing.Optional[intentionet.bfe.proto.assertions.mlag_pb2.AristaMlagAnalyzerAssertionInput] = ...,
        bgp_peering_establishment: typing.Optional[intentionet.bfe.proto.assertions.bgp_pb2.BgpPeeringEstablishmentAssertionInput] = ...,
        filter_line_reachability: typing.Optional[intentionet.bfe.proto.assertions.filters_pb2.FilterLineReachabilityAssertionInput] = ...,
        service_accessibility: typing.Optional[intentionet.bfe.proto.assertions.reachability_pb2.ServiceAccessibilityAssertionInput] = ...,
        service_protection: typing.Optional[intentionet.bfe.proto.assertions.reachability_pb2.ServiceProtectionAssertionInput] = ...,
        duplicate_bgp_asn: typing.Optional[intentionet.bfe.proto.assertions.bgp_pb2.DuplicateBgpAsnAssertionInput] = ...,
        duplicate_bgp_router_id: typing.Optional[intentionet.bfe.proto.assertions.bgp_pb2.DuplicateBgpRouterIdAssertionInput] = ...,
        duplicate_ospf_router_id: typing.Optional[intentionet.bfe.proto.assertions.ospf_pb2.DuplicateOspfRouterIdAssertionInput] = ...,
        isis_cost: typing.Optional[intentionet.bfe.proto.assertions.isis_pb2.IsisCostAssertionInput] = ...,
        devices_have_definition_text: typing.Optional[intentionet.bfe.proto.assertions.text_pb2.DevicesHaveDefinitionTextInput] = ...,
        devices_have_text: typing.Optional[intentionet.bfe.proto.assertions.text_pb2.DevicesHaveTextInput] = ...,
        traceroute: typing.Optional[intentionet.bfe.proto.assertions.traceroute_pb2.TracerouteAssertionInput] = ...,
        description: typing.Text = ...,
        title: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["arista_mlag_analyzer",b"arista_mlag_analyzer","bgp_peering_establishment",b"bgp_peering_establishment","bgp_session_establishment",b"bgp_session_establishment","cross_zone_policy_filters_flows",b"cross_zone_policy_filters_flows","devices_have_definition_text",b"devices_have_definition_text","devices_have_routes",b"devices_have_routes","devices_have_servers",b"devices_have_servers","devices_have_text",b"devices_have_text","duplicate_bgp_asn",b"duplicate_bgp_asn","duplicate_bgp_router_id",b"duplicate_bgp_router_id","duplicate_ospf_router_id",b"duplicate_ospf_router_id","filter_behavior",b"filter_behavior","filter_line_reachability",b"filter_line_reachability","input",b"input","isis_cost",b"isis_cost","lb_targets_with_public_ip",b"lb_targets_with_public_ip","passive_bgp_no_subnet",b"passive_bgp_no_subnet","public_instances",b"public_instances","public_ip_not_in_private_subnet",b"public_ip_not_in_private_subnet","security_group_does_not_have_rule",b"security_group_does_not_have_rule","service_accessibility",b"service_accessibility","service_protection",b"service_protection","sg_rules_blocked_by_nacl",b"sg_rules_blocked_by_nacl","snmp_community_clients",b"snmp_community_clients","stepping_stones",b"stepping_stones","traceroute",b"traceroute","undefined_reference",b"undefined_reference","vpc_endpoint_for_s3",b"vpc_endpoint_for_s3"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["arista_mlag_analyzer",b"arista_mlag_analyzer","bgp_peering_establishment",b"bgp_peering_establishment","bgp_session_establishment",b"bgp_session_establishment","cross_zone_policy_filters_flows",b"cross_zone_policy_filters_flows","description",b"description","devices_have_definition_text",b"devices_have_definition_text","devices_have_routes",b"devices_have_routes","devices_have_servers",b"devices_have_servers","devices_have_text",b"devices_have_text","duplicate_bgp_asn",b"duplicate_bgp_asn","duplicate_bgp_router_id",b"duplicate_bgp_router_id","duplicate_ospf_router_id",b"duplicate_ospf_router_id","filter_behavior",b"filter_behavior","filter_line_reachability",b"filter_line_reachability","input",b"input","isis_cost",b"isis_cost","lb_targets_with_public_ip",b"lb_targets_with_public_ip","passive_bgp_no_subnet",b"passive_bgp_no_subnet","public_instances",b"public_instances","public_ip_not_in_private_subnet",b"public_ip_not_in_private_subnet","security_group_does_not_have_rule",b"security_group_does_not_have_rule","service_accessibility",b"service_accessibility","service_protection",b"service_protection","sg_rules_blocked_by_nacl",b"sg_rules_blocked_by_nacl","snmp_community_clients",b"snmp_community_clients","stepping_stones",b"stepping_stones","title",b"title","traceroute",b"traceroute","undefined_reference",b"undefined_reference","vpc_endpoint_for_s3",b"vpc_endpoint_for_s3"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["input",b"input"]) -> typing.Optional[typing_extensions.Literal["devices_have_servers","security_group_does_not_have_rule","sg_rules_blocked_by_nacl","cross_zone_policy_filters_flows","devices_have_routes","vpc_endpoint_for_s3","public_instances","public_ip_not_in_private_subnet","lb_targets_with_public_ip","stepping_stones","snmp_community_clients","passive_bgp_no_subnet","filter_behavior","undefined_reference","bgp_session_establishment","arista_mlag_analyzer","bgp_peering_establishment","filter_line_reachability","service_accessibility","service_protection","duplicate_bgp_asn","duplicate_bgp_router_id","duplicate_ospf_router_id","isis_cost","devices_have_definition_text","devices_have_text","traceroute"]]: ...
global___AssertionInput = AssertionInput

class ParseAssertionInputRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TEXT_FIELD_NUMBER: builtins.int
    text: typing.Text
    def __init__(self,
        *,
        text: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["text",b"text"]) -> None: ...
global___ParseAssertionInputRequest = ParseAssertionInputRequest

class ParseAssertionInputResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ASSERTION_FIELD_NUMBER: builtins.int
    @property
    def assertion(self) -> global___AssertionInput: ...
    def __init__(self,
        *,
        assertion: typing.Optional[global___AssertionInput] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["assertion",b"assertion"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["assertion",b"assertion"]) -> None: ...
global___ParseAssertionInputResponse = ParseAssertionInputResponse

class AssertionResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DEVICES_HAVE_SERVERS_FIELD_NUMBER: builtins.int
    SECURITY_GROUP_DOES_NOT_HAVE_RULE_FIELD_NUMBER: builtins.int
    SG_RULES_BLOCKED_BY_NACL_FIELD_NUMBER: builtins.int
    CROSS_ZONE_POLICY_FILTERS_FLOWS_FIELD_NUMBER: builtins.int
    DEVICES_HAVE_ROUTES_FIELD_NUMBER: builtins.int
    VPC_ENDPOINT_FOR_S3_FIELD_NUMBER: builtins.int
    PUBLIC_INSTANCES_FIELD_NUMBER: builtins.int
    PUBLIC_IP_NOT_IN_PRIVATE_SUBNET_FIELD_NUMBER: builtins.int
    LB_TARGETS_WITH_PUBLIC_IP_FIELD_NUMBER: builtins.int
    STEPPING_STONES_FIELD_NUMBER: builtins.int
    SNMP_COMMUNITY_CLIENTS_FIELD_NUMBER: builtins.int
    PASSIVE_BGP_NO_SUBNET_FIELD_NUMBER: builtins.int
    FILTER_BEHAVIOR_FIELD_NUMBER: builtins.int
    UNDEFINED_REFERENCE_FIELD_NUMBER: builtins.int
    BGP_SESSION_ESTABLISHMENT_FIELD_NUMBER: builtins.int
    ARISTA_MLAG_ANALYZER_FIELD_NUMBER: builtins.int
    BGP_PEERING_ESTABLISHMENT_FIELD_NUMBER: builtins.int
    FILTER_LINE_REACHABILITY_FIELD_NUMBER: builtins.int
    SERVICE_ACCESSIBILITY_FIELD_NUMBER: builtins.int
    SERVICE_PROTECTION_FIELD_NUMBER: builtins.int
    DUPLICATE_BGP_ASN_FIELD_NUMBER: builtins.int
    DUPLICATE_BGP_ROUTER_ID_FIELD_NUMBER: builtins.int
    DUPLICATE_OSPF_ROUTER_ID_FIELD_NUMBER: builtins.int
    ISIS_COST_FIELD_NUMBER: builtins.int
    DEVICES_HAVE_DEFINITION_TEXT_FIELD_NUMBER: builtins.int
    DEVICES_HAVE_TEXT_FIELD_NUMBER: builtins.int
    TRACEROUTE_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    @property
    def devices_have_servers(self) -> global___DevicesHaveServersAssertionResult: ...
    @property
    def security_group_does_not_have_rule(self) -> global___SecurityGroupDoesNotHaveRuleAssertionResult: ...
    @property
    def sg_rules_blocked_by_nacl(self) -> global___SgRulesBlockedByNaclResult: ...
    @property
    def cross_zone_policy_filters_flows(self) -> intentionet.bfe.proto.assertions.filters_pb2.CrossZonePolicyFiltersFlowsAssertionResult: ...
    @property
    def devices_have_routes(self) -> intentionet.bfe.proto.assertions.route_pb2.DevicesHaveRoutesAssertionResult: ...
    @property
    def vpc_endpoint_for_s3(self) -> global___VpcEndpointForS3Result: ...
    @property
    def public_instances(self) -> global___PublicInstancesResult: ...
    @property
    def public_ip_not_in_private_subnet(self) -> global___PublicIpNotInPrivateSubnetResult: ...
    @property
    def lb_targets_with_public_ip(self) -> global___LbTargetsWithPublicIpResult: ...
    @property
    def stepping_stones(self) -> global___SteppingStonesResult: ...
    @property
    def snmp_community_clients(self) -> intentionet.bfe.proto.assertions.snmp_pb2.SnmpCommunityClientsAssertionResult: ...
    @property
    def passive_bgp_no_subnet(self) -> global___PassiveBgpNoSubnetAssertionResult: ...
    @property
    def filter_behavior(self) -> intentionet.bfe.proto.assertions.filters_pb2.FilterBehaviorAssertionResult: ...
    @property
    def undefined_reference(self) -> intentionet.bfe.proto.assertions.reference_pb2.UndefinedReferenceAssertionResult: ...
    @property
    def bgp_session_establishment(self) -> intentionet.bfe.proto.assertions.bgp_pb2.BgpSessionEstablishmentAssertionResult: ...
    @property
    def arista_mlag_analyzer(self) -> intentionet.bfe.proto.assertions.mlag_pb2.AristaMlagAnalyzerAssertionResult: ...
    @property
    def bgp_peering_establishment(self) -> intentionet.bfe.proto.assertions.bgp_pb2.BgpPeeringEstablishmentAssertionResult: ...
    @property
    def filter_line_reachability(self) -> intentionet.bfe.proto.assertions.filters_pb2.FilterLineReachabilityAssertionResult: ...
    @property
    def service_accessibility(self) -> intentionet.bfe.proto.assertions.reachability_pb2.ServiceAccessibilityAssertionResult: ...
    @property
    def service_protection(self) -> intentionet.bfe.proto.assertions.reachability_pb2.ServiceProtectionAssertionResult: ...
    @property
    def duplicate_bgp_asn(self) -> intentionet.bfe.proto.assertions.bgp_pb2.DuplicateBgpAsnAssertionResult: ...
    @property
    def duplicate_bgp_router_id(self) -> intentionet.bfe.proto.assertions.bgp_pb2.DuplicateBgpRouterIdAssertionResult: ...
    @property
    def duplicate_ospf_router_id(self) -> intentionet.bfe.proto.assertions.ospf_pb2.DuplicateOspfRouterIdAssertionResult: ...
    @property
    def isis_cost(self) -> intentionet.bfe.proto.assertions.isis_pb2.IsisCostAssertionResult: ...
    @property
    def devices_have_definition_text(self) -> intentionet.bfe.proto.assertions.text_pb2.DevicesHaveDefinitionTextResult: ...
    @property
    def devices_have_text(self) -> intentionet.bfe.proto.assertions.text_pb2.DevicesHaveTextResult: ...
    @property
    def traceroute(self) -> intentionet.bfe.proto.assertions.traceroute_pb2.TracerouteAssertionResult: ...
    @property
    def metadata(self) -> global___AssertionResultMetadata: ...
    def __init__(self,
        *,
        devices_have_servers: typing.Optional[global___DevicesHaveServersAssertionResult] = ...,
        security_group_does_not_have_rule: typing.Optional[global___SecurityGroupDoesNotHaveRuleAssertionResult] = ...,
        sg_rules_blocked_by_nacl: typing.Optional[global___SgRulesBlockedByNaclResult] = ...,
        cross_zone_policy_filters_flows: typing.Optional[intentionet.bfe.proto.assertions.filters_pb2.CrossZonePolicyFiltersFlowsAssertionResult] = ...,
        devices_have_routes: typing.Optional[intentionet.bfe.proto.assertions.route_pb2.DevicesHaveRoutesAssertionResult] = ...,
        vpc_endpoint_for_s3: typing.Optional[global___VpcEndpointForS3Result] = ...,
        public_instances: typing.Optional[global___PublicInstancesResult] = ...,
        public_ip_not_in_private_subnet: typing.Optional[global___PublicIpNotInPrivateSubnetResult] = ...,
        lb_targets_with_public_ip: typing.Optional[global___LbTargetsWithPublicIpResult] = ...,
        stepping_stones: typing.Optional[global___SteppingStonesResult] = ...,
        snmp_community_clients: typing.Optional[intentionet.bfe.proto.assertions.snmp_pb2.SnmpCommunityClientsAssertionResult] = ...,
        passive_bgp_no_subnet: typing.Optional[global___PassiveBgpNoSubnetAssertionResult] = ...,
        filter_behavior: typing.Optional[intentionet.bfe.proto.assertions.filters_pb2.FilterBehaviorAssertionResult] = ...,
        undefined_reference: typing.Optional[intentionet.bfe.proto.assertions.reference_pb2.UndefinedReferenceAssertionResult] = ...,
        bgp_session_establishment: typing.Optional[intentionet.bfe.proto.assertions.bgp_pb2.BgpSessionEstablishmentAssertionResult] = ...,
        arista_mlag_analyzer: typing.Optional[intentionet.bfe.proto.assertions.mlag_pb2.AristaMlagAnalyzerAssertionResult] = ...,
        bgp_peering_establishment: typing.Optional[intentionet.bfe.proto.assertions.bgp_pb2.BgpPeeringEstablishmentAssertionResult] = ...,
        filter_line_reachability: typing.Optional[intentionet.bfe.proto.assertions.filters_pb2.FilterLineReachabilityAssertionResult] = ...,
        service_accessibility: typing.Optional[intentionet.bfe.proto.assertions.reachability_pb2.ServiceAccessibilityAssertionResult] = ...,
        service_protection: typing.Optional[intentionet.bfe.proto.assertions.reachability_pb2.ServiceProtectionAssertionResult] = ...,
        duplicate_bgp_asn: typing.Optional[intentionet.bfe.proto.assertions.bgp_pb2.DuplicateBgpAsnAssertionResult] = ...,
        duplicate_bgp_router_id: typing.Optional[intentionet.bfe.proto.assertions.bgp_pb2.DuplicateBgpRouterIdAssertionResult] = ...,
        duplicate_ospf_router_id: typing.Optional[intentionet.bfe.proto.assertions.ospf_pb2.DuplicateOspfRouterIdAssertionResult] = ...,
        isis_cost: typing.Optional[intentionet.bfe.proto.assertions.isis_pb2.IsisCostAssertionResult] = ...,
        devices_have_definition_text: typing.Optional[intentionet.bfe.proto.assertions.text_pb2.DevicesHaveDefinitionTextResult] = ...,
        devices_have_text: typing.Optional[intentionet.bfe.proto.assertions.text_pb2.DevicesHaveTextResult] = ...,
        traceroute: typing.Optional[intentionet.bfe.proto.assertions.traceroute_pb2.TracerouteAssertionResult] = ...,
        metadata: typing.Optional[global___AssertionResultMetadata] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["arista_mlag_analyzer",b"arista_mlag_analyzer","bgp_peering_establishment",b"bgp_peering_establishment","bgp_session_establishment",b"bgp_session_establishment","cross_zone_policy_filters_flows",b"cross_zone_policy_filters_flows","devices_have_definition_text",b"devices_have_definition_text","devices_have_routes",b"devices_have_routes","devices_have_servers",b"devices_have_servers","devices_have_text",b"devices_have_text","duplicate_bgp_asn",b"duplicate_bgp_asn","duplicate_bgp_router_id",b"duplicate_bgp_router_id","duplicate_ospf_router_id",b"duplicate_ospf_router_id","filter_behavior",b"filter_behavior","filter_line_reachability",b"filter_line_reachability","isis_cost",b"isis_cost","lb_targets_with_public_ip",b"lb_targets_with_public_ip","metadata",b"metadata","passive_bgp_no_subnet",b"passive_bgp_no_subnet","public_instances",b"public_instances","public_ip_not_in_private_subnet",b"public_ip_not_in_private_subnet","result",b"result","security_group_does_not_have_rule",b"security_group_does_not_have_rule","service_accessibility",b"service_accessibility","service_protection",b"service_protection","sg_rules_blocked_by_nacl",b"sg_rules_blocked_by_nacl","snmp_community_clients",b"snmp_community_clients","stepping_stones",b"stepping_stones","traceroute",b"traceroute","undefined_reference",b"undefined_reference","vpc_endpoint_for_s3",b"vpc_endpoint_for_s3"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["arista_mlag_analyzer",b"arista_mlag_analyzer","bgp_peering_establishment",b"bgp_peering_establishment","bgp_session_establishment",b"bgp_session_establishment","cross_zone_policy_filters_flows",b"cross_zone_policy_filters_flows","devices_have_definition_text",b"devices_have_definition_text","devices_have_routes",b"devices_have_routes","devices_have_servers",b"devices_have_servers","devices_have_text",b"devices_have_text","duplicate_bgp_asn",b"duplicate_bgp_asn","duplicate_bgp_router_id",b"duplicate_bgp_router_id","duplicate_ospf_router_id",b"duplicate_ospf_router_id","filter_behavior",b"filter_behavior","filter_line_reachability",b"filter_line_reachability","isis_cost",b"isis_cost","lb_targets_with_public_ip",b"lb_targets_with_public_ip","metadata",b"metadata","passive_bgp_no_subnet",b"passive_bgp_no_subnet","public_instances",b"public_instances","public_ip_not_in_private_subnet",b"public_ip_not_in_private_subnet","result",b"result","security_group_does_not_have_rule",b"security_group_does_not_have_rule","service_accessibility",b"service_accessibility","service_protection",b"service_protection","sg_rules_blocked_by_nacl",b"sg_rules_blocked_by_nacl","snmp_community_clients",b"snmp_community_clients","stepping_stones",b"stepping_stones","traceroute",b"traceroute","undefined_reference",b"undefined_reference","vpc_endpoint_for_s3",b"vpc_endpoint_for_s3"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["result",b"result"]) -> typing.Optional[typing_extensions.Literal["devices_have_servers","security_group_does_not_have_rule","sg_rules_blocked_by_nacl","cross_zone_policy_filters_flows","devices_have_routes","vpc_endpoint_for_s3","public_instances","public_ip_not_in_private_subnet","lb_targets_with_public_ip","stepping_stones","snmp_community_clients","passive_bgp_no_subnet","filter_behavior","undefined_reference","bgp_session_establishment","arista_mlag_analyzer","bgp_peering_establishment","filter_line_reachability","service_accessibility","service_protection","duplicate_bgp_asn","duplicate_bgp_router_id","duplicate_ospf_router_id","isis_cost","devices_have_definition_text","devices_have_text","traceroute"]]: ...
global___AssertionResult = AssertionResult

class AssertionResultMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    STATUS_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    STATS_FIELD_NUMBER: builtins.int
    WARNINGS_FIELD_NUMBER: builtins.int
    status: global___AssertionStatus.ValueType
    @property
    def error(self) -> global___AssertionExecutionError: ...
    @property
    def stats(self) -> global___AssertionStats: ...
    @property
    def warnings(self) -> global___AssertionResultWarnings: ...
    def __init__(self,
        *,
        status: global___AssertionStatus.ValueType = ...,
        error: typing.Optional[global___AssertionExecutionError] = ...,
        stats: typing.Optional[global___AssertionStats] = ...,
        warnings: typing.Optional[global___AssertionResultWarnings] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error",b"error","stats",b"stats","warnings",b"warnings"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","stats",b"stats","status",b"status","warnings",b"warnings"]) -> None: ...
global___AssertionResultMetadata = AssertionResultMetadata

class AssertionResultWarnings(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    WARNINGS_FIELD_NUMBER: builtins.int
    @property
    def warnings(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        warnings: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["warnings",b"warnings"]) -> None: ...
global___AssertionResultWarnings = AssertionResultWarnings

class AssertionExecutionError(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    code: global___AssertionErrorCode.ValueType
    message: typing.Text
    def __init__(self,
        *,
        code: global___AssertionErrorCode.ValueType = ...,
        message: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["code",b"code","message",b"message"]) -> None: ...
global___AssertionExecutionError = AssertionExecutionError

class AssertionStats(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PASS_FIELD_NUMBER: builtins.int
    FAIL_FIELD_NUMBER: builtins.int
    SKIP_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    TOTAL_FIELD_NUMBER: builtins.int
    fail: builtins.int
    skip: builtins.int
    error: builtins.int
    total: builtins.int
    def __init__(self,
        *,
        fail: builtins.int = ...,
        skip: builtins.int = ...,
        error: builtins.int = ...,
        total: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","fail",b"fail","pass",b"pass","skip",b"skip","total",b"total"]) -> None: ...
global___AssertionStats = AssertionStats

class RemediationSuggestion(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LINK_FIELD_NUMBER: builtins.int
    description: typing.Text
    link: typing.Text
    def __init__(self,
        *,
        description: typing.Text = ...,
        link: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["description",b"description","link",b"link"]) -> None: ...
global___RemediationSuggestion = RemediationSuggestion

class DevicesHaveServersAssertionInput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DEVICES_FIELD_NUMBER: builtins.int
    SERVERS_FIELD_NUMBER: builtins.int
    @property
    def devices(self) -> intentionet.bfe.proto.assertions.parameters_pb2.DeviceFilterExpr: ...
    @property
    def servers(self) -> intentionet.bfe.proto.assertions.parameters_pb2.MatchServers: ...
    def __init__(self,
        *,
        devices: typing.Optional[intentionet.bfe.proto.assertions.parameters_pb2.DeviceFilterExpr] = ...,
        servers: typing.Optional[intentionet.bfe.proto.assertions.parameters_pb2.MatchServers] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["devices",b"devices","servers",b"servers"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["devices",b"devices","servers",b"servers"]) -> None: ...
global___DevicesHaveServersAssertionInput = DevicesHaveServersAssertionInput

class DevicesHaveServersAssertionResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Element(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        DEVICE_FIELD_NUMBER: builtins.int
        SERVERS_FIELD_NUMBER: builtins.int
        DESCRIPTION_INDEX_FIELD_NUMBER: builtins.int
        MATCH_RESULT_FIELD_NUMBER: builtins.int
        @property
        def device(self) -> intentionet.bfe.proto.datamodel.device_pb2.Device: ...
        @property
        def servers(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
        @property
        def description_index(self) -> intentionet.bfe.proto.assertions.violations_pb2.DescriptionIndex: ...
        @property
        def match_result(self) -> intentionet.bfe.proto.assertions.parameters_pb2.MatchStringSetResult: ...
        def __init__(self,
            *,
            device: typing.Optional[intentionet.bfe.proto.datamodel.device_pb2.Device] = ...,
            servers: typing.Optional[typing.Iterable[typing.Text]] = ...,
            description_index: typing.Optional[intentionet.bfe.proto.assertions.violations_pb2.DescriptionIndex] = ...,
            match_result: typing.Optional[intentionet.bfe.proto.assertions.parameters_pb2.MatchStringSetResult] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["description_index",b"description_index","device",b"device","match_result",b"match_result"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["description_index",b"description_index","device",b"device","match_result",b"match_result","servers",b"servers"]) -> None: ...

    VIOLATORS_FIELD_NUMBER: builtins.int
    VIOLATOR_DESCRIPTIONS_FIELD_NUMBER: builtins.int
    CONFORMERS_FIELD_NUMBER: builtins.int
    @property
    def violators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DevicesHaveServersAssertionResult.Element]: ...
    @property
    def violator_descriptions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def conformers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DevicesHaveServersAssertionResult.Element]: ...
    def __init__(self,
        *,
        violators: typing.Optional[typing.Iterable[global___DevicesHaveServersAssertionResult.Element]] = ...,
        violator_descriptions: typing.Optional[typing.Iterable[typing.Text]] = ...,
        conformers: typing.Optional[typing.Iterable[global___DevicesHaveServersAssertionResult.Element]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["conformers",b"conformers","violator_descriptions",b"violator_descriptions","violators",b"violators"]) -> None: ...
global___DevicesHaveServersAssertionResult = DevicesHaveServersAssertionResult

class PublicIpNotInPrivateSubnetInput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NETWORK_INTERFACES_FIELD_NUMBER: builtins.int
    @property
    def network_interfaces(self) -> intentionet.bfe.proto.assertions.parameters_pb2.AwsNetworkInterfaceFilter: ...
    def __init__(self,
        *,
        network_interfaces: typing.Optional[intentionet.bfe.proto.assertions.parameters_pb2.AwsNetworkInterfaceFilter] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["network_interfaces",b"network_interfaces"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["network_interfaces",b"network_interfaces"]) -> None: ...
global___PublicIpNotInPrivateSubnetInput = PublicIpNotInPrivateSubnetInput

class PublicIpNotInPrivateSubnetResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Violator(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        SUBNET_FIELD_NUMBER: builtins.int
        ENI_FIELD_NUMBER: builtins.int
        INSTANCE_FIELD_NUMBER: builtins.int
        LOCATION_FIELD_NUMBER: builtins.int
        DESCRIPTION_INDEX_FIELD_NUMBER: builtins.int
        @property
        def subnet(self) -> intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsSubnet: ...
        @property
        def eni(self) -> intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsNetworkInterface: ...
        @property
        def instance(self) -> intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsInstance: ...
        @property
        def location(self) -> intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsAccRegVpc: ...
        @property
        def description_index(self) -> intentionet.bfe.proto.assertions.violations_pb2.DescriptionIndex: ...
        def __init__(self,
            *,
            subnet: typing.Optional[intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsSubnet] = ...,
            eni: typing.Optional[intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsNetworkInterface] = ...,
            instance: typing.Optional[intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsInstance] = ...,
            location: typing.Optional[intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsAccRegVpc] = ...,
            description_index: typing.Optional[intentionet.bfe.proto.assertions.violations_pb2.DescriptionIndex] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["description_index",b"description_index","eni",b"eni","instance",b"instance","location",b"location","subnet",b"subnet"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["description_index",b"description_index","eni",b"eni","instance",b"instance","location",b"location","subnet",b"subnet"]) -> None: ...

    VIOLATORS_FIELD_NUMBER: builtins.int
    VIOLATOR_DESCRIPTIONS_FIELD_NUMBER: builtins.int
    @property
    def violators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PublicIpNotInPrivateSubnetResult.Violator]: ...
    @property
    def violator_descriptions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        violators: typing.Optional[typing.Iterable[global___PublicIpNotInPrivateSubnetResult.Violator]] = ...,
        violator_descriptions: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["violator_descriptions",b"violator_descriptions","violators",b"violators"]) -> None: ...
global___PublicIpNotInPrivateSubnetResult = PublicIpNotInPrivateSubnetResult

class LbTargetsWithPublicIpInput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCES_FIELD_NUMBER: builtins.int
    @property
    def instances(self) -> intentionet.bfe.proto.assertions.parameters_pb2.AwsInstanceFilter: ...
    def __init__(self,
        *,
        instances: typing.Optional[intentionet.bfe.proto.assertions.parameters_pb2.AwsInstanceFilter] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["instances",b"instances"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["instances",b"instances"]) -> None: ...
global___LbTargetsWithPublicIpInput = LbTargetsWithPublicIpInput

class LbTargetsWithPublicIpResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Violator(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        INSTANCE_FIELD_NUMBER: builtins.int
        LB_DETAIL_FIELD_NUMBER: builtins.int
        DESCRIPTION_INDEX_FIELD_NUMBER: builtins.int
        @property
        def instance(self) -> intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsInstance: ...
        @property
        def lb_detail(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LbTargetsWithPublicIpResult.LBDetail]: ...
        @property
        def description_index(self) -> intentionet.bfe.proto.assertions.violations_pb2.DescriptionIndex: ...
        def __init__(self,
            *,
            instance: typing.Optional[intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsInstance] = ...,
            lb_detail: typing.Optional[typing.Iterable[global___LbTargetsWithPublicIpResult.LBDetail]] = ...,
            description_index: typing.Optional[intentionet.bfe.proto.assertions.violations_pb2.DescriptionIndex] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["description_index",b"description_index","instance",b"instance"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["description_index",b"description_index","instance",b"instance","lb_detail",b"lb_detail"]) -> None: ...

    class LBDetail(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        LOAD_BALANCER_FIELD_NUMBER: builtins.int
        TARGET_GROUP_FIELD_NUMBER: builtins.int
        PROTOCOL_FIELD_NUMBER: builtins.int
        PORT_FIELD_NUMBER: builtins.int
        @property
        def load_balancer(self) -> intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsLoadBalancer: ...
        @property
        def target_group(self) -> intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsTargetGroup: ...
        protocol: typing.Text
        port: builtins.int
        def __init__(self,
            *,
            load_balancer: typing.Optional[intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsLoadBalancer] = ...,
            target_group: typing.Optional[intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsTargetGroup] = ...,
            protocol: typing.Text = ...,
            port: builtins.int = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["load_balancer",b"load_balancer","target_group",b"target_group"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["load_balancer",b"load_balancer","port",b"port","protocol",b"protocol","target_group",b"target_group"]) -> None: ...

    VIOLATORS_FIELD_NUMBER: builtins.int
    VIOLATOR_DESCRIPTIONS_FIELD_NUMBER: builtins.int
    @property
    def violators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LbTargetsWithPublicIpResult.Violator]: ...
    @property
    def violator_descriptions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        violators: typing.Optional[typing.Iterable[global___LbTargetsWithPublicIpResult.Violator]] = ...,
        violator_descriptions: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["violator_descriptions",b"violator_descriptions","violators",b"violators"]) -> None: ...
global___LbTargetsWithPublicIpResult = LbTargetsWithPublicIpResult

class PublicInstancesInput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EXPECTED_TAGS_FIELD_NUMBER: builtins.int
    INSTANCES_FIELD_NUMBER: builtins.int
    @property
    def expected_tags(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.Tag]: ...
    @property
    def instances(self) -> intentionet.bfe.proto.assertions.parameters_pb2.AwsInstanceFilter: ...
    def __init__(self,
        *,
        expected_tags: typing.Optional[typing.Iterable[intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.Tag]] = ...,
        instances: typing.Optional[intentionet.bfe.proto.assertions.parameters_pb2.AwsInstanceFilter] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["instances",b"instances"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["expected_tags",b"expected_tags","instances",b"instances"]) -> None: ...
global___PublicInstancesInput = PublicInstancesInput

class PublicInstancesResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Violator(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        INSTANCE_FIELD_NUMBER: builtins.int
        MISSING_TAGS_FIELD_NUMBER: builtins.int
        DESCRIPTION_INDEX_FIELD_NUMBER: builtins.int
        @property
        def instance(self) -> intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsInstance: ...
        @property
        def missing_tags(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.Tag]: ...
        @property
        def description_index(self) -> intentionet.bfe.proto.assertions.violations_pb2.DescriptionIndex: ...
        def __init__(self,
            *,
            instance: typing.Optional[intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsInstance] = ...,
            missing_tags: typing.Optional[typing.Iterable[intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.Tag]] = ...,
            description_index: typing.Optional[intentionet.bfe.proto.assertions.violations_pb2.DescriptionIndex] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["description_index",b"description_index","instance",b"instance"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["description_index",b"description_index","instance",b"instance","missing_tags",b"missing_tags"]) -> None: ...

    VIOLATORS_FIELD_NUMBER: builtins.int
    VIOLATOR_DESCRIPTIONS_FIELD_NUMBER: builtins.int
    @property
    def violators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PublicInstancesResult.Violator]: ...
    @property
    def violator_descriptions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        violators: typing.Optional[typing.Iterable[global___PublicInstancesResult.Violator]] = ...,
        violator_descriptions: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["violator_descriptions",b"violator_descriptions","violators",b"violators"]) -> None: ...
global___PublicInstancesResult = PublicInstancesResult

class PassiveBgpNoSubnetAssertionInput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(self,
        ) -> None: ...
global___PassiveBgpNoSubnetAssertionInput = PassiveBgpNoSubnetAssertionInput

class PassiveBgpNoSubnetAssertionResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Element(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        PASSIVE_PEER_FIELD_NUMBER: builtins.int
        @property
        def passive_peer(self) -> intentionet.bfe.proto.datamodel.bgp_pb2.BgpPeer: ...
        def __init__(self,
            *,
            passive_peer: typing.Optional[intentionet.bfe.proto.datamodel.bgp_pb2.BgpPeer] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["passive_peer",b"passive_peer"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["passive_peer",b"passive_peer"]) -> None: ...

    VIOLATORS_FIELD_NUMBER: builtins.int
    @property
    def violators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PassiveBgpNoSubnetAssertionResult.Element]: ...
    def __init__(self,
        *,
        violators: typing.Optional[typing.Iterable[global___PassiveBgpNoSubnetAssertionResult.Element]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["violators",b"violators"]) -> None: ...
global___PassiveBgpNoSubnetAssertionResult = PassiveBgpNoSubnetAssertionResult

class SecurityGroupDoesNotHaveRuleAssertionInput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SECURITY_GROUPS_FIELD_NUMBER: builtins.int
    RULE_TYPE_FIELD_NUMBER: builtins.int
    RULES_FIELD_NUMBER: builtins.int
    @property
    def security_groups(self) -> intentionet.bfe.proto.assertions.parameters_pb2.SecurityGroupFilter: ...
    rule_type: global___SgRuleType.ValueType
    @property
    def rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[intentionet.bfe.proto.assertions.parameters_pb2.MatchSecurityGroupRules]: ...
    def __init__(self,
        *,
        security_groups: typing.Optional[intentionet.bfe.proto.assertions.parameters_pb2.SecurityGroupFilter] = ...,
        rule_type: global___SgRuleType.ValueType = ...,
        rules: typing.Optional[typing.Iterable[intentionet.bfe.proto.assertions.parameters_pb2.MatchSecurityGroupRules]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["security_groups",b"security_groups"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["rule_type",b"rule_type","rules",b"rules","security_groups",b"security_groups"]) -> None: ...
global___SecurityGroupDoesNotHaveRuleAssertionInput = SecurityGroupDoesNotHaveRuleAssertionInput

class SecurityGroupDoesNotHaveRuleAssertionResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Element(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        SECURITY_GROUP_FIELD_NUMBER: builtins.int
        DESCRIPTION_INDEX_FIELD_NUMBER: builtins.int
        @property
        def security_group(self) -> intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsSecurityGroup: ...
        @property
        def description_index(self) -> intentionet.bfe.proto.assertions.violations_pb2.DescriptionIndex: ...
        def __init__(self,
            *,
            security_group: typing.Optional[intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsSecurityGroup] = ...,
            description_index: typing.Optional[intentionet.bfe.proto.assertions.violations_pb2.DescriptionIndex] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["description_index",b"description_index","security_group",b"security_group"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["description_index",b"description_index","security_group",b"security_group"]) -> None: ...

    VIOLATORS_FIELD_NUMBER: builtins.int
    VIOLATOR_DESCRIPTIONS_FIELD_NUMBER: builtins.int
    @property
    def violators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SecurityGroupDoesNotHaveRuleAssertionResult.Element]: ...
    @property
    def violator_descriptions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        violators: typing.Optional[typing.Iterable[global___SecurityGroupDoesNotHaveRuleAssertionResult.Element]] = ...,
        violator_descriptions: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["violator_descriptions",b"violator_descriptions","violators",b"violators"]) -> None: ...
global___SecurityGroupDoesNotHaveRuleAssertionResult = SecurityGroupDoesNotHaveRuleAssertionResult

class SgRulesBlockedByNaclInput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(self,
        ) -> None: ...
global___SgRulesBlockedByNaclInput = SgRulesBlockedByNaclInput

class SgRulesBlockedByNaclResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Element(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        SECURITY_GROUP_FIELD_NUMBER: builtins.int
        NACL_ID_FIELD_NUMBER: builtins.int
        INBOUND_SECURITY_RULES_FIELD_NUMBER: builtins.int
        OUTBOUND_SECURITY_RULES_FIELD_NUMBER: builtins.int
        SUBNETS_FIELD_NUMBER: builtins.int
        DESCRIPTION_INDEX_FIELD_NUMBER: builtins.int
        @property
        def security_group(self) -> intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsSecurityGroup: ...
        nacl_id: typing.Text
        @property
        def inbound_security_rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsSecurityGroup.Rule]: ...
        @property
        def outbound_security_rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsSecurityGroup.Rule]: ...
        @property
        def subnets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsSubnet]: ...
        @property
        def description_index(self) -> intentionet.bfe.proto.assertions.violations_pb2.DescriptionIndex: ...
        def __init__(self,
            *,
            security_group: typing.Optional[intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsSecurityGroup] = ...,
            nacl_id: typing.Text = ...,
            inbound_security_rules: typing.Optional[typing.Iterable[intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsSecurityGroup.Rule]] = ...,
            outbound_security_rules: typing.Optional[typing.Iterable[intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsSecurityGroup.Rule]] = ...,
            subnets: typing.Optional[typing.Iterable[intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsSubnet]] = ...,
            description_index: typing.Optional[intentionet.bfe.proto.assertions.violations_pb2.DescriptionIndex] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["description_index",b"description_index","security_group",b"security_group"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["description_index",b"description_index","inbound_security_rules",b"inbound_security_rules","nacl_id",b"nacl_id","outbound_security_rules",b"outbound_security_rules","security_group",b"security_group","subnets",b"subnets"]) -> None: ...

    VIOLATORS_FIELD_NUMBER: builtins.int
    VIOLATOR_DESCRIPTIONS_FIELD_NUMBER: builtins.int
    @property
    def violators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SgRulesBlockedByNaclResult.Element]: ...
    @property
    def violator_descriptions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        violators: typing.Optional[typing.Iterable[global___SgRulesBlockedByNaclResult.Element]] = ...,
        violator_descriptions: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["violator_descriptions",b"violator_descriptions","violators",b"violators"]) -> None: ...
global___SgRulesBlockedByNaclResult = SgRulesBlockedByNaclResult

class SteppingStonesInput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DST_IPS_FIELD_NUMBER: builtins.int
    INCLUDED_TAGS_FIELD_NUMBER: builtins.int
    dst_ips: typing.Text
    @property
    def included_tags(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.Tag]: ...
    def __init__(self,
        *,
        dst_ips: typing.Text = ...,
        included_tags: typing.Optional[typing.Iterable[intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.Tag]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dst_ips",b"dst_ips","included_tags",b"included_tags"]) -> None: ...
global___SteppingStonesInput = SteppingStonesInput

class SteppingStonesResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Violator(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        INSTANCE_FIELD_NUMBER: builtins.int
        FLOWS_FIELD_NUMBER: builtins.int
        DESCRIPTION_INDEX_FIELD_NUMBER: builtins.int
        @property
        def instance(self) -> intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsInstance: ...
        @property
        def flows(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[intentionet.bfe.proto.datamodel.flow_pb2.Flow]: ...
        @property
        def description_index(self) -> intentionet.bfe.proto.assertions.violations_pb2.DescriptionIndex: ...
        def __init__(self,
            *,
            instance: typing.Optional[intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsInstance] = ...,
            flows: typing.Optional[typing.Iterable[intentionet.bfe.proto.datamodel.flow_pb2.Flow]] = ...,
            description_index: typing.Optional[intentionet.bfe.proto.assertions.violations_pb2.DescriptionIndex] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["description_index",b"description_index","instance",b"instance"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["description_index",b"description_index","flows",b"flows","instance",b"instance"]) -> None: ...

    VIOLATORS_FIELD_NUMBER: builtins.int
    VIOLATOR_DESCRIPTIONS_FIELD_NUMBER: builtins.int
    @property
    def violators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SteppingStonesResult.Violator]: ...
    @property
    def violator_descriptions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        violators: typing.Optional[typing.Iterable[global___SteppingStonesResult.Violator]] = ...,
        violator_descriptions: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["violator_descriptions",b"violator_descriptions","violators",b"violators"]) -> None: ...
global___SteppingStonesResult = SteppingStonesResult

class VpcEndpointForS3Input(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INSTANCES_FIELD_NUMBER: builtins.int
    @property
    def instances(self) -> intentionet.bfe.proto.assertions.parameters_pb2.AwsInstanceFilter: ...
    def __init__(self,
        *,
        instances: typing.Optional[intentionet.bfe.proto.assertions.parameters_pb2.AwsInstanceFilter] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["instances",b"instances"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["instances",b"instances"]) -> None: ...
global___VpcEndpointForS3Input = VpcEndpointForS3Input

class VpcEndpointForS3Result(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Violator(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        INSTANCE_FIELD_NUMBER: builtins.int
        FLOWS_FIELD_NUMBER: builtins.int
        VPC_ENDPOINTS_FIELD_NUMBER: builtins.int
        DESCRIPTION_INDEX_FIELD_NUMBER: builtins.int
        @property
        def instance(self) -> intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsInstance: ...
        @property
        def flows(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[intentionet.bfe.proto.datamodel.flow_pb2.Flow]: ...
        @property
        def vpc_endpoints(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
        @property
        def description_index(self) -> intentionet.bfe.proto.assertions.violations_pb2.DescriptionIndex: ...
        def __init__(self,
            *,
            instance: typing.Optional[intentionet.bfe.proto.datamodel.aws.aws_primitives_pb2.AwsInstance] = ...,
            flows: typing.Optional[typing.Iterable[intentionet.bfe.proto.datamodel.flow_pb2.Flow]] = ...,
            vpc_endpoints: typing.Optional[typing.Iterable[typing.Text]] = ...,
            description_index: typing.Optional[intentionet.bfe.proto.assertions.violations_pb2.DescriptionIndex] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["description_index",b"description_index","instance",b"instance"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["description_index",b"description_index","flows",b"flows","instance",b"instance","vpc_endpoints",b"vpc_endpoints"]) -> None: ...

    VIOLATORS_FIELD_NUMBER: builtins.int
    VIOLATOR_DESCRIPTIONS_FIELD_NUMBER: builtins.int
    @property
    def violators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VpcEndpointForS3Result.Violator]: ...
    @property
    def violator_descriptions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        violators: typing.Optional[typing.Iterable[global___VpcEndpointForS3Result.Violator]] = ...,
        violator_descriptions: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["violator_descriptions",b"violator_descriptions","violators",b"violators"]) -> None: ...
global___VpcEndpointForS3Result = VpcEndpointForS3Result
