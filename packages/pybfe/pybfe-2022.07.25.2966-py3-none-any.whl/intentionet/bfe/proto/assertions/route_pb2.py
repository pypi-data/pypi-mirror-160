# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: intentionet/bfe/proto/assertions/route.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from intentionet.bfe.proto.assertions import violations_pb2 as intentionet_dot_bfe_dot_proto_dot_assertions_dot_violations__pb2
from intentionet.bfe.proto.assertions import parameters_pb2 as intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2
from intentionet.bfe.proto.datamodel import device_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_device__pb2
from intentionet.bfe.proto.datamodel.route import route_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_route_dot_route__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n,intentionet/bfe/proto/assertions/route.proto\x12\x1e\x63om.intentionet.bfe.assertions\x1a\x1bgoogle/protobuf/empty.proto\x1a\x31intentionet/bfe/proto/assertions/violations.proto\x1a\x31intentionet/bfe/proto/assertions/parameters.proto\x1a,intentionet/bfe/proto/datamodel/device.proto\x1a\x31intentionet/bfe/proto/datamodel/route/route.proto\"\xad\x01\n\x1f\x44\x65vicesHaveRoutesAssertionInput\x12\x41\n\x04vrfs\x18\x01 \x01(\x0b\x32-.com.intentionet.bfe.assertions.VrfFilterExprR\x04vrfs\x12G\n\x06routes\x18\x02 \x01(\x0b\x32/.com.intentionet.bfe.assertions.MatchRoutesExprR\x06routes\"\xad\x01\n\x0fMatchRoutesExpr\x12H\n\x03\x61ny\x18\x01 \x01(\x0b\x32\x34.com.intentionet.bfe.assertions.MatchRoutesAnyOfExprH\x00R\x03\x61ny\x12H\n\x03\x61ll\x18\x02 \x01(\x0b\x32\x34.com.intentionet.bfe.assertions.MatchRoutesAllOfExprH\x00R\x03\x61llB\x06\n\x04\x65xpr\"V\n\x14MatchRoutesAnyOfExpr\x12>\n\x02of\x18\x01 \x03(\x0b\x32..com.intentionet.bfe.assertions.MatchRouteExprR\x02of\"V\n\x14MatchRoutesAllOfExpr\x12>\n\x02of\x18\x01 \x03(\x0b\x32..com.intentionet.bfe.assertions.MatchRouteExprR\x02of\"\xea\x02\n\x0eMatchRouteExpr\x12K\n\x07network\x18\x01 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.MatchIpPrefixExprR\x07network\x12\x30\n\x06static\x18\x02 \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00R\x06static\x12@\n\x03\x62gp\x18\x03 \x01(\x0b\x32,.com.intentionet.bfe.assertions.MatchBgpExprH\x00R\x03\x62gp\x12\x43\n\x04ospf\x18\x04 \x01(\x0b\x32-.com.intentionet.bfe.assertions.MatchOspfExprH\x00R\x04ospf\x12\x46\n\x05\x65igrp\x18\x05 \x01(\x0b\x32..com.intentionet.bfe.assertions.MatchEigrpExprH\x00R\x05\x65igrpB\n\n\x08protocol\"\x10\n\x0eMatchEigrpExpr\"\x0e\n\x0cMatchBgpExpr\"\x0f\n\rMatchOspfExpr\"\xfa\x07\n DevicesHaveRoutesAssertionResult\x12j\n\nconformers\x18\x01 \x03(\x0b\x32J.com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionResult.ConformerR\nconformers\x12g\n\tviolators\x18\x02 \x03(\x0b\x32I.com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionResult.ViolatorR\tviolators\x12\x33\n\x15violator_descriptions\x18\x03 \x03(\tR\x14violatorDescriptions\x1a\xc6\x02\n\x08Violator\x12\x39\n\x06\x64\x65vice\x18\x01 \x01(\x0b\x32!.com.intentionet.datamodel.DeviceR\x06\x64\x65vice\x12\x30\n\x03vrf\x18\x02 \x01(\x0b\x32\x1e.com.intentionet.datamodel.VrfR\x03vrf\x12]\n\x11\x64\x65scription_index\x18\x04 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DescriptionIndexR\x10\x64\x65scriptionIndex\x12n\n\x0b\x65xprMatches\x18\x05 \x03(\x0b\x32L.com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionResult.ExprMatchesR\x0b\x65xprMatches\x1a\xee\x01\n\tConformer\x12\x39\n\x06\x64\x65vice\x18\x01 \x01(\x0b\x32!.com.intentionet.datamodel.DeviceR\x06\x64\x65vice\x12\x30\n\x03vrf\x18\x02 \x01(\x0b\x32\x1e.com.intentionet.datamodel.VrfR\x03vrf\x12n\n\x0b\x65xprMatches\x18\x04 \x03(\x0b\x32L.com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionResult.ExprMatchesR\x0b\x65xprMatchesJ\x04\x08\x03\x10\x04\x1a\x91\x01\n\x0b\x45xprMatches\x12\x42\n\x04\x65xpr\x18\x01 \x01(\x0b\x32..com.intentionet.bfe.assertions.MatchRouteExprR\x04\x65xpr\x12>\n\x06routes\x18\x02 \x03(\x0b\x32&.com.intentionet.datamodel.route.RouteR\x06routesb\x06proto3')



_DEVICESHAVEROUTESASSERTIONINPUT = DESCRIPTOR.message_types_by_name['DevicesHaveRoutesAssertionInput']
_MATCHROUTESEXPR = DESCRIPTOR.message_types_by_name['MatchRoutesExpr']
_MATCHROUTESANYOFEXPR = DESCRIPTOR.message_types_by_name['MatchRoutesAnyOfExpr']
_MATCHROUTESALLOFEXPR = DESCRIPTOR.message_types_by_name['MatchRoutesAllOfExpr']
_MATCHROUTEEXPR = DESCRIPTOR.message_types_by_name['MatchRouteExpr']
_MATCHEIGRPEXPR = DESCRIPTOR.message_types_by_name['MatchEigrpExpr']
_MATCHBGPEXPR = DESCRIPTOR.message_types_by_name['MatchBgpExpr']
_MATCHOSPFEXPR = DESCRIPTOR.message_types_by_name['MatchOspfExpr']
_DEVICESHAVEROUTESASSERTIONRESULT = DESCRIPTOR.message_types_by_name['DevicesHaveRoutesAssertionResult']
_DEVICESHAVEROUTESASSERTIONRESULT_VIOLATOR = _DEVICESHAVEROUTESASSERTIONRESULT.nested_types_by_name['Violator']
_DEVICESHAVEROUTESASSERTIONRESULT_CONFORMER = _DEVICESHAVEROUTESASSERTIONRESULT.nested_types_by_name['Conformer']
_DEVICESHAVEROUTESASSERTIONRESULT_EXPRMATCHES = _DEVICESHAVEROUTESASSERTIONRESULT.nested_types_by_name['ExprMatches']
DevicesHaveRoutesAssertionInput = _reflection.GeneratedProtocolMessageType('DevicesHaveRoutesAssertionInput', (_message.Message,), {
  'DESCRIPTOR' : _DEVICESHAVEROUTESASSERTIONINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.route_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionInput)
  })
_sym_db.RegisterMessage(DevicesHaveRoutesAssertionInput)

MatchRoutesExpr = _reflection.GeneratedProtocolMessageType('MatchRoutesExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHROUTESEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.route_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchRoutesExpr)
  })
_sym_db.RegisterMessage(MatchRoutesExpr)

MatchRoutesAnyOfExpr = _reflection.GeneratedProtocolMessageType('MatchRoutesAnyOfExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHROUTESANYOFEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.route_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchRoutesAnyOfExpr)
  })
_sym_db.RegisterMessage(MatchRoutesAnyOfExpr)

MatchRoutesAllOfExpr = _reflection.GeneratedProtocolMessageType('MatchRoutesAllOfExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHROUTESALLOFEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.route_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchRoutesAllOfExpr)
  })
_sym_db.RegisterMessage(MatchRoutesAllOfExpr)

MatchRouteExpr = _reflection.GeneratedProtocolMessageType('MatchRouteExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHROUTEEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.route_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchRouteExpr)
  })
_sym_db.RegisterMessage(MatchRouteExpr)

MatchEigrpExpr = _reflection.GeneratedProtocolMessageType('MatchEigrpExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHEIGRPEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.route_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchEigrpExpr)
  })
_sym_db.RegisterMessage(MatchEigrpExpr)

MatchBgpExpr = _reflection.GeneratedProtocolMessageType('MatchBgpExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHBGPEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.route_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchBgpExpr)
  })
_sym_db.RegisterMessage(MatchBgpExpr)

MatchOspfExpr = _reflection.GeneratedProtocolMessageType('MatchOspfExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHOSPFEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.route_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchOspfExpr)
  })
_sym_db.RegisterMessage(MatchOspfExpr)

DevicesHaveRoutesAssertionResult = _reflection.GeneratedProtocolMessageType('DevicesHaveRoutesAssertionResult', (_message.Message,), {

  'Violator' : _reflection.GeneratedProtocolMessageType('Violator', (_message.Message,), {
    'DESCRIPTOR' : _DEVICESHAVEROUTESASSERTIONRESULT_VIOLATOR,
    '__module__' : 'intentionet.bfe.proto.assertions.route_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionResult.Violator)
    })
  ,

  'Conformer' : _reflection.GeneratedProtocolMessageType('Conformer', (_message.Message,), {
    'DESCRIPTOR' : _DEVICESHAVEROUTESASSERTIONRESULT_CONFORMER,
    '__module__' : 'intentionet.bfe.proto.assertions.route_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionResult.Conformer)
    })
  ,

  'ExprMatches' : _reflection.GeneratedProtocolMessageType('ExprMatches', (_message.Message,), {
    'DESCRIPTOR' : _DEVICESHAVEROUTESASSERTIONRESULT_EXPRMATCHES,
    '__module__' : 'intentionet.bfe.proto.assertions.route_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionResult.ExprMatches)
    })
  ,
  'DESCRIPTOR' : _DEVICESHAVEROUTESASSERTIONRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.route_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionResult)
  })
_sym_db.RegisterMessage(DevicesHaveRoutesAssertionResult)
_sym_db.RegisterMessage(DevicesHaveRoutesAssertionResult.Violator)
_sym_db.RegisterMessage(DevicesHaveRoutesAssertionResult.Conformer)
_sym_db.RegisterMessage(DevicesHaveRoutesAssertionResult.ExprMatches)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _DEVICESHAVEROUTESASSERTIONINPUT._serialized_start=309
  _DEVICESHAVEROUTESASSERTIONINPUT._serialized_end=482
  _MATCHROUTESEXPR._serialized_start=485
  _MATCHROUTESEXPR._serialized_end=658
  _MATCHROUTESANYOFEXPR._serialized_start=660
  _MATCHROUTESANYOFEXPR._serialized_end=746
  _MATCHROUTESALLOFEXPR._serialized_start=748
  _MATCHROUTESALLOFEXPR._serialized_end=834
  _MATCHROUTEEXPR._serialized_start=837
  _MATCHROUTEEXPR._serialized_end=1199
  _MATCHEIGRPEXPR._serialized_start=1201
  _MATCHEIGRPEXPR._serialized_end=1217
  _MATCHBGPEXPR._serialized_start=1219
  _MATCHBGPEXPR._serialized_end=1233
  _MATCHOSPFEXPR._serialized_start=1235
  _MATCHOSPFEXPR._serialized_end=1250
  _DEVICESHAVEROUTESASSERTIONRESULT._serialized_start=1253
  _DEVICESHAVEROUTESASSERTIONRESULT._serialized_end=2271
  _DEVICESHAVEROUTESASSERTIONRESULT_VIOLATOR._serialized_start=1556
  _DEVICESHAVEROUTESASSERTIONRESULT_VIOLATOR._serialized_end=1882
  _DEVICESHAVEROUTESASSERTIONRESULT_CONFORMER._serialized_start=1885
  _DEVICESHAVEROUTESASSERTIONRESULT_CONFORMER._serialized_end=2123
  _DEVICESHAVEROUTESASSERTIONRESULT_EXPRMATCHES._serialized_start=2126
  _DEVICESHAVEROUTESASSERTIONRESULT_EXPRMATCHES._serialized_end=2271
# @@protoc_insertion_point(module_scope)
