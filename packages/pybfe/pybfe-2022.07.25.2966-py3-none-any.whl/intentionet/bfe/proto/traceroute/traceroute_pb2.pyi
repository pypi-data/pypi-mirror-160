"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.wrappers_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class TracerouteToolParams(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class TcpFlags(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        SYN_FIELD_NUMBER: builtins.int
        ACK_FIELD_NUMBER: builtins.int
        RST_FIELD_NUMBER: builtins.int
        PSH_FIELD_NUMBER: builtins.int
        URG_FIELD_NUMBER: builtins.int
        FIN_FIELD_NUMBER: builtins.int
        ECE_FIELD_NUMBER: builtins.int
        CWR_FIELD_NUMBER: builtins.int
        syn: builtins.bool
        ack: builtins.bool
        rst: builtins.bool
        psh: builtins.bool
        urg: builtins.bool
        fin: builtins.bool
        ece: builtins.bool
        cwr: builtins.bool
        def __init__(self,
            *,
            syn: builtins.bool = ...,
            ack: builtins.bool = ...,
            rst: builtins.bool = ...,
            psh: builtins.bool = ...,
            urg: builtins.bool = ...,
            fin: builtins.bool = ...,
            ece: builtins.bool = ...,
            cwr: builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["ack",b"ack","cwr",b"cwr","ece",b"ece","fin",b"fin","psh",b"psh","rst",b"rst","syn",b"syn","urg",b"urg"]) -> None: ...

    FROM_FIELD_NUMBER: builtins.int
    SOURCE_IP_FIELD_NUMBER: builtins.int
    TO_FIELD_NUMBER: builtins.int
    APP_FIELD_NUMBER: builtins.int
    BIDIRECTIONAL_FIELD_NUMBER: builtins.int
    SOURCE_PORT_FIELD_NUMBER: builtins.int
    DSCP_FIELD_NUMBER: builtins.int
    ECN_FIELD_NUMBER: builtins.int
    FRAGMENT_OFFSET_FIELD_NUMBER: builtins.int
    PACKET_LENGTH_FIELD_NUMBER: builtins.int
    TCP_FLAGS_FIELD_NUMBER: builtins.int
    @property
    def source_ip(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def to(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def app(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def bidirectional(self) -> google.protobuf.wrappers_pb2.BoolValue: ...
    @property
    def source_port(self) -> google.protobuf.wrappers_pb2.UInt32Value: ...
    @property
    def dscp(self) -> google.protobuf.wrappers_pb2.UInt32Value: ...
    @property
    def ecn(self) -> google.protobuf.wrappers_pb2.UInt32Value: ...
    @property
    def fragment_offset(self) -> google.protobuf.wrappers_pb2.UInt32Value: ...
    @property
    def packet_length(self) -> google.protobuf.wrappers_pb2.UInt32Value: ...
    @property
    def tcp_flags(self) -> global___TracerouteToolParams.TcpFlags: ...
    def __init__(self,
        *,
        source_ip: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        to: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        app: typing.Optional[google.protobuf.wrappers_pb2.StringValue] = ...,
        bidirectional: typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        source_port: typing.Optional[google.protobuf.wrappers_pb2.UInt32Value] = ...,
        dscp: typing.Optional[google.protobuf.wrappers_pb2.UInt32Value] = ...,
        ecn: typing.Optional[google.protobuf.wrappers_pb2.UInt32Value] = ...,
        fragment_offset: typing.Optional[google.protobuf.wrappers_pb2.UInt32Value] = ...,
        packet_length: typing.Optional[google.protobuf.wrappers_pb2.UInt32Value] = ...,
        tcp_flags: typing.Optional[global___TracerouteToolParams.TcpFlags] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["app",b"app","bidirectional",b"bidirectional","dscp",b"dscp","ecn",b"ecn","fragment_offset",b"fragment_offset","from",b"from","packet_length",b"packet_length","source_ip",b"source_ip","source_port",b"source_port","tcp_flags",b"tcp_flags","to",b"to"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["app",b"app","bidirectional",b"bidirectional","dscp",b"dscp","ecn",b"ecn","fragment_offset",b"fragment_offset","from",b"from","packet_length",b"packet_length","source_ip",b"source_ip","source_port",b"source_port","tcp_flags",b"tcp_flags","to",b"to"]) -> None: ...
global___TracerouteToolParams = TracerouteToolParams
