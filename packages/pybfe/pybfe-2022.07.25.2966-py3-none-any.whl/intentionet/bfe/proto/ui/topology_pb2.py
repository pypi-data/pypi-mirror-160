# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: intentionet/bfe/proto/ui/topology.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from intentionet.bfe.proto.datamodel import ip_primitives_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_ip__primitives__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\'intentionet/bfe/proto/ui/topology.proto\x12\x1c\x63om.intentionet.bfe.proto.ui\x1a\x33intentionet/bfe/proto/datamodel/ip_primitives.proto\"\xaf\x06\n\x0fTopologySummary\x12\x1c\n\thostnames\x18\x01 \x03(\tR\thostnames\x12\'\n\x0finterface_names\x18\x02 \x03(\tR\x0einterfaceNames\x12\x44\n\x06subnet\x18\x03 \x01(\x0b\x32,.com.intentionet.bfe.proto.ui.SubnetTopologyR\x06subnet\x12\x44\n\x06layer1\x18\x05 \x01(\x0b\x32,.com.intentionet.bfe.proto.ui.Layer1TopologyR\x06layer1\x12;\n\x03\x62gp\x18\x06 \x01(\x0b\x32).com.intentionet.bfe.proto.ui.BgpTopologyR\x03\x62gp\x12\x41\n\x05\x65igrp\x18\x07 \x01(\x0b\x32+.com.intentionet.bfe.proto.ui.EigrpTopologyR\x05\x65igrp\x12\x41\n\x05ipsec\x18\x08 \x01(\x0b\x32+.com.intentionet.bfe.proto.ui.IpSecTopologyR\x05ipsec\x12>\n\x04isis\x18\t \x01(\x0b\x32*.com.intentionet.bfe.proto.ui.IsIsTopologyR\x04isis\x12>\n\x04ospf\x18\n \x01(\x0b\x32*.com.intentionet.bfe.proto.ui.OspfTopologyR\x04ospf\x12\x41\n\x05vxlan\x18\x0c \x01(\x0b\x32+.com.intentionet.bfe.proto.ui.VxlanTopologyR\x05vxlan\x12!\n\x0c\x64\x65vice_types\x18\r \x03(\tR\x0b\x64\x65viceTypes\x12#\n\rdevice_models\x18\x0e \x03(\tR\x0c\x64\x65viceModels\x12\x1f\n\x0bhuman_names\x18\x10 \x03(\tR\nhumanNames\x12Z\n\x14hostname_device_info\x18\x0f \x03(\x0b\x32(.com.intentionet.bfe.proto.ui.DeviceInfoR\x12hostnameDeviceInfo\"\x90\x01\n\nDeviceInfo\x12*\n\x11\x64\x65vice_type_index\x18\x01 \x01(\x05R\x0f\x64\x65viceTypeIndex\x12,\n\x12\x64\x65vice_model_index\x18\x02 \x01(\x05R\x10\x64\x65viceModelIndex\x12(\n\x10human_name_index\x18\x03 \x01(\x05R\x0ehumanNameIndex\"Q\n\x0cInterfaceRef\x12\x1a\n\x08hostname\x18\x01 \x01(\x05R\x08hostname\x12%\n\x0einterface_name\x18\x02 \x01(\x05R\rinterfaceName\"\xd3\x01\n\x0eSubnetTopology\x12@\n\x07subnets\x18\x01 \x03(\x0b\x32&.com.intentionet.bfe.proto.ui.SubnetIdR\x07subnets\x12>\n\x05\x65\x64ges\x18\x02 \x03(\x0b\x32(.com.intentionet.bfe.proto.ui.SubnetEdgeR\x05\x65\x64ges\x12?\n\x08prefixes\x18\x03 \x03(\x0b\x32#.com.intentionet.datamodel.IpPrefixR\x08prefixes\"2\n\x08SubnetId\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n\x06prefix\x18\x02 \x01(\x05R\x06prefix\"\xe4\x01\n\nSubnetEdge\x12H\n\theadIface\x18\x01 \x01(\x0b\x32*.com.intentionet.bfe.proto.ui.InterfaceRefR\theadIface\x12J\n\ttailIface\x18\x02 \x01(\x0b\x32*.com.intentionet.bfe.proto.ui.InterfaceRefH\x00R\ttailIface\x12 \n\ntailSubnet\x18\x03 \x01(\x05H\x00R\ntailSubnet\x12\x16\n\x06prefix\x18\x04 \x01(\x05R\x06prefixB\x06\n\x04tail\"N\n\x0eLayer1Topology\x12<\n\x04\x65\x64ge\x18\x01 \x03(\x0b\x32(.com.intentionet.bfe.proto.ui.Layer1EdgeR\x04\x65\x64ge\"D\n\nLayer1Edge\x12\x1a\n\x08headNode\x18\x01 \x01(\x05R\x08headNode\x12\x1a\n\x08tailNode\x18\x02 \x01(\x05R\x08tailNode\"H\n\x0b\x42gpTopology\x12\x39\n\x04\x65\x64ge\x18\x01 \x03(\x0b\x32%.com.intentionet.bfe.proto.ui.BgpEdgeR\x04\x65\x64ge\"A\n\x07\x42gpEdge\x12\x1a\n\x08headNode\x18\x01 \x01(\x05R\x08headNode\x12\x1a\n\x08tailNode\x18\x02 \x01(\x05R\x08tailNode\"L\n\rEigrpTopology\x12;\n\x04\x65\x64ge\x18\x01 \x03(\x0b\x32\'.com.intentionet.bfe.proto.ui.EigrpEdgeR\x04\x65\x64ge\"C\n\tEigrpEdge\x12\x1a\n\x08headNode\x18\x01 \x01(\x05R\x08headNode\x12\x1a\n\x08tailNode\x18\x02 \x01(\x05R\x08tailNode\"L\n\rIpSecTopology\x12;\n\x04\x65\x64ge\x18\x01 \x03(\x0b\x32\'.com.intentionet.bfe.proto.ui.IpSecEdgeR\x04\x65\x64ge\"C\n\tIpSecEdge\x12\x1a\n\x08headNode\x18\x01 \x01(\x05R\x08headNode\x12\x1a\n\x08tailNode\x18\x02 \x01(\x05R\x08tailNode\"J\n\x0cIsIsTopology\x12:\n\x04\x65\x64ge\x18\x01 \x03(\x0b\x32&.com.intentionet.bfe.proto.ui.IsIsEdgeR\x04\x65\x64ge\"B\n\x08IsIsEdge\x12\x1a\n\x08headNode\x18\x01 \x01(\x05R\x08headNode\x12\x1a\n\x08tailNode\x18\x02 \x01(\x05R\x08tailNode\"J\n\x0cOspfTopology\x12:\n\x04\x65\x64ge\x18\x01 \x03(\x0b\x32&.com.intentionet.bfe.proto.ui.OspfEdgeR\x04\x65\x64ge\"B\n\x08OspfEdge\x12\x1a\n\x08headNode\x18\x01 \x01(\x05R\x08headNode\x12\x1a\n\x08tailNode\x18\x02 \x01(\x05R\x08tailNode\"H\n\x0bRipTopology\x12\x39\n\x04\x65\x64ge\x18\x01 \x03(\x0b\x32%.com.intentionet.bfe.proto.ui.RipEdgeR\x04\x65\x64ge\"A\n\x07RipEdge\x12\x1a\n\x08headNode\x18\x01 \x01(\x05R\x08headNode\x12\x1a\n\x08tailNode\x18\x02 \x01(\x05R\x08tailNode\"L\n\rVxlanTopology\x12;\n\x04\x65\x64ge\x18\x01 \x03(\x0b\x32\'.com.intentionet.bfe.proto.ui.VxlanEdgeR\x04\x65\x64ge\"C\n\tVxlanEdge\x12\x1a\n\x08headNode\x18\x01 \x01(\x05R\x08headNode\x12\x1a\n\x08tailNode\x18\x02 \x01(\x05R\x08tailNodeB>\n\x1c\x63om.intentionet.bfe.proto.uiP\x01Z\x1cintentionet.com/bfe/proto/uib\x06proto3')



_TOPOLOGYSUMMARY = DESCRIPTOR.message_types_by_name['TopologySummary']
_DEVICEINFO = DESCRIPTOR.message_types_by_name['DeviceInfo']
_INTERFACEREF = DESCRIPTOR.message_types_by_name['InterfaceRef']
_SUBNETTOPOLOGY = DESCRIPTOR.message_types_by_name['SubnetTopology']
_SUBNETID = DESCRIPTOR.message_types_by_name['SubnetId']
_SUBNETEDGE = DESCRIPTOR.message_types_by_name['SubnetEdge']
_LAYER1TOPOLOGY = DESCRIPTOR.message_types_by_name['Layer1Topology']
_LAYER1EDGE = DESCRIPTOR.message_types_by_name['Layer1Edge']
_BGPTOPOLOGY = DESCRIPTOR.message_types_by_name['BgpTopology']
_BGPEDGE = DESCRIPTOR.message_types_by_name['BgpEdge']
_EIGRPTOPOLOGY = DESCRIPTOR.message_types_by_name['EigrpTopology']
_EIGRPEDGE = DESCRIPTOR.message_types_by_name['EigrpEdge']
_IPSECTOPOLOGY = DESCRIPTOR.message_types_by_name['IpSecTopology']
_IPSECEDGE = DESCRIPTOR.message_types_by_name['IpSecEdge']
_ISISTOPOLOGY = DESCRIPTOR.message_types_by_name['IsIsTopology']
_ISISEDGE = DESCRIPTOR.message_types_by_name['IsIsEdge']
_OSPFTOPOLOGY = DESCRIPTOR.message_types_by_name['OspfTopology']
_OSPFEDGE = DESCRIPTOR.message_types_by_name['OspfEdge']
_RIPTOPOLOGY = DESCRIPTOR.message_types_by_name['RipTopology']
_RIPEDGE = DESCRIPTOR.message_types_by_name['RipEdge']
_VXLANTOPOLOGY = DESCRIPTOR.message_types_by_name['VxlanTopology']
_VXLANEDGE = DESCRIPTOR.message_types_by_name['VxlanEdge']
TopologySummary = _reflection.GeneratedProtocolMessageType('TopologySummary', (_message.Message,), {
  'DESCRIPTOR' : _TOPOLOGYSUMMARY,
  '__module__' : 'intentionet.bfe.proto.ui.topology_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.proto.ui.TopologySummary)
  })
_sym_db.RegisterMessage(TopologySummary)

DeviceInfo = _reflection.GeneratedProtocolMessageType('DeviceInfo', (_message.Message,), {
  'DESCRIPTOR' : _DEVICEINFO,
  '__module__' : 'intentionet.bfe.proto.ui.topology_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.proto.ui.DeviceInfo)
  })
_sym_db.RegisterMessage(DeviceInfo)

InterfaceRef = _reflection.GeneratedProtocolMessageType('InterfaceRef', (_message.Message,), {
  'DESCRIPTOR' : _INTERFACEREF,
  '__module__' : 'intentionet.bfe.proto.ui.topology_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.proto.ui.InterfaceRef)
  })
_sym_db.RegisterMessage(InterfaceRef)

SubnetTopology = _reflection.GeneratedProtocolMessageType('SubnetTopology', (_message.Message,), {
  'DESCRIPTOR' : _SUBNETTOPOLOGY,
  '__module__' : 'intentionet.bfe.proto.ui.topology_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.proto.ui.SubnetTopology)
  })
_sym_db.RegisterMessage(SubnetTopology)

SubnetId = _reflection.GeneratedProtocolMessageType('SubnetId', (_message.Message,), {
  'DESCRIPTOR' : _SUBNETID,
  '__module__' : 'intentionet.bfe.proto.ui.topology_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.proto.ui.SubnetId)
  })
_sym_db.RegisterMessage(SubnetId)

SubnetEdge = _reflection.GeneratedProtocolMessageType('SubnetEdge', (_message.Message,), {
  'DESCRIPTOR' : _SUBNETEDGE,
  '__module__' : 'intentionet.bfe.proto.ui.topology_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.proto.ui.SubnetEdge)
  })
_sym_db.RegisterMessage(SubnetEdge)

Layer1Topology = _reflection.GeneratedProtocolMessageType('Layer1Topology', (_message.Message,), {
  'DESCRIPTOR' : _LAYER1TOPOLOGY,
  '__module__' : 'intentionet.bfe.proto.ui.topology_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.proto.ui.Layer1Topology)
  })
_sym_db.RegisterMessage(Layer1Topology)

Layer1Edge = _reflection.GeneratedProtocolMessageType('Layer1Edge', (_message.Message,), {
  'DESCRIPTOR' : _LAYER1EDGE,
  '__module__' : 'intentionet.bfe.proto.ui.topology_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.proto.ui.Layer1Edge)
  })
_sym_db.RegisterMessage(Layer1Edge)

BgpTopology = _reflection.GeneratedProtocolMessageType('BgpTopology', (_message.Message,), {
  'DESCRIPTOR' : _BGPTOPOLOGY,
  '__module__' : 'intentionet.bfe.proto.ui.topology_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.proto.ui.BgpTopology)
  })
_sym_db.RegisterMessage(BgpTopology)

BgpEdge = _reflection.GeneratedProtocolMessageType('BgpEdge', (_message.Message,), {
  'DESCRIPTOR' : _BGPEDGE,
  '__module__' : 'intentionet.bfe.proto.ui.topology_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.proto.ui.BgpEdge)
  })
_sym_db.RegisterMessage(BgpEdge)

EigrpTopology = _reflection.GeneratedProtocolMessageType('EigrpTopology', (_message.Message,), {
  'DESCRIPTOR' : _EIGRPTOPOLOGY,
  '__module__' : 'intentionet.bfe.proto.ui.topology_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.proto.ui.EigrpTopology)
  })
_sym_db.RegisterMessage(EigrpTopology)

EigrpEdge = _reflection.GeneratedProtocolMessageType('EigrpEdge', (_message.Message,), {
  'DESCRIPTOR' : _EIGRPEDGE,
  '__module__' : 'intentionet.bfe.proto.ui.topology_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.proto.ui.EigrpEdge)
  })
_sym_db.RegisterMessage(EigrpEdge)

IpSecTopology = _reflection.GeneratedProtocolMessageType('IpSecTopology', (_message.Message,), {
  'DESCRIPTOR' : _IPSECTOPOLOGY,
  '__module__' : 'intentionet.bfe.proto.ui.topology_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.proto.ui.IpSecTopology)
  })
_sym_db.RegisterMessage(IpSecTopology)

IpSecEdge = _reflection.GeneratedProtocolMessageType('IpSecEdge', (_message.Message,), {
  'DESCRIPTOR' : _IPSECEDGE,
  '__module__' : 'intentionet.bfe.proto.ui.topology_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.proto.ui.IpSecEdge)
  })
_sym_db.RegisterMessage(IpSecEdge)

IsIsTopology = _reflection.GeneratedProtocolMessageType('IsIsTopology', (_message.Message,), {
  'DESCRIPTOR' : _ISISTOPOLOGY,
  '__module__' : 'intentionet.bfe.proto.ui.topology_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.proto.ui.IsIsTopology)
  })
_sym_db.RegisterMessage(IsIsTopology)

IsIsEdge = _reflection.GeneratedProtocolMessageType('IsIsEdge', (_message.Message,), {
  'DESCRIPTOR' : _ISISEDGE,
  '__module__' : 'intentionet.bfe.proto.ui.topology_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.proto.ui.IsIsEdge)
  })
_sym_db.RegisterMessage(IsIsEdge)

OspfTopology = _reflection.GeneratedProtocolMessageType('OspfTopology', (_message.Message,), {
  'DESCRIPTOR' : _OSPFTOPOLOGY,
  '__module__' : 'intentionet.bfe.proto.ui.topology_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.proto.ui.OspfTopology)
  })
_sym_db.RegisterMessage(OspfTopology)

OspfEdge = _reflection.GeneratedProtocolMessageType('OspfEdge', (_message.Message,), {
  'DESCRIPTOR' : _OSPFEDGE,
  '__module__' : 'intentionet.bfe.proto.ui.topology_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.proto.ui.OspfEdge)
  })
_sym_db.RegisterMessage(OspfEdge)

RipTopology = _reflection.GeneratedProtocolMessageType('RipTopology', (_message.Message,), {
  'DESCRIPTOR' : _RIPTOPOLOGY,
  '__module__' : 'intentionet.bfe.proto.ui.topology_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.proto.ui.RipTopology)
  })
_sym_db.RegisterMessage(RipTopology)

RipEdge = _reflection.GeneratedProtocolMessageType('RipEdge', (_message.Message,), {
  'DESCRIPTOR' : _RIPEDGE,
  '__module__' : 'intentionet.bfe.proto.ui.topology_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.proto.ui.RipEdge)
  })
_sym_db.RegisterMessage(RipEdge)

VxlanTopology = _reflection.GeneratedProtocolMessageType('VxlanTopology', (_message.Message,), {
  'DESCRIPTOR' : _VXLANTOPOLOGY,
  '__module__' : 'intentionet.bfe.proto.ui.topology_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.proto.ui.VxlanTopology)
  })
_sym_db.RegisterMessage(VxlanTopology)

VxlanEdge = _reflection.GeneratedProtocolMessageType('VxlanEdge', (_message.Message,), {
  'DESCRIPTOR' : _VXLANEDGE,
  '__module__' : 'intentionet.bfe.proto.ui.topology_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.proto.ui.VxlanEdge)
  })
_sym_db.RegisterMessage(VxlanEdge)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\034com.intentionet.bfe.proto.uiP\001Z\034intentionet.com/bfe/proto/ui'
  _TOPOLOGYSUMMARY._serialized_start=127
  _TOPOLOGYSUMMARY._serialized_end=942
  _DEVICEINFO._serialized_start=945
  _DEVICEINFO._serialized_end=1089
  _INTERFACEREF._serialized_start=1091
  _INTERFACEREF._serialized_end=1172
  _SUBNETTOPOLOGY._serialized_start=1175
  _SUBNETTOPOLOGY._serialized_end=1386
  _SUBNETID._serialized_start=1388
  _SUBNETID._serialized_end=1438
  _SUBNETEDGE._serialized_start=1441
  _SUBNETEDGE._serialized_end=1669
  _LAYER1TOPOLOGY._serialized_start=1671
  _LAYER1TOPOLOGY._serialized_end=1749
  _LAYER1EDGE._serialized_start=1751
  _LAYER1EDGE._serialized_end=1819
  _BGPTOPOLOGY._serialized_start=1821
  _BGPTOPOLOGY._serialized_end=1893
  _BGPEDGE._serialized_start=1895
  _BGPEDGE._serialized_end=1960
  _EIGRPTOPOLOGY._serialized_start=1962
  _EIGRPTOPOLOGY._serialized_end=2038
  _EIGRPEDGE._serialized_start=2040
  _EIGRPEDGE._serialized_end=2107
  _IPSECTOPOLOGY._serialized_start=2109
  _IPSECTOPOLOGY._serialized_end=2185
  _IPSECEDGE._serialized_start=2187
  _IPSECEDGE._serialized_end=2254
  _ISISTOPOLOGY._serialized_start=2256
  _ISISTOPOLOGY._serialized_end=2330
  _ISISEDGE._serialized_start=2332
  _ISISEDGE._serialized_end=2398
  _OSPFTOPOLOGY._serialized_start=2400
  _OSPFTOPOLOGY._serialized_end=2474
  _OSPFEDGE._serialized_start=2476
  _OSPFEDGE._serialized_end=2542
  _RIPTOPOLOGY._serialized_start=2544
  _RIPTOPOLOGY._serialized_end=2616
  _RIPEDGE._serialized_start=2618
  _RIPEDGE._serialized_end=2683
  _VXLANTOPOLOGY._serialized_start=2685
  _VXLANTOPOLOGY._serialized_end=2761
  _VXLANEDGE._serialized_start=2763
  _VXLANEDGE._serialized_end=2830
# @@protoc_insertion_point(module_scope)
