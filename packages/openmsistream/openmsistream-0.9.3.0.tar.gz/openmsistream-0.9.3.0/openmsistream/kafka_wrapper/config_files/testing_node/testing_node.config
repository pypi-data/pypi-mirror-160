[DEFAULT]
node_id : testing_node

[testing_node]
mgmt_long_keyindex : True
cryptokey : file#testing_node.crypto
ratchet : file#testing_node.seed

[testing_node-allowlist]
rot : base64#kwDEAZDEIFCO7/p01u46Rbd5gxLdhACi6nREnmkCTz87J8pO840v

[testing_node-denylist]

[testing_node-crypto]
maxage : 316224000
chain : base64#ksSmvIUuuvKd7V5MXi7pSNdpSppfSjubBafS9CDCidlSpjC8r7aigHFIjR0exU3CUfdFIHC9kYeJIXDlrHLJ3GeuAJMAxECRkqZ1c2FnZXOTq2tleS1lbmNyeXB0s2tleS1lbmNyeXB0LXJlcXVlc3S1a2V5LWVuY3J5cHQtc3Vic2NyaWJlxCBD5qGPFbJmbrG8IXJSrAC24dO6+5Iu4QnCN5QiDoMTxMUBBL7ATemAjY3L3o0G+NqWMkfjXZneJFnp8ifgY04DwXB7DcMQklq+lRr/62I2uZhLFH6McihgSKp9FWV4c5wctAyTy0HdabIak1XWxJaSkqZ1c2FnZXOTq2tleS1lbmNyeXB0s2tleS1lbmNyeXB0LXJlcXVlc3S1a2V5LWVuY3J5cHQtc3Vic2NyaWJlkqZ0b3BpY3OT2Sl0ZXN0X2RhdGFfZmlsZV9zdHJlYW1fcHJvY2Vzc29yX2VuY3J5cHRlZLJ0ZXN0X29tc19lbmNyeXB0ZWSudGVzdF9lbmNyeXB0ZWTEIP70hH1YAaTsOiA62mo1d5wh93QlUm10jocESzNrWxw2
oldkeys : base64#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

[testing_node-kafka]
bootstrap_servers : 
security_protocol : SSL
ssl_cafile : /usr/local/anaconda3/envs/openmsi/lib/python3.9/site-packages/certifi/cacert.pem

[testing_node-kafka-consumer]

[testing_node-kafka-producer]

[testing_node-kafka-crypto]

[testing_node-kafka-crypto-consumer]

[testing_node-kafka-crypto-producer]

