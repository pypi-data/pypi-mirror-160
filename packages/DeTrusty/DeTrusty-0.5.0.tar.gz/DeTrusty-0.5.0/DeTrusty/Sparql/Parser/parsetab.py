
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALL AND ASC BOOLEAN BOUND BY BYTE COLON COMA CONSTANT CONTAINS DATATYPE DATETIME DECIMAL DESC DISTINCT DIV DOUBLE EQUALS FILTER FLOAT GREATER GREATEREQ ID INT INTEGER ISBLANK ISIRI ISLITERAL ISURI LANG LANGMATCHES LCASE LESS LESSEQ LIMIT LKEY LONG LPAR MINUS NEG NEGATIVEINT NEQUALS NONNEGINT NONPOSINT NUMBER OFFSET OPTIONAL OR ORDER PLUS POINT POSITIVEINT PREFIX REGEX RKEY RPAR SAMETERM SELECT SHORT STR STRING TIMES UCASE UNDEF UNION UNSIGNEDBYTE UNSIGNEDINT UNSIGNEDLONG UNSIGNEDSHORT UPPERCASE URI VALUES VARIABLE WHERE\n    parse_sparql : prefix_list query order_by limit offset values_clause\n    \n    parse_sparql : prefix_list query order_by offset limit values_clause\n    \n    prefix_list : prefix prefix_list\n    \n    prefix_list : empty\n    \n    empty :\n    \n    prefix : PREFIX uri\n    \n    uri : ID COLON ID\n    \n    uri : ID COLON URI\n    \n    uri : URI\n    \n    values_clause : VALUES LPAR var_list RPAR LKEY data_block RKEY\n    \n    values_clause : VALUES var_list LKEY data_block RKEY\n    \n    values_clause : empty\n    \n    order_by : ORDER BY var_order_list desc_var\n    \n    order_by : empty\n    \n    var_order_list : empty\n    \n    var_order_list : var_order_list desc_var\n    \n    desc_var : DESC LPAR VARIABLE RPAR\n    \n    desc_var : VARIABLE\n    \n    desc_var : ASC LPAR VARIABLE RPAR\n    \n    desc_var : unary_func LPAR desc_var RPAR\n    \n    limit : LIMIT NUMBER\n    \n    limit : empty\n    \n    offset : OFFSET NUMBER\n    \n    offset : empty\n    \n    query : SELECT distinct var_list WHERE LKEY group_graph_pattern RKEY\n    \n    query : SELECT distinct ALL WHERE LKEY group_graph_pattern RKEY\n    \n    distinct : DISTINCT\n    \n    distinct : empty\n    \n    group_graph_pattern : union_block\n    \n    union_block : pjoin_block rest_union_block POINT pjoin_block\n    \n    union_block : pjoin_block rest_union_block pjoin_block\n    \n    union_block : pjoin_block rest_union_block\n    \n    pjoin_block : LKEY join_block RKEY\n    \n    pjoin_block : join_block\n    \n    pjoin_block : empty\n    \n    rest_union_block : empty\n    \n    rest_union_block : UNION LKEY join_block rest_union_block RKEY rest_union_block\n    \n    join_block : LKEY union_block RKEY rest_join_block\n    \n    join_block : bgp rest_join_block\n    \n    rest_join_block : empty\n    \n    rest_join_block : POINT bgp rest_join_block\n    \n    rest_join_block : bgp rest_join_block\n    \n    bgp :  LKEY bgp UNION bgp rest_union_block RKEY\n    \n    bgp : bgp UNION bgp rest_union_block\n    \n    bgp : triple\n    \n    bgp : FILTER LPAR expression RPAR\n    \n    bgp : FILTER express_rel\n    \n    bgp : OPTIONAL LKEY group_graph_pattern RKEY\n    \n    bgp : LKEY join_block RKEY\n    \n    bgp : VALUES LPAR var_list RPAR LKEY data_block RKEY\n    \n    bgp : VALUES var_list LKEY data_block RKEY\n    \n    data_block : data_block LPAR values_list RPAR\n    \n    data_block : data_block values_list\n    \n    data_block : values_list\n    \n    data_block : LPAR values_list RPAR\n    \n    values_list : values_list value_arg\n    \n    values_list : value_arg\n    \n    value_arg : uri\n    \n    value_arg : CONSTANT\n    \n    value_arg : UNDEF\n    \n    expression : express_rel LOGOP expression\n    \n    expression : express_rel\n    \n    expression : LPAR expression RPAR\n    \n    express_rel : express_arg RELOP express_rel\n    \n    express_rel : express_arg\n    \n    express_rel : LPAR express_rel RPAR\n    \n    express_rel : NEG LPAR expression RPAR\n    \n    express_rel : NEG express_rel\n    \n    express_arg : uri\n    \n    express_arg : VARIABLE\n    \n    express_arg : CONSTANT\n    \n    express_arg : NUMBER\n    \n    express_arg : NUMBER POINT NUMBER\n    \n    express_arg : REGEX LPAR express_arg COMA pattern_arg regex_flag\n    \n    regex_flag : RPAR\n    \n    regex_flag : COMA pattern_arg RPAR\n    \n    pattern_arg : CONSTANT\n    \n    express_arg : binary_func LPAR express_arg COMA express_arg RPAR\n    \n    express_arg : unary_func LPAR express_arg RPAR\n    \n    express_arg : UNARYOP express_arg\n    \n    express_arg : express_arg ARITOP express_arg\n    \n    express_arg : LPAR express_arg RPAR\n    \n    express_arg : express_arg RELOP express_arg\n    \n    ARITOP : PLUS\n    \n    ARITOP : MINUS\n    \n    ARITOP : TIMES\n    \n    ARITOP : DIV\n    \n    UNARYOP : PLUS\n    \n    UNARYOP : MINUS\n    \n    LOGOP : AND\n    \n    LOGOP : OR\n    \n    RELOP : EQUALS\n    \n    RELOP : LESS\n    \n    RELOP : LESSEQ\n    \n    RELOP : GREATER\n    \n    RELOP : GREATEREQ\n    \n    RELOP : NEQUALS\n    \n    binary_func : REGEX\n    \n    binary_func : SAMETERM\n    \n    binary_func : LANGMATCHES\n    \n    binary_func : CONSTANT\n    \n    binary_func : CONTAINS\n    \n    unary_func : BOUND\n    \n    unary_func : ISIRI\n    \n    unary_func : ISURI\n    \n    unary_func : ISBLANK\n    \n    unary_func : ISLITERAL\n    \n    unary_func : LANG\n    \n    unary_func : DATATYPE\n    \n    unary_func : STR\n    \n    unary_func : UPPERCASE\n    \n    unary_func : DOUBLE\n               | INTEGER\n               | DECIMAL\n               | FLOAT\n               | STRING\n               | BOOLEAN\n               | DATETIME\n               | NONPOSINT\n               | NEGATIVEINT\n               | LONG\n               | INT\n               | SHORT\n               | BYTE\n               | NONNEGINT\n               | UNSIGNEDLONG\n               | UNSIGNEDINT\n               | UNSIGNEDSHORT\n               | UNSIGNEDBYTE\n               | POSITIVEINT\n    \n    unary_func : ID COLON ID\n    \n    unary_func : uri\n    \n    unary_func : UCASE\n    \n    unary_func : LCASE\n    \n    var_list : var_list VARIABLE\n    \n    var_list : VARIABLE\n    \n    triple : subject predicate object\n    \n    predicate : ID\n    \n    predicate : uri\n    \n    predicate : VARIABLE\n    \n    subject : uri\n    \n    subject : VARIABLE\n    \n    object : uri\n    \n    object : VARIABLE\n    \n    object : CONSTANT\n    '
    
_lr_action_items = {'PREFIX':([0,3,9,11,28,29,],[5,5,-6,-9,-7,-8,]),'SELECT':([0,2,3,4,8,9,11,28,29,],[-5,7,-5,-4,-3,-6,-9,-7,-8,]),'$end':([1,6,12,14,19,20,22,30,31,32,33,34,35,41,43,44,45,47,115,150,159,160,161,209,264,],[0,-5,-5,-14,-5,-5,-22,-5,-24,-5,-22,-21,-23,-1,-12,-2,-13,-18,-25,-26,-17,-19,-20,-11,-10,]),'ID':([5,11,18,24,28,29,36,37,45,47,82,83,88,89,90,93,94,95,96,97,98,101,102,103,106,111,112,114,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,141,142,143,146,147,148,149,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,176,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,203,204,205,206,207,208,210,211,212,213,214,215,216,218,220,221,222,223,224,226,227,228,229,230,231,232,233,234,235,237,241,243,244,246,247,248,249,250,252,257,259,260,261,262,263,265,266,267,272,273,275,276,277,278,280,],[10,-9,28,-5,-7,-8,78,-15,-16,-18,10,10,78,110,10,-5,-34,-35,10,-45,137,147,-141,-142,10,10,-34,10,10,-36,10,-39,10,-40,10,10,137,-47,-65,137,-69,-70,-71,-72,137,-88,-89,10,10,-138,-139,-140,10,10,10,-57,-58,-59,-60,-17,-19,-20,10,10,-34,-33,10,10,10,10,-42,-5,10,10,137,137,137,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,137,-68,137,137,137,-80,137,243,10,-137,-143,-144,-145,10,10,10,10,-56,-33,-38,-5,10,10,-44,-41,-34,-49,-46,-66,137,-90,-91,-82,-65,-64,137,-81,-73,137,-7,-48,10,10,10,-55,-44,10,-67,137,-79,-83,10,-51,-52,-43,-5,10,-37,-74,-75,-78,-50,-76,]),'URI':([5,11,18,24,28,29,36,37,45,47,82,83,88,89,90,93,94,95,96,97,98,101,102,103,106,111,112,114,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,141,142,143,146,147,148,149,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,176,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,203,204,205,206,207,208,210,211,212,213,214,215,216,218,220,221,222,223,224,226,227,228,229,230,231,232,233,234,235,237,241,243,244,246,247,248,249,250,252,257,259,260,261,262,263,265,266,267,272,273,275,276,277,278,280,],[11,-9,29,-5,-7,-8,11,-15,-16,-18,11,11,11,29,11,-5,-34,-35,11,-45,11,11,-141,-142,11,11,-34,11,11,-36,11,-39,11,-40,11,11,11,-47,-65,11,-69,-70,-71,-72,11,-88,-89,11,11,-138,-139,-140,11,11,11,-57,-58,-59,-60,-17,-19,-20,11,11,-34,-33,11,11,11,11,-42,-5,11,11,11,11,11,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,11,-68,11,11,11,-80,11,29,11,-137,-143,-144,-145,11,11,11,11,-56,-33,-38,-5,11,11,-44,-41,-34,-49,-46,-66,11,-90,-91,-82,-65,-64,11,-81,-73,11,-7,-48,11,11,11,-55,-44,11,-67,11,-79,-83,11,-51,-52,-43,-5,11,-37,-74,-75,-78,-50,-76,]),'ORDER':([6,115,150,],[13,-25,-26,]),'LIMIT':([6,12,14,20,22,35,45,47,115,150,159,160,161,],[-5,21,-14,21,-24,-23,-13,-18,-25,-26,-17,-19,-20,]),'OFFSET':([6,12,14,19,22,34,45,47,115,150,159,160,161,],[-5,23,-14,23,-22,-21,-13,-18,-25,-26,-17,-19,-20,]),'VALUES':([6,11,12,14,19,20,22,28,29,30,31,32,33,34,35,45,47,82,83,90,93,94,95,96,97,111,112,114,115,116,117,119,120,121,122,123,124,126,127,129,130,131,132,143,150,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,193,198,204,205,206,207,214,215,216,218,220,221,222,223,224,226,227,231,232,233,235,237,243,244,250,252,257,260,261,263,266,267,273,275,276,277,278,280,],[-5,-9,-5,-14,-5,-5,-22,-7,-8,42,-24,42,-22,-21,-23,-13,-18,100,100,100,-5,-34,-35,100,-45,100,-34,100,-25,100,-36,100,-39,100,-40,100,100,-47,-65,-69,-70,-71,-72,100,-26,-17,-19,-20,100,100,-34,-33,100,100,100,100,-42,-5,100,100,-68,-80,-137,-143,-144,-145,-33,-38,-5,100,100,-44,-41,-34,-49,-46,-66,-82,-65,-64,-81,-73,-7,-48,-44,100,-67,-79,-83,-51,-43,-5,-37,-74,-75,-78,-50,-76,]),'DISTINCT':([7,],[16,]),'ALL':([7,15,16,17,],[-5,26,-27,-28,]),'VARIABLE':([7,11,15,16,17,24,25,27,28,29,36,37,39,42,45,47,82,83,84,85,86,87,88,90,93,94,95,96,97,98,100,101,102,103,105,111,112,114,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,141,142,143,144,145,146,147,148,149,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,176,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,202,204,205,206,207,214,215,216,218,220,221,222,223,224,226,227,228,229,230,231,232,233,234,235,237,241,243,244,250,252,257,259,260,261,263,266,267,273,275,276,277,278,280,],[-5,-9,27,-27,-28,-5,39,-136,-7,-8,47,-15,-135,27,-16,-18,103,103,27,39,107,108,47,103,-5,-34,-35,103,-45,130,27,149,-141,-142,39,103,-34,103,103,-36,103,-39,103,-40,103,103,130,-47,-65,130,-69,-70,-71,-72,130,-88,-89,103,27,39,206,-138,-139,-140,-17,-19,-20,103,103,-34,-33,103,103,103,103,-42,-5,103,103,130,130,130,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,130,-68,130,130,130,-80,130,39,-137,-143,-144,-145,-33,-38,-5,103,103,-44,-41,-34,-49,-46,-66,130,-90,-91,-82,-65,-64,130,-81,-73,130,-7,-48,-44,103,-67,130,-79,-83,-51,-43,-5,-37,-74,-75,-78,-50,-76,]),'COLON':([10,78,137,147,],[18,89,200,18,]),'LPAR':([11,28,29,42,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,98,100,106,110,125,128,129,131,133,134,135,136,138,139,140,141,142,152,154,155,156,157,158,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,203,208,211,213,228,229,230,234,241,243,246,247,249,259,262,265,272,],[-9,-7,-8,84,86,87,88,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-132,-133,-134,125,144,153,-7,176,192,-132,-101,195,196,197,199,-99,-100,-102,-88,-89,210,-54,-57,-58,-59,-60,176,234,199,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,176,199,199,199,199,153,153,-53,-56,176,-90,-91,234,199,-7,210,210,-55,199,153,-52,210,]),'EQUALS':([11,29,127,129,130,131,132,179,198,231,232,235,237,238,239,240,242,243,260,261,271,275,276,277,280,],[-9,-8,182,-69,-70,-71,-72,182,182,-82,182,182,-73,182,182,182,182,-7,-79,182,182,-74,-75,-78,-76,]),'LESS':([11,29,127,129,130,131,132,179,198,231,232,235,237,238,239,240,242,243,260,261,271,275,276,277,280,],[-9,-8,183,-69,-70,-71,-72,183,183,-82,183,183,-73,183,183,183,183,-7,-79,183,183,-74,-75,-78,-76,]),'LESSEQ':([11,29,127,129,130,131,132,179,198,231,232,235,237,238,239,240,242,243,260,261,271,275,276,277,280,],[-9,-8,184,-69,-70,-71,-72,184,184,-82,184,184,-73,184,184,184,184,-7,-79,184,184,-74,-75,-78,-76,]),'GREATER':([11,29,127,129,130,131,132,179,198,231,232,235,237,238,239,240,242,243,260,261,271,275,276,277,280,],[-9,-8,185,-69,-70,-71,-72,185,185,-82,185,185,-73,185,185,185,185,-7,-79,185,185,-74,-75,-78,-76,]),'GREATEREQ':([11,29,127,129,130,131,132,179,198,231,232,235,237,238,239,240,242,243,260,261,271,275,276,277,280,],[-9,-8,186,-69,-70,-71,-72,186,186,-82,186,186,-73,186,186,186,186,-7,-79,186,186,-74,-75,-78,-76,]),'NEQUALS':([11,29,127,129,130,131,132,179,198,231,232,235,237,238,239,240,242,243,260,261,271,275,276,277,280,],[-9,-8,187,-69,-70,-71,-72,187,187,-82,187,187,-73,187,187,187,187,-7,-79,187,187,-74,-75,-78,-76,]),'PLUS':([11,29,98,125,127,128,129,130,131,132,136,141,142,176,179,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,198,199,228,229,230,231,232,234,235,237,238,239,240,241,242,243,259,260,261,271,275,276,277,280,],[-9,-8,141,141,188,141,-69,-70,-71,-72,141,-88,-89,141,188,141,141,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,141,141,141,141,188,141,141,-90,-91,-82,188,141,188,-73,188,188,188,141,188,-7,141,-79,188,188,-74,-75,-78,-76,]),'MINUS':([11,29,98,125,127,128,129,130,131,132,136,141,142,176,179,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,198,199,228,229,230,231,232,234,235,237,238,239,240,241,242,243,259,260,261,271,275,276,277,280,],[-9,-8,142,142,189,142,-69,-70,-71,-72,142,-88,-89,142,189,142,142,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,142,142,142,142,189,142,142,-90,-91,-82,189,142,189,-73,189,189,189,142,189,-7,142,-79,189,189,-74,-75,-78,-76,]),'TIMES':([11,29,127,129,130,131,132,179,198,231,232,235,237,238,239,240,242,243,260,261,271,275,276,277,280,],[-9,-8,190,-69,-70,-71,-72,190,190,-82,190,190,-73,190,190,190,190,-7,-79,190,190,-74,-75,-78,-76,]),'DIV':([11,29,127,129,130,131,132,179,198,231,232,235,237,238,239,240,242,243,260,261,271,275,276,277,280,],[-9,-8,191,-69,-70,-71,-72,191,191,-82,191,191,-73,191,191,191,191,-7,-79,191,191,-74,-75,-78,-76,]),'UNION':([11,28,29,82,83,90,93,94,95,96,97,111,112,114,117,119,120,122,126,127,129,130,131,132,143,162,163,164,165,166,171,172,173,174,193,198,204,205,206,207,214,215,216,218,219,221,222,223,224,226,227,231,232,233,235,237,243,244,250,257,260,261,263,266,267,268,273,275,276,277,278,280,],[-9,-7,-8,-5,-5,-5,118,-34,-35,121,-45,-5,-34,167,-36,121,-39,-40,-47,-65,-69,-70,-71,-72,-5,-5,167,-34,-33,-5,-42,220,121,-5,-68,-80,-137,-143,-144,-145,-33,-38,220,-5,118,-44,-41,-34,-49,-46,-66,-82,-65,-64,-81,-73,-7,-48,-44,-67,-79,-83,-51,-43,118,118,-37,-74,-75,-78,-50,-76,]),'POINT':([11,28,29,82,83,90,93,94,95,96,97,111,112,114,116,117,119,120,122,126,127,129,130,131,132,143,162,163,164,165,166,171,172,173,174,193,198,204,205,206,207,214,215,216,218,221,222,223,224,226,227,231,232,233,235,237,243,244,250,257,260,261,263,266,267,273,275,276,277,278,280,],[-9,-7,-8,-5,-5,-5,-5,-34,-35,123,-45,-5,-34,123,169,-36,123,-39,-40,-47,-65,-69,-70,-71,194,-5,-5,123,-34,-33,123,-42,-5,123,-5,-68,-80,-137,-143,-144,-145,-33,-38,-5,-5,-44,-41,-34,-49,-46,-66,-82,-65,-64,-81,-73,-7,-48,-44,-67,-79,-83,-51,-43,-5,-37,-74,-75,-78,-50,-76,]),'LKEY':([11,27,28,29,38,39,40,82,83,85,90,93,94,95,96,97,99,111,112,114,116,117,118,119,120,121,122,123,124,126,127,129,130,131,132,143,145,151,162,163,164,165,166,167,169,170,171,172,173,174,193,198,204,205,206,207,214,215,216,218,220,221,222,223,224,226,227,231,232,233,235,237,243,244,245,250,252,257,260,261,263,266,267,273,275,276,277,278,280,],[-9,-136,-7,-8,82,-135,83,90,90,106,111,-5,-34,-35,124,-45,143,162,-34,124,90,-36,170,124,-39,124,-40,124,174,-47,-65,-69,-70,-71,-72,90,203,208,162,124,-34,-33,124,124,90,218,-42,-5,124,162,-68,-80,-137,-143,-144,-145,-33,-38,-5,162,252,-44,-41,-34,-49,-46,-66,-82,-65,-64,-81,-73,-7,-48,262,-44,218,-67,-79,-83,-51,-43,-5,-37,-74,-75,-78,-50,-76,]),'FILTER':([11,28,29,82,83,90,93,94,95,96,97,111,112,114,116,117,119,120,121,122,123,124,126,127,129,130,131,132,143,162,163,164,165,166,167,169,170,171,172,173,174,193,198,204,205,206,207,214,215,216,218,220,221,222,223,224,226,227,231,232,233,235,237,243,244,250,252,257,260,261,263,266,267,273,275,276,277,278,280,],[-9,-7,-8,98,98,98,-5,-34,-35,98,-45,98,-34,98,98,-36,98,-39,98,-40,98,98,-47,-65,-69,-70,-71,-72,98,98,98,-34,-33,98,98,98,98,-42,-5,98,98,-68,-80,-137,-143,-144,-145,-33,-38,-5,98,98,-44,-41,-34,-49,-46,-66,-82,-65,-64,-81,-73,-7,-48,-44,98,-67,-79,-83,-51,-43,-5,-37,-74,-75,-78,-50,-76,]),'OPTIONAL':([11,28,29,82,83,90,93,94,95,96,97,111,112,114,116,117,119,120,121,122,123,124,126,127,129,130,131,132,143,162,163,164,165,166,167,169,170,171,172,173,174,193,198,204,205,206,207,214,215,216,218,220,221,222,223,224,226,227,231,232,233,235,237,243,244,250,252,257,260,261,263,266,267,273,275,276,277,278,280,],[-9,-7,-8,99,99,99,-5,-34,-35,99,-45,99,-34,99,99,-36,99,-39,99,-40,99,99,-47,-65,-69,-70,-71,-72,99,99,99,-34,-33,99,99,99,99,-42,-5,99,99,-68,-80,-137,-143,-144,-145,-33,-38,-5,99,99,-44,-41,-34,-49,-46,-66,-82,-65,-64,-81,-73,-7,-48,-44,99,-67,-79,-83,-51,-43,-5,-37,-74,-75,-78,-50,-76,]),'RKEY':([11,28,29,82,83,90,91,92,93,94,95,96,97,104,111,112,113,114,116,117,119,120,122,126,127,129,130,131,132,143,152,154,155,156,157,158,162,163,164,165,166,168,169,171,172,173,174,175,193,198,201,204,205,206,207,211,213,214,215,216,217,218,219,221,222,223,224,226,227,231,232,233,235,237,243,244,246,247,249,250,251,257,260,261,263,265,266,267,268,272,273,275,276,277,278,280,],[-9,-7,-8,-5,-5,-5,115,-29,-5,-34,-35,-5,-45,150,-5,165,166,-5,-5,-36,-5,-39,-40,-47,-65,-69,-70,-71,-72,-5,209,-54,-57,-58,-59,-60,-5,-5,214,-33,-5,-31,-5,-42,-5,-5,-5,224,-68,-80,244,-137,-143,-144,-145,-53,-56,-33,-38,-5,-30,-5,-5,-44,-41,224,-49,-46,-66,-82,-65,-64,-81,-73,-7,-48,263,264,-55,266,267,-67,-79,-83,-51,-52,-43,-5,224,278,-37,-74,-75,-78,-50,-76,]),'CONSTANT':([11,28,29,98,106,125,128,136,141,142,146,147,148,149,152,153,154,155,156,157,158,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,203,208,210,211,212,213,228,229,230,234,241,246,247,248,249,258,259,262,265,272,274,],[-9,-7,-8,131,157,131,131,131,-88,-89,207,-138,-139,-140,157,157,157,-57,-58,-59,-60,131,131,131,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,131,131,131,131,131,157,157,157,157,157,-56,131,-90,-91,131,131,157,157,157,-55,270,131,157,-52,157,270,]),'UNDEF':([11,28,29,106,152,153,154,155,156,157,158,203,208,210,211,212,213,246,247,248,249,262,265,272,],[-9,-7,-8,158,158,158,158,-57,-58,-59,-60,158,158,158,158,158,-56,158,158,158,-55,158,-52,158,]),'RPAR':([11,27,28,29,39,47,105,107,108,109,127,129,130,131,132,155,156,157,158,159,160,161,177,178,179,193,198,202,212,213,225,227,231,232,233,235,236,237,240,242,243,248,253,254,255,256,257,260,261,269,270,271,275,276,277,279,280,],[-9,-136,-7,-8,-135,-18,151,159,160,161,-65,-69,-70,-71,-72,-57,-58,-59,-60,-17,-19,-20,226,227,231,-68,-80,245,249,-56,253,-66,-82,-65,-64,-81,257,-73,260,231,-7,265,-63,-62,-61,227,-67,-79,-83,276,-77,277,-74,-75,-78,280,-76,]),'AND':([11,29,127,129,130,131,132,178,179,193,198,227,231,232,233,235,237,243,254,257,260,261,275,276,277,280,],[-9,-8,-65,-69,-70,-71,-72,229,-65,-68,-80,-66,-82,-65,-64,-81,-73,-7,229,-67,-79,-83,-74,-75,-78,-76,]),'OR':([11,29,127,129,130,131,132,178,179,193,198,227,231,232,233,235,237,243,254,257,260,261,275,276,277,280,],[-9,-8,-65,-69,-70,-71,-72,230,-65,-68,-80,-66,-82,-65,-64,-81,-73,-7,230,-67,-79,-83,-74,-75,-78,-76,]),'COMA':([11,29,129,130,131,132,198,231,235,237,238,239,243,260,261,269,270,275,276,277,280,],[-9,-8,-69,-70,-71,-72,-80,-82,-81,-73,258,259,-7,-79,-83,274,-77,-74,-75,-78,-76,]),'BY':([13,],[24,]),'NUMBER':([21,23,98,125,128,136,141,142,176,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,199,228,229,230,234,241,259,],[34,35,132,132,132,132,-88,-89,132,132,132,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,132,237,132,132,132,132,132,-90,-91,132,132,132,]),'DESC':([24,36,37,45,47,88,159,160,161,],[-5,46,-15,-16,-18,46,-17,-19,-20,]),'ASC':([24,36,37,45,47,88,159,160,161,],[-5,48,-15,-16,-18,48,-17,-19,-20,]),'BOUND':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,50,-15,-16,-18,50,50,50,50,50,-88,-89,-17,-19,-20,50,50,50,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,50,50,50,50,50,50,-90,-91,50,50,50,]),'ISIRI':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,51,-15,-16,-18,51,51,51,51,51,-88,-89,-17,-19,-20,51,51,51,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,51,51,51,51,51,51,-90,-91,51,51,51,]),'ISURI':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,52,-15,-16,-18,52,52,52,52,52,-88,-89,-17,-19,-20,52,52,52,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,52,52,52,52,52,52,-90,-91,52,52,52,]),'ISBLANK':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,53,-15,-16,-18,53,53,53,53,53,-88,-89,-17,-19,-20,53,53,53,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,53,53,53,53,53,53,-90,-91,53,53,53,]),'ISLITERAL':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,54,-15,-16,-18,54,54,54,54,54,-88,-89,-17,-19,-20,54,54,54,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,54,54,54,54,54,54,-90,-91,54,54,54,]),'LANG':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,55,-15,-16,-18,55,55,55,55,55,-88,-89,-17,-19,-20,55,55,55,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,55,55,55,55,55,55,-90,-91,55,55,55,]),'DATATYPE':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,56,-15,-16,-18,56,56,56,56,56,-88,-89,-17,-19,-20,56,56,56,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,56,56,56,56,56,56,-90,-91,56,56,56,]),'STR':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,57,-15,-16,-18,57,57,57,57,57,-88,-89,-17,-19,-20,57,57,57,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,57,57,57,57,57,57,-90,-91,57,57,57,]),'UPPERCASE':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,58,-15,-16,-18,58,58,58,58,58,-88,-89,-17,-19,-20,58,58,58,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,58,58,58,58,58,58,-90,-91,58,58,58,]),'DOUBLE':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,59,-15,-16,-18,59,59,59,59,59,-88,-89,-17,-19,-20,59,59,59,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,59,59,59,59,59,59,-90,-91,59,59,59,]),'INTEGER':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,60,-15,-16,-18,60,60,60,60,60,-88,-89,-17,-19,-20,60,60,60,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,60,60,60,60,60,60,-90,-91,60,60,60,]),'DECIMAL':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,61,-15,-16,-18,61,61,61,61,61,-88,-89,-17,-19,-20,61,61,61,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,61,61,61,61,61,61,-90,-91,61,61,61,]),'FLOAT':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,62,-15,-16,-18,62,62,62,62,62,-88,-89,-17,-19,-20,62,62,62,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,62,62,62,62,62,62,-90,-91,62,62,62,]),'STRING':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,63,-15,-16,-18,63,63,63,63,63,-88,-89,-17,-19,-20,63,63,63,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,63,63,63,63,63,63,-90,-91,63,63,63,]),'BOOLEAN':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,64,-15,-16,-18,64,64,64,64,64,-88,-89,-17,-19,-20,64,64,64,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,64,64,64,64,64,64,-90,-91,64,64,64,]),'DATETIME':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,65,-15,-16,-18,65,65,65,65,65,-88,-89,-17,-19,-20,65,65,65,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,65,65,65,65,65,65,-90,-91,65,65,65,]),'NONPOSINT':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,66,-15,-16,-18,66,66,66,66,66,-88,-89,-17,-19,-20,66,66,66,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,66,66,66,66,66,66,-90,-91,66,66,66,]),'NEGATIVEINT':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,67,-15,-16,-18,67,67,67,67,67,-88,-89,-17,-19,-20,67,67,67,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,67,67,67,67,67,67,-90,-91,67,67,67,]),'LONG':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,68,-15,-16,-18,68,68,68,68,68,-88,-89,-17,-19,-20,68,68,68,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,68,68,68,68,68,68,-90,-91,68,68,68,]),'INT':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,69,-15,-16,-18,69,69,69,69,69,-88,-89,-17,-19,-20,69,69,69,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,69,69,69,69,69,69,-90,-91,69,69,69,]),'SHORT':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,70,-15,-16,-18,70,70,70,70,70,-88,-89,-17,-19,-20,70,70,70,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,70,70,70,70,70,70,-90,-91,70,70,70,]),'BYTE':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,71,-15,-16,-18,71,71,71,71,71,-88,-89,-17,-19,-20,71,71,71,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,71,71,71,71,71,71,-90,-91,71,71,71,]),'NONNEGINT':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,72,-15,-16,-18,72,72,72,72,72,-88,-89,-17,-19,-20,72,72,72,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,72,72,72,72,72,72,-90,-91,72,72,72,]),'UNSIGNEDLONG':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,73,-15,-16,-18,73,73,73,73,73,-88,-89,-17,-19,-20,73,73,73,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,73,73,73,73,73,73,-90,-91,73,73,73,]),'UNSIGNEDINT':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,74,-15,-16,-18,74,74,74,74,74,-88,-89,-17,-19,-20,74,74,74,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,74,74,74,74,74,74,-90,-91,74,74,74,]),'UNSIGNEDSHORT':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,75,-15,-16,-18,75,75,75,75,75,-88,-89,-17,-19,-20,75,75,75,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,75,75,75,75,75,75,-90,-91,75,75,75,]),'UNSIGNEDBYTE':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,76,-15,-16,-18,76,76,76,76,76,-88,-89,-17,-19,-20,76,76,76,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,76,76,76,76,76,76,-90,-91,76,76,76,]),'POSITIVEINT':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,77,-15,-16,-18,77,77,77,77,77,-88,-89,-17,-19,-20,77,77,77,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,77,77,77,77,77,77,-90,-91,77,77,77,]),'UCASE':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,80,-15,-16,-18,80,80,80,80,80,-88,-89,-17,-19,-20,80,80,80,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,80,80,80,80,80,80,-90,-91,80,80,80,]),'LCASE':([24,36,37,45,47,88,98,125,128,136,141,142,159,160,161,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[-5,81,-15,-16,-18,81,81,81,81,81,-88,-89,-17,-19,-20,81,81,81,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,81,81,81,81,81,81,-90,-91,81,81,81,]),'WHERE':([25,26,27,39,],[38,40,-136,-135,]),'NEG':([98,125,128,176,180,182,183,184,185,186,187,192,228,229,230,234,],[128,128,128,128,128,-92,-93,-94,-95,-96,-97,128,128,-90,-91,128,]),'REGEX':([98,125,128,136,141,142,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[133,133,133,133,-88,-89,133,133,133,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,133,133,133,133,133,133,-90,-91,133,133,133,]),'SAMETERM':([98,125,128,136,141,142,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[138,138,138,138,-88,-89,138,138,138,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,138,138,138,138,138,138,-90,-91,138,138,138,]),'LANGMATCHES':([98,125,128,136,141,142,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[139,139,139,139,-88,-89,139,139,139,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,139,139,139,139,139,139,-90,-91,139,139,139,]),'CONTAINS':([98,125,128,136,141,142,176,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,199,228,229,230,234,241,259,],[140,140,140,140,-88,-89,140,140,140,-92,-93,-94,-95,-96,-97,-84,-85,-86,-87,140,140,140,140,140,140,-90,-91,140,140,140,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parse_sparql':([0,],[1,]),'prefix_list':([0,3,],[2,8,]),'prefix':([0,3,],[3,3,]),'empty':([0,3,6,7,12,19,20,24,30,32,82,83,90,93,96,111,114,116,119,143,162,163,166,169,172,173,174,216,218,219,267,268,],[4,4,14,17,22,31,33,37,43,43,95,95,95,117,122,95,122,95,122,95,95,122,122,95,117,122,95,117,95,117,117,117,]),'query':([2,],[6,]),'uri':([5,36,82,83,88,90,96,98,101,106,111,114,116,119,121,123,124,125,128,136,143,146,152,153,154,162,163,166,167,169,170,173,174,176,180,181,192,195,196,197,199,203,208,210,211,212,218,220,228,234,241,246,247,248,252,259,262,272,],[9,79,102,102,79,102,102,129,148,156,102,102,102,102,102,102,102,129,129,129,102,205,156,156,156,102,102,102,102,102,102,102,102,129,129,129,129,129,129,129,129,156,156,156,156,156,102,102,129,129,129,156,156,156,102,129,156,156,]),'order_by':([6,],[12,]),'distinct':([7,],[15,]),'limit':([12,20,],[19,32,]),'offset':([12,19,],[20,30,]),'var_list':([15,42,84,100,144,],[25,85,105,145,202,]),'var_order_list':([24,],[36,]),'values_clause':([30,32,],[41,44,]),'desc_var':([36,88,],[45,109,]),'unary_func':([36,88,98,125,128,136,176,180,181,192,195,196,197,199,228,234,241,259,],[49,49,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'group_graph_pattern':([82,83,143,],[91,104,201,]),'union_block':([82,83,90,111,143,162,174,218,],[92,92,113,113,92,113,113,113,]),'pjoin_block':([82,83,90,111,116,143,162,169,174,218,],[93,93,93,93,168,93,93,217,93,93,]),'join_block':([82,83,90,111,116,124,143,162,169,170,174,218,252,],[94,94,112,164,94,175,94,164,94,219,223,223,268,]),'bgp':([82,83,90,96,111,114,116,119,121,123,124,143,162,163,166,167,169,170,173,174,218,220,252,],[96,96,114,119,163,119,96,119,172,173,163,96,163,119,119,216,96,96,119,163,163,172,114,]),'triple':([82,83,90,96,111,114,116,119,121,123,124,143,162,163,166,167,169,170,173,174,218,220,252,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'subject':([82,83,90,96,111,114,116,119,121,123,124,143,162,163,166,167,169,170,173,174,218,220,252,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'rest_union_block':([93,172,216,219,267,268,],[116,221,250,251,273,251,]),'rest_join_block':([96,114,119,163,166,173,],[120,120,171,120,215,222,]),'express_rel':([98,125,128,176,180,192,228,234,],[126,178,193,178,233,178,254,256,]),'express_arg':([98,125,128,136,176,180,181,192,195,196,197,199,228,234,241,259,],[127,179,127,198,179,232,235,179,238,239,240,242,127,179,261,271,]),'binary_func':([98,125,128,136,176,180,181,192,195,196,197,199,228,234,241,259,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'UNARYOP':([98,125,128,136,176,180,181,192,195,196,197,199,228,234,241,259,],[136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),'predicate':([101,],[146,]),'data_block':([106,203,208,262,],[152,246,247,272,]),'values_list':([106,152,153,203,208,210,246,247,262,272,],[154,211,212,154,154,248,211,211,154,211,]),'value_arg':([106,152,153,154,203,208,210,211,212,246,247,248,262,272,],[155,155,155,213,155,155,155,213,213,155,155,213,155,155,]),'expression':([125,176,192,228,],[177,225,236,255,]),'RELOP':([127,179,198,232,235,238,239,240,242,261,271,],[180,180,241,180,241,241,241,241,241,241,241,]),'ARITOP':([127,179,198,232,235,238,239,240,242,261,271,],[181,181,181,181,181,181,181,181,181,181,181,]),'object':([146,],[204,]),'LOGOP':([178,254,],[228,228,]),'pattern_arg':([258,274,],[269,279,]),'regex_flag':([269,],[275,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> parse_sparql","S'",1,None,None,None),
  ('parse_sparql -> prefix_list query order_by limit offset values_clause','parse_sparql',6,'p_parse_sparql_0','queryParser.py',166),
  ('parse_sparql -> prefix_list query order_by offset limit values_clause','parse_sparql',6,'p_parse_sparql_1','queryParser.py',174),
  ('prefix_list -> prefix prefix_list','prefix_list',2,'p_prefix_list','queryParser.py',182),
  ('prefix_list -> empty','prefix_list',1,'p_empty_prefix_list','queryParser.py',189),
  ('empty -> <empty>','empty',0,'p_empty','queryParser.py',196),
  ('prefix -> PREFIX uri','prefix',2,'p_prefix','queryParser.py',203),
  ('uri -> ID COLON ID','uri',3,'p_uri_0','queryParser.py',210),
  ('uri -> ID COLON URI','uri',3,'p_uri_1','queryParser.py',217),
  ('uri -> URI','uri',1,'p_uri_2','queryParser.py',224),
  ('values_clause -> VALUES LPAR var_list RPAR LKEY data_block RKEY','values_clause',7,'p_values_clause_0','queryParser.py',231),
  ('values_clause -> VALUES var_list LKEY data_block RKEY','values_clause',5,'p_values_clause_1','queryParser.py',238),
  ('values_clause -> empty','values_clause',1,'p_values_clause_2','queryParser.py',245),
  ('order_by -> ORDER BY var_order_list desc_var','order_by',4,'p_order_by_0','queryParser.py',252),
  ('order_by -> empty','order_by',1,'p_order_by_1','queryParser.py',259),
  ('var_order_list -> empty','var_order_list',1,'p_var_order_list_0','queryParser.py',266),
  ('var_order_list -> var_order_list desc_var','var_order_list',2,'p_var_order_list_1','queryParser.py',273),
  ('desc_var -> DESC LPAR VARIABLE RPAR','desc_var',4,'p_desc_var_0','queryParser.py',280),
  ('desc_var -> VARIABLE','desc_var',1,'p_desc_var_1','queryParser.py',287),
  ('desc_var -> ASC LPAR VARIABLE RPAR','desc_var',4,'p_desc_var_2','queryParser.py',294),
  ('desc_var -> unary_func LPAR desc_var RPAR','desc_var',4,'p_desc_var_3','queryParser.py',301),
  ('limit -> LIMIT NUMBER','limit',2,'p_limit_0','queryParser.py',308),
  ('limit -> empty','limit',1,'p_limit_1','queryParser.py',315),
  ('offset -> OFFSET NUMBER','offset',2,'p_offset_0','queryParser.py',322),
  ('offset -> empty','offset',1,'p_offset_1','queryParser.py',329),
  ('query -> SELECT distinct var_list WHERE LKEY group_graph_pattern RKEY','query',7,'p_query_0','queryParser.py',336),
  ('query -> SELECT distinct ALL WHERE LKEY group_graph_pattern RKEY','query',7,'p_query_1','queryParser.py',343),
  ('distinct -> DISTINCT','distinct',1,'p_distinct_0','queryParser.py',350),
  ('distinct -> empty','distinct',1,'p_distinct_1','queryParser.py',357),
  ('group_graph_pattern -> union_block','group_graph_pattern',1,'p_ggp_0','queryParser.py',364),
  ('union_block -> pjoin_block rest_union_block POINT pjoin_block','union_block',4,'p_union_block_0','queryParser.py',371),
  ('union_block -> pjoin_block rest_union_block pjoin_block','union_block',3,'p_union_block_1','queryParser.py',380),
  ('union_block -> pjoin_block rest_union_block','union_block',2,'p_union_block_2','queryParser.py',392),
  ('pjoin_block -> LKEY join_block RKEY','pjoin_block',3,'p_ppjoin_block_0','queryParser.py',399),
  ('pjoin_block -> join_block','pjoin_block',1,'p_ppjoin_block_1','queryParser.py',406),
  ('pjoin_block -> empty','pjoin_block',1,'p_ppjoin_block_2','queryParser.py',413),
  ('rest_union_block -> empty','rest_union_block',1,'p_rest_union_block_0','queryParser.py',420),
  ('rest_union_block -> UNION LKEY join_block rest_union_block RKEY rest_union_block','rest_union_block',6,'p_rest_union_block_1','queryParser.py',427),
  ('join_block -> LKEY union_block RKEY rest_join_block','join_block',4,'p_join_block_0','queryParser.py',434),
  ('join_block -> bgp rest_join_block','join_block',2,'p_join_block_1','queryParser.py',448),
  ('rest_join_block -> empty','rest_join_block',1,'p_rest_join_block_0','queryParser.py',455),
  ('rest_join_block -> POINT bgp rest_join_block','rest_join_block',3,'p_rest_join_block_1','queryParser.py',462),
  ('rest_join_block -> bgp rest_join_block','rest_join_block',2,'p_rest_join_block_2','queryParser.py',469),
  ('bgp -> LKEY bgp UNION bgp rest_union_block RKEY','bgp',6,'p_bgp_0','queryParser.py',476),
  ('bgp -> bgp UNION bgp rest_union_block','bgp',4,'p_bgp_01','queryParser.py',484),
  ('bgp -> triple','bgp',1,'p_bgp_1','queryParser.py',492),
  ('bgp -> FILTER LPAR expression RPAR','bgp',4,'p_bgp_2','queryParser.py',499),
  ('bgp -> FILTER express_rel','bgp',2,'p_bgp_3','queryParser.py',506),
  ('bgp -> OPTIONAL LKEY group_graph_pattern RKEY','bgp',4,'p_bgp_4','queryParser.py',513),
  ('bgp -> LKEY join_block RKEY','bgp',3,'p_bgp_6','queryParser.py',528),
  ('bgp -> VALUES LPAR var_list RPAR LKEY data_block RKEY','bgp',7,'p_bgp_7','queryParser.py',538),
  ('bgp -> VALUES var_list LKEY data_block RKEY','bgp',5,'p_bgp_8','queryParser.py',545),
  ('data_block -> data_block LPAR values_list RPAR','data_block',4,'p_data_block_0','queryParser.py',551),
  ('data_block -> data_block values_list','data_block',2,'p_data_block_1','queryParser.py',558),
  ('data_block -> values_list','data_block',1,'p_data_block_2','queryParser.py',565),
  ('data_block -> LPAR values_list RPAR','data_block',3,'p_data_block_3','queryParser.py',572),
  ('values_list -> values_list value_arg','values_list',2,'p_values_list_0','queryParser.py',579),
  ('values_list -> value_arg','values_list',1,'p_values_list_1','queryParser.py',586),
  ('value_arg -> uri','value_arg',1,'p_value_arg_0','queryParser.py',593),
  ('value_arg -> CONSTANT','value_arg',1,'p_value_arg_1','queryParser.py',600),
  ('value_arg -> UNDEF','value_arg',1,'p_value_arg_2','queryParser.py',612),
  ('expression -> express_rel LOGOP expression','expression',3,'p_expression_0','queryParser.py',619),
  ('expression -> express_rel','expression',1,'p_expression_1','queryParser.py',626),
  ('expression -> LPAR expression RPAR','expression',3,'p_expression_2','queryParser.py',633),
  ('express_rel -> express_arg RELOP express_rel','express_rel',3,'p_express_rel_0','queryParser.py',640),
  ('express_rel -> express_arg','express_rel',1,'p_express_rel_1','queryParser.py',647),
  ('express_rel -> LPAR express_rel RPAR','express_rel',3,'p_express_rel_2','queryParser.py',654),
  ('express_rel -> NEG LPAR expression RPAR','express_rel',4,'p_express_rel_3','queryParser.py',661),
  ('express_rel -> NEG express_rel','express_rel',2,'p_express_rel_4','queryParser.py',668),
  ('express_arg -> uri','express_arg',1,'p_express_arg_0','queryParser.py',675),
  ('express_arg -> VARIABLE','express_arg',1,'p_express_arg_1','queryParser.py',682),
  ('express_arg -> CONSTANT','express_arg',1,'p_express_arg_2','queryParser.py',689),
  ('express_arg -> NUMBER','express_arg',1,'p_express_arg_3','queryParser.py',701),
  ('express_arg -> NUMBER POINT NUMBER','express_arg',3,'p_express_arg_03','queryParser.py',708),
  ('express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag','express_arg',6,'p_express_arg_4','queryParser.py',716),
  ('regex_flag -> RPAR','regex_flag',1,'p_regex_flags_0','queryParser.py',723),
  ('regex_flag -> COMA pattern_arg RPAR','regex_flag',3,'p_regex_flags_1','queryParser.py',730),
  ('pattern_arg -> CONSTANT','pattern_arg',1,'p_pattern_arg_0','queryParser.py',737),
  ('express_arg -> binary_func LPAR express_arg COMA express_arg RPAR','express_arg',6,'p_express_arg_5','queryParser.py',744),
  ('express_arg -> unary_func LPAR express_arg RPAR','express_arg',4,'p_express_arg_6','queryParser.py',751),
  ('express_arg -> UNARYOP express_arg','express_arg',2,'p_express_arg_7','queryParser.py',758),
  ('express_arg -> express_arg ARITOP express_arg','express_arg',3,'p_express_arg_8','queryParser.py',765),
  ('express_arg -> LPAR express_arg RPAR','express_arg',3,'p_express_arg_9','queryParser.py',772),
  ('express_arg -> express_arg RELOP express_arg','express_arg',3,'p_express_arg_10','queryParser.py',779),
  ('ARITOP -> PLUS','ARITOP',1,'p_arit_op_0','queryParser.py',786),
  ('ARITOP -> MINUS','ARITOP',1,'p_arit_op_1','queryParser.py',793),
  ('ARITOP -> TIMES','ARITOP',1,'p_arit_op_2','queryParser.py',800),
  ('ARITOP -> DIV','ARITOP',1,'p_arit_op_3','queryParser.py',807),
  ('UNARYOP -> PLUS','UNARYOP',1,'p_unaryarit_op_1','queryParser.py',814),
  ('UNARYOP -> MINUS','UNARYOP',1,'p_unaryarit_op_2','queryParser.py',821),
  ('LOGOP -> AND','LOGOP',1,'p_logical_op_0','queryParser.py',828),
  ('LOGOP -> OR','LOGOP',1,'p_logical_op_1','queryParser.py',835),
  ('RELOP -> EQUALS','RELOP',1,'p_relational_op_0','queryParser.py',842),
  ('RELOP -> LESS','RELOP',1,'p_relational_op_1','queryParser.py',849),
  ('RELOP -> LESSEQ','RELOP',1,'p_relational_op_2','queryParser.py',856),
  ('RELOP -> GREATER','RELOP',1,'p_relational_op_3','queryParser.py',863),
  ('RELOP -> GREATEREQ','RELOP',1,'p_relational_op_4','queryParser.py',870),
  ('RELOP -> NEQUALS','RELOP',1,'p_relational_op_5','queryParser.py',877),
  ('binary_func -> REGEX','binary_func',1,'p_binary_0','queryParser.py',884),
  ('binary_func -> SAMETERM','binary_func',1,'p_binary_1','queryParser.py',891),
  ('binary_func -> LANGMATCHES','binary_func',1,'p_binary_2','queryParser.py',898),
  ('binary_func -> CONSTANT','binary_func',1,'p_binary_3','queryParser.py',905),
  ('binary_func -> CONTAINS','binary_func',1,'p_binary_4','queryParser.py',912),
  ('unary_func -> BOUND','unary_func',1,'p_unary_0','queryParser.py',919),
  ('unary_func -> ISIRI','unary_func',1,'p_unary_1','queryParser.py',926),
  ('unary_func -> ISURI','unary_func',1,'p_unary_2','queryParser.py',933),
  ('unary_func -> ISBLANK','unary_func',1,'p_unary_3','queryParser.py',940),
  ('unary_func -> ISLITERAL','unary_func',1,'p_unary_4','queryParser.py',947),
  ('unary_func -> LANG','unary_func',1,'p_unary_5','queryParser.py',954),
  ('unary_func -> DATATYPE','unary_func',1,'p_unary_6','queryParser.py',961),
  ('unary_func -> STR','unary_func',1,'p_unary_7','queryParser.py',968),
  ('unary_func -> UPPERCASE','unary_func',1,'p_unary_8','queryParser.py',975),
  ('unary_func -> DOUBLE','unary_func',1,'p_unary_9','queryParser.py',982),
  ('unary_func -> INTEGER','unary_func',1,'p_unary_9','queryParser.py',983),
  ('unary_func -> DECIMAL','unary_func',1,'p_unary_9','queryParser.py',984),
  ('unary_func -> FLOAT','unary_func',1,'p_unary_9','queryParser.py',985),
  ('unary_func -> STRING','unary_func',1,'p_unary_9','queryParser.py',986),
  ('unary_func -> BOOLEAN','unary_func',1,'p_unary_9','queryParser.py',987),
  ('unary_func -> DATETIME','unary_func',1,'p_unary_9','queryParser.py',988),
  ('unary_func -> NONPOSINT','unary_func',1,'p_unary_9','queryParser.py',989),
  ('unary_func -> NEGATIVEINT','unary_func',1,'p_unary_9','queryParser.py',990),
  ('unary_func -> LONG','unary_func',1,'p_unary_9','queryParser.py',991),
  ('unary_func -> INT','unary_func',1,'p_unary_9','queryParser.py',992),
  ('unary_func -> SHORT','unary_func',1,'p_unary_9','queryParser.py',993),
  ('unary_func -> BYTE','unary_func',1,'p_unary_9','queryParser.py',994),
  ('unary_func -> NONNEGINT','unary_func',1,'p_unary_9','queryParser.py',995),
  ('unary_func -> UNSIGNEDLONG','unary_func',1,'p_unary_9','queryParser.py',996),
  ('unary_func -> UNSIGNEDINT','unary_func',1,'p_unary_9','queryParser.py',997),
  ('unary_func -> UNSIGNEDSHORT','unary_func',1,'p_unary_9','queryParser.py',998),
  ('unary_func -> UNSIGNEDBYTE','unary_func',1,'p_unary_9','queryParser.py',999),
  ('unary_func -> POSITIVEINT','unary_func',1,'p_unary_9','queryParser.py',1000),
  ('unary_func -> ID COLON ID','unary_func',3,'p_unary_10','queryParser.py',1007),
  ('unary_func -> uri','unary_func',1,'p_unary_11','queryParser.py',1014),
  ('unary_func -> UCASE','unary_func',1,'p_unary_12','queryParser.py',1021),
  ('unary_func -> LCASE','unary_func',1,'p_unary_13','queryParser.py',1028),
  ('var_list -> var_list VARIABLE','var_list',2,'p_var_list','queryParser.py',1035),
  ('var_list -> VARIABLE','var_list',1,'p_single_var_list','queryParser.py',1042),
  ('triple -> subject predicate object','triple',3,'p_triple_0','queryParser.py',1049),
  ('predicate -> ID','predicate',1,'p_predicate_rdftype','queryParser.py',1056),
  ('predicate -> uri','predicate',1,'p_predicate_uri','queryParser.py',1069),
  ('predicate -> VARIABLE','predicate',1,'p_predicate_var','queryParser.py',1076),
  ('subject -> uri','subject',1,'p_subject_uri','queryParser.py',1083),
  ('subject -> VARIABLE','subject',1,'p_subject_variable','queryParser.py',1090),
  ('object -> uri','object',1,'p_object_uri','queryParser.py',1097),
  ('object -> VARIABLE','object',1,'p_object_variable','queryParser.py',1104),
  ('object -> CONSTANT','object',1,'p_object_constant','queryParser.py',1111),
]
