# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'VaultClusterAuditLogConfigArgs',
    'VaultClusterMetricsConfigArgs',
    'GetVaultClusterAuditLogConfigArgs',
    'GetVaultClusterMetricsConfigArgs',
]

@pulumi.input_type
class VaultClusterAuditLogConfigArgs:
    def __init__(__self__, *,
                 datadog_api_key: Optional[pulumi.Input[str]] = None,
                 datadog_region: Optional[pulumi.Input[str]] = None,
                 grafana_endpoint: Optional[pulumi.Input[str]] = None,
                 grafana_password: Optional[pulumi.Input[str]] = None,
                 grafana_user: Optional[pulumi.Input[str]] = None,
                 splunk_hecendpoint: Optional[pulumi.Input[str]] = None,
                 splunk_token: Optional[pulumi.Input[str]] = None):
        if datadog_api_key is not None:
            pulumi.set(__self__, "datadog_api_key", datadog_api_key)
        if datadog_region is not None:
            pulumi.set(__self__, "datadog_region", datadog_region)
        if grafana_endpoint is not None:
            pulumi.set(__self__, "grafana_endpoint", grafana_endpoint)
        if grafana_password is not None:
            pulumi.set(__self__, "grafana_password", grafana_password)
        if grafana_user is not None:
            pulumi.set(__self__, "grafana_user", grafana_user)
        if splunk_hecendpoint is not None:
            pulumi.set(__self__, "splunk_hecendpoint", splunk_hecendpoint)
        if splunk_token is not None:
            pulumi.set(__self__, "splunk_token", splunk_token)

    @property
    @pulumi.getter(name="datadogApiKey")
    def datadog_api_key(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "datadog_api_key")

    @datadog_api_key.setter
    def datadog_api_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "datadog_api_key", value)

    @property
    @pulumi.getter(name="datadogRegion")
    def datadog_region(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "datadog_region")

    @datadog_region.setter
    def datadog_region(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "datadog_region", value)

    @property
    @pulumi.getter(name="grafanaEndpoint")
    def grafana_endpoint(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "grafana_endpoint")

    @grafana_endpoint.setter
    def grafana_endpoint(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "grafana_endpoint", value)

    @property
    @pulumi.getter(name="grafanaPassword")
    def grafana_password(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "grafana_password")

    @grafana_password.setter
    def grafana_password(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "grafana_password", value)

    @property
    @pulumi.getter(name="grafanaUser")
    def grafana_user(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "grafana_user")

    @grafana_user.setter
    def grafana_user(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "grafana_user", value)

    @property
    @pulumi.getter(name="splunkHecendpoint")
    def splunk_hecendpoint(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "splunk_hecendpoint")

    @splunk_hecendpoint.setter
    def splunk_hecendpoint(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "splunk_hecendpoint", value)

    @property
    @pulumi.getter(name="splunkToken")
    def splunk_token(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "splunk_token")

    @splunk_token.setter
    def splunk_token(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "splunk_token", value)


@pulumi.input_type
class VaultClusterMetricsConfigArgs:
    def __init__(__self__, *,
                 datadog_api_key: Optional[pulumi.Input[str]] = None,
                 datadog_region: Optional[pulumi.Input[str]] = None,
                 grafana_endpoint: Optional[pulumi.Input[str]] = None,
                 grafana_password: Optional[pulumi.Input[str]] = None,
                 grafana_user: Optional[pulumi.Input[str]] = None,
                 splunk_hecendpoint: Optional[pulumi.Input[str]] = None,
                 splunk_token: Optional[pulumi.Input[str]] = None):
        if datadog_api_key is not None:
            pulumi.set(__self__, "datadog_api_key", datadog_api_key)
        if datadog_region is not None:
            pulumi.set(__self__, "datadog_region", datadog_region)
        if grafana_endpoint is not None:
            pulumi.set(__self__, "grafana_endpoint", grafana_endpoint)
        if grafana_password is not None:
            pulumi.set(__self__, "grafana_password", grafana_password)
        if grafana_user is not None:
            pulumi.set(__self__, "grafana_user", grafana_user)
        if splunk_hecendpoint is not None:
            pulumi.set(__self__, "splunk_hecendpoint", splunk_hecendpoint)
        if splunk_token is not None:
            pulumi.set(__self__, "splunk_token", splunk_token)

    @property
    @pulumi.getter(name="datadogApiKey")
    def datadog_api_key(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "datadog_api_key")

    @datadog_api_key.setter
    def datadog_api_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "datadog_api_key", value)

    @property
    @pulumi.getter(name="datadogRegion")
    def datadog_region(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "datadog_region")

    @datadog_region.setter
    def datadog_region(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "datadog_region", value)

    @property
    @pulumi.getter(name="grafanaEndpoint")
    def grafana_endpoint(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "grafana_endpoint")

    @grafana_endpoint.setter
    def grafana_endpoint(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "grafana_endpoint", value)

    @property
    @pulumi.getter(name="grafanaPassword")
    def grafana_password(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "grafana_password")

    @grafana_password.setter
    def grafana_password(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "grafana_password", value)

    @property
    @pulumi.getter(name="grafanaUser")
    def grafana_user(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "grafana_user")

    @grafana_user.setter
    def grafana_user(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "grafana_user", value)

    @property
    @pulumi.getter(name="splunkHecendpoint")
    def splunk_hecendpoint(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "splunk_hecendpoint")

    @splunk_hecendpoint.setter
    def splunk_hecendpoint(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "splunk_hecendpoint", value)

    @property
    @pulumi.getter(name="splunkToken")
    def splunk_token(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "splunk_token")

    @splunk_token.setter
    def splunk_token(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "splunk_token", value)


@pulumi.input_type
class GetVaultClusterAuditLogConfigArgs:
    def __init__(__self__, *,
                 datadog_region: str,
                 grafana_endpoint: str,
                 grafana_user: str,
                 splunk_hecendpoint: str):
        pulumi.set(__self__, "datadog_region", datadog_region)
        pulumi.set(__self__, "grafana_endpoint", grafana_endpoint)
        pulumi.set(__self__, "grafana_user", grafana_user)
        pulumi.set(__self__, "splunk_hecendpoint", splunk_hecendpoint)

    @property
    @pulumi.getter(name="datadogRegion")
    def datadog_region(self) -> str:
        return pulumi.get(self, "datadog_region")

    @datadog_region.setter
    def datadog_region(self, value: str):
        pulumi.set(self, "datadog_region", value)

    @property
    @pulumi.getter(name="grafanaEndpoint")
    def grafana_endpoint(self) -> str:
        return pulumi.get(self, "grafana_endpoint")

    @grafana_endpoint.setter
    def grafana_endpoint(self, value: str):
        pulumi.set(self, "grafana_endpoint", value)

    @property
    @pulumi.getter(name="grafanaUser")
    def grafana_user(self) -> str:
        return pulumi.get(self, "grafana_user")

    @grafana_user.setter
    def grafana_user(self, value: str):
        pulumi.set(self, "grafana_user", value)

    @property
    @pulumi.getter(name="splunkHecendpoint")
    def splunk_hecendpoint(self) -> str:
        return pulumi.get(self, "splunk_hecendpoint")

    @splunk_hecendpoint.setter
    def splunk_hecendpoint(self, value: str):
        pulumi.set(self, "splunk_hecendpoint", value)


@pulumi.input_type
class GetVaultClusterMetricsConfigArgs:
    def __init__(__self__, *,
                 datadog_region: str,
                 grafana_endpoint: str,
                 grafana_user: str,
                 splunk_hecendpoint: str):
        pulumi.set(__self__, "datadog_region", datadog_region)
        pulumi.set(__self__, "grafana_endpoint", grafana_endpoint)
        pulumi.set(__self__, "grafana_user", grafana_user)
        pulumi.set(__self__, "splunk_hecendpoint", splunk_hecendpoint)

    @property
    @pulumi.getter(name="datadogRegion")
    def datadog_region(self) -> str:
        return pulumi.get(self, "datadog_region")

    @datadog_region.setter
    def datadog_region(self, value: str):
        pulumi.set(self, "datadog_region", value)

    @property
    @pulumi.getter(name="grafanaEndpoint")
    def grafana_endpoint(self) -> str:
        return pulumi.get(self, "grafana_endpoint")

    @grafana_endpoint.setter
    def grafana_endpoint(self, value: str):
        pulumi.set(self, "grafana_endpoint", value)

    @property
    @pulumi.getter(name="grafanaUser")
    def grafana_user(self) -> str:
        return pulumi.get(self, "grafana_user")

    @grafana_user.setter
    def grafana_user(self, value: str):
        pulumi.set(self, "grafana_user", value)

    @property
    @pulumi.getter(name="splunkHecendpoint")
    def splunk_hecendpoint(self) -> str:
        return pulumi.get(self, "splunk_hecendpoint")

    @splunk_hecendpoint.setter
    def splunk_hecendpoint(self, value: str):
        pulumi.set(self, "splunk_hecendpoint", value)


