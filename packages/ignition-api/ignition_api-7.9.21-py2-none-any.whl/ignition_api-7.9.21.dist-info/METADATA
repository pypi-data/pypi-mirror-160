Metadata-Version: 2.1
Name: ignition-api
Version: 7.9.21
Summary: Ignition Scripting API
Home-page: https://ignition-api.github.io/7.9
Author: César Román
Author-email: cesar@thecesrom.dev
License: MIT
Project-URL: Source, https://github.com/ignition-api/7.9
Project-URL: Documentation, https://docs.inductiveautomation.com/display/DOC79/Scripting+Functions
Project-URL: Funding, https://github.com/sponsors/thecesrom
Project-URL: Tracker, https://github.com/ignition-api/7.9/issues
Keywords: hmi,ignition,inductive automation,scada
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: Manufacturing
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2 :: Only
Classifier: Programming Language :: Python :: 2.7
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Software Development :: Testing :: Mocking
Requires-Python: ==2.7.18
Description-Content-Type: text/markdown
Requires-Dist: typing

# ignition-api 7.9

<!--- Badges --->
![GitHub last commit (7.9)](https://img.shields.io/github/last-commit/ignition-api/7.9/main)
[![GitHub contributors](https://img.shields.io/github/contributors/ignition-api/7.9)](https://github.com/ignition-api/7.9/graphs/contributors)
[![Downloads](https://pepy.tech/badge/ignition-api)](https://pepy.tech/project/ignition-api)
[![Sourcery](https://img.shields.io/badge/Sourcery-enabled-brightgreen)](https://sourcery.ai)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)
[![Imports: isort](https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&labelColor=ef8336)](https://pycqa.github.io/isort/)
[![Imports: flake8](https://img.shields.io/badge/%20imports-flake8-%231674b1?style=flat&labelColor=ef8336)](https://flake8.pycqa.org/en/latest/)
[![Imports: pydocstyle](https://img.shields.io/badge/%20imports-pydocstyle-%231674b1?style=flat&labelColor=ef8336)](https://www.pydocstyle.org/en/stable/)
[![linting: pylint](https://img.shields.io/badge/linting-pylint-yellowgreen)](https://github.com/PyCQA/pylint)
[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/ignition-api/8.1/main.svg)](https://results.pre-commit.ci/latest/github/ignition-api/8.1/main)
[![Join us on GitHub discussions](https://img.shields.io/badge/github-discussions-informational)](https://github.com/ignition-api/discussions/discussions)

ignition-api is a Python package that allows developers to get code completion for Ignition Scripting API scripting functions in their IDE of choice.

## Table of contents

- [Prerequisites](#prerequisites)
- [Installation and usage](#installation-and-usage)
  - [Installing with pip](#installing-with-pip)
  - [Downloading from releases](#downloading-from-releases)
    - [Using as a dependency in PyCharm](#using-as-a-dependency-in-pycharm)
- [Project structure](#project-structure)
  - [Packages](#packages)
- [Contributing](#contributing)
- [Discussions](#discussions)
- [Contributors](#contributors)
- [License](#license)
- [Code of conduct](#code-of-conduct)

## Prerequisites

Before you begin, ensure you have met the following requirements:

- You have installed Python 2.7.18 ([download here](https://www.python.org/downloads/release/python-2718/))
- You are familiar with [Ignition 7.9 Scripting Functions](https://docs.inductiveautomation.com/display/DOC79/Scripting+Functions)

## Installation and usage

To use Ignition, you may install it by doing any of the following.

### Installing with `pip`

The preferred method is to install it by running `pip`. It requires Python 2.7.18.

```bash
python2 -m pip install ignition-api==7.9.21
```

This will install it as package to your Python installation, which will allow you to call Ignition Scripting functions from Python's REPL, and get code completion using an IDE such as PyCharm and Visual Studio Code.

```bash
$ python2
Python 2.7.18 (default, Nov  9 2020, 16:23:15)
[GCC Apple LLVM 12.0.0 (clang-1200.0.32.21)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> from __future__ import print_function
>>> import system.util
>>> print(system.util.__doc__)
Utility Functions.

The following functions give you access to view various Gateway and
Client data, as well as interact with other various systems.

>>> system.util.beep()
>>> quit()
```

And to uninstall:

```bash
python2 -m pip uninstall ignition-api
```

### Downloading from releases

You may also download the code targeted to your desired version from the [releases page](https://github.com/ignition-api/7.9/releases) and add it as a dependency to your scripting project.

#### Using as a dependency in PyCharm

To include ignition-api as a dependency in PyCharm, you will need to attach it to your project.

1. Clone the repo or download from [releases](https://github.com/ignition-api/7.9/releases)
2. With your project open where you want to include `ignition-api`, navigate to `File > Open` and select the `ignition-api` project folder
3. Choose `Attach` when prompted
4. Under the `ignitition-api` project folder, right-click on the `src/` folder and choose `Mark Directory as > Sources Root`

## Project structure

### Packages

Ignition consists of the following packages:

- com.inductiveautomation
- java
- javax
- org
- system

#### com.inductiveautomation

This package includes supporting Inductive Automation's classes and interfaces. For more information, see documentation here: <http://files.inductiveautomation.com/sdk/javadoc/ignition79/795/index.html>.

#### java/javax

These packages include supporting Java classes and interfaces. For more information, see documentation here: <https://docs.oracle.com/javase/8/docs/api/index.html>.

#### org.apache

This package includes supporting classes and interfaces from Apache Commons Lang API. For more information, see documentation here: <https://javadoc.io/doc/org.apache.commons/commons-lang3/3.3.2/index.html>

#### org.python

This package includes supporting Jython classes and interfaces. For more information, see documentation here: <https://www.javadoc.io/doc/org.python/jython-standalone/2.5.3/index.html>.

#### org.slf4j

This package includes supporting classes and interfaces from SLF4J API Module. For more information, see documentation here: <https://www.javadoc.io/doc/org.slf4j/slf4j-api/1.7.21/overview-summary.html>.

#### system

This package includes all Ignition Scripting Functions. For more information, see documentation here: <https://docs.inductiveautomation.com/display/DOC79/Scripting+Functions>.

## Contributing

See [CONTRIBUTING.md](https://github.com/ignition-api/.github/blob/main/CONTRIBUTING.md#contributing-to-ignition-api).

## Discussions

Feel free to post your questions and/or ideas at [Discussions](https://github.com/ignition-api/discussions/discussions).

## Contributors

Thanks to everyone who has contributed to this project.

Up-to-date list of contributors can be found [here](https://github.com/ignition-api/7.9/graphs/contributors).

## License

See the [LICENSE](https://github.com/ignition-api/7.9/blob/HEAD/LICENSE).

## Code of conduct

This project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).

## v7.9.21 (2022-07-27)

### Feat

- **java**: add String to java.lang (#22)

## v7.9.20 (2022-05-13)

### Fix

- **system**: update type hint for `html` arg (#17)

## v7.9.19 (2022-03-15)

### Refactor

- Sourcery refactored main branch (#1)

## v7.9.18.post7 (2022-01-20)

### Refactor

- move `String` alias to `java.util`
- define ColType as a type alias

## v7.9.18.post6 (2021-11-30)

### Feat

- simplify `beep` code

### BREAKING CHANGE

- `system.util.beep()` will print "Beep!" when called
regardless of platform

### Fix

- **mypy**: add `String` type definition

## v7.9.18.post5 (2021-11-29)

### Feat

- add `String` type

## v7.9.18.post4 (2021-11-26)

### Fix

- install now requires typing

## v7.9.18.post3 (2021-11-23)

### Feat

- add type hints on all `system` functions
- remove deprecated functions
- the triumphant return of `print_function`
- improve `date.format`

### BREAKING CHANGE

- Python versions below 2.7.18 are no longer supported
- `export*` functions have been deprecated in favor
of `system.dataset.export*` functions
- Python versions below 2.7.18 are no longer supported

### Fix

- **ci**: set `python-version` to '3.10'
- **ci**: set `python-version` to 3.10.0

### Refactor

- implement informal interfaces

## v7.9.18.post2 (2021-09-21)

### Feat

- make PyDataSet iterable

## v7.9.18.post1 (2021-09-20)

### Feat

- add `com` package to `pip` release
- **setup**: allow installation on 2.5, 2.6, and 2.7
- **setup**: add setup.py

### Refactor

- use pprint instead of print
- add `com` package
- allow any import level for winsound
- add pylint

### BREAKING CHANGE

- Since Ignition 7.9 relies on Jython 2.5.3, this
  project was adapted to conform with Python 2.5.6

## v7.9.18 (2021-07-08)

### Refactor

- java.util.Date

### Feat

- **pre-commit**: update black 21.5b0 -> 21.5b1
- **pre-commit**: update flake8 3.9.1 -> 3.9.2
- **pre-commit**: update black 21.4b2 -> 21.5b0
- **pre-commit**: update black 21.4b1 -> 21.4b2
- **pre-commit**: update black 21.4b0 -> 21.4b1
- **pre-commit**: update black 20.8b1 -> 21.4b0
- **pre-commit**: bump flake8 to 3.9.1

## v7.9.17 (2021-02-12)

### Feat

- add flake8 to pre-commit hooks

## v7.9.14 (2020-09-01)


