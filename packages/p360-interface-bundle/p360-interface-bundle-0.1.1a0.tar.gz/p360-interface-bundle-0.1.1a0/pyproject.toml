[tool.poetry]
name = "p360-interface-bundle"
version = "0.1.1-alpha.0"
description = "Persona360 interface bundle"
readme = "README.md"

license = "Proprietary"

authors = [
    "Datasentics <jiri.koutny@datasentics.com>"
]

classifiers = [
    "Programming Language :: Python :: 3",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
]

include = ["*.yaml"]

packages = [
    { include = "p360_interface_bundle", from = "src" },
]

[tool.poetry.dependencies]
python = ">=3.8.10,<4.0.0"
pyfony-bundles = "~0.4.4"
daipe-core = "^1.4.2"
databricks-bundle = "^1.4.5"
feature-store-bundle = "2.5.0"

[tool.poetry.dev-dependencies]
pyspark = {url = "https://daipe-packages.s3.eu-central-1.amazonaws.com/pyspark-3.2.0-py2.py3-none-any.whl"}
delta-spark = {url = "https://daipe-packages.s3.eu-central-1.amazonaws.com/delta_spark-1.1.0-py3-none-any.whl"}
pyspark-bundle = "^1.2.3"
pytest = "^6.0"
black = "^22.3.0"
poethepoet = "^0.10.0"
pylint = "^2.13.7"
pyre-check-nightly = { version = "^0.0.101638533492", markers = "sys_platform == 'linux'"}

[tool.poetry.plugins."pyfony.bundle"]
create = "p360_interface_bundle.P360InterfaceBundle:P360InterfaceBundle"

[pyfony.bootstrap]
container_init = "pyfonycore.container.container_init:init_with_current_bundle"
root_module_name = "p360_interface_bundle"

[tool.black]
line-length = 140

[tool.pylint.basic]
module-rgx = "(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$"

[tool.pylint.messages_control]
disable = [
    "missing-docstring",
    "wrong-import-order",
    "duplicate-code",
    "line-too-long",
    "too-many-arguments",
    "too-few-public-methods",
    "ungrouped-imports",
]
good-names = ["e", "i", "k", "n", "f", "v", "df", "sc"]

[tool.poe.tasks]
black = "black src"
black-check = "black --check src"
pylint = "pylint src"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
