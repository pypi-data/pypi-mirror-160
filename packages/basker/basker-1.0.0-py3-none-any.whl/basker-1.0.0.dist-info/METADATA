Metadata-Version: 2.1
Name: basker
Version: 1.0.0
Summary: Simple and clean background tasks.
Project-URL: Homepage, https://github.com/twanwalpot/basker
Project-URL: Bug Tracker, https://github.com/twanwalpot/basker/issues
Author-email: Twan Walpot <twan@walpot.dev>
License: MIT License
        
        Copyright (c) 2022 Twan Walpot
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.7
Description-Content-Type: text/markdown

# Basker

Basker is a simple wrapper around `multiprocessing.Process`,
giving users a nicer API as well as task results.

I wrote Basker for educational purposes, but it is also suited
for actual use. If you are interested in the story behind Basker
you can read it on my [blog](https://blog.walpot.dev/basker)

## Installation

```shell
$ pip install basker
```

## Example

In the following snippet, calling `example` starts a background process and
returns a `unbocked.Result` instance. This result can be retrieved with
`unbocked.Result.get`

```python
import basker

@basker.task
def example():
    return 5 * 5

if __name__ == "__main__":
    result = example()
    print(result.get(timeout=1))
```
