Metadata-Version: 2.1
Name: renameit
Version: 0.1.0a0
Summary: File renaming tool
Home-page: https://github.com/Hasan-J/renameit
Author: Hasan Jawad
Author-email: hasan_sg@hotmail.com
License: MIT
Keywords: rename, copy, files, renaming,,naming files, refactor, file names,datalake, azure, aws, gcp, google
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.10
Classifier: Natural Language :: English
Requires-Python: >=3.10
Description-Content-Type: text/markdown
Provides-Extra: azure
Provides-Extra: aws
Provides-Extra: google
License-File: LICENSE.txt

# renameit
> Pure python CLI tool for renaming files and folders locally or on the cloud.

# Description

Reshape your data lakes by transforming files and folders structure with a single command and without the complications of writing manual scripts.
Data engineers and data analysts constantly have to worry about keeping the structure of their data organized in order to efficiently read
and access them. This tool allows them to change the file or folder structure of their data lakes on a cloud storage system or even on local storage
(e.g. locally mounted cloud storage).

---

[![Open in Remote - Containers](https://img.shields.io/static/v1?label=Remote%20-%20Containers&message=Open&color=blue&logo=visualstudiocode)](https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/Hasan-J/renameit)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)
[![Main](https://github.com/Hasan-J/renameit/actions/workflows/main.yml/badge.svg)](https://github.com/Hasan-J/renameit/actions/workflows/main.yml)
![PyPI - Python Version](https://img.shields.io/pypi/pyversions/renameit)
![PyPI](https://img.shields.io/pypi/v/renameit)
[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white)](https://github.com/pre-commit/pre-commit)

# Documentaion

Full documentation available [here](https://hasan-j.github.io/renameit/).

# License

Distributed under the MIT License. See ``LICENSE`` for more information.

# Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [Unreleased]

## [0.1.0-alpha.0] - 2022-07-26

Initial release

# Contributing

If you already have VS Code and Docker installed, you can click the `Remote - Containers` badge located at teh top of the README file
or [here](https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/microsoft/vscode-remote-try-java)
to get started. Clicking these links will cause VS Code to automatically install the Remote - Containers extension if needed,
clone the source code into a container volume, and spin up a dev container for use.

1. Spin up a dev container
2. Create your feature branch (`git checkout -b feature/fooBar`)
3. Commit your changes (`git commit -am 'Add some fooBar'`)
4. Push to the branch (`git push origin feature/fooBar`)
5. Create a new Pull Request
