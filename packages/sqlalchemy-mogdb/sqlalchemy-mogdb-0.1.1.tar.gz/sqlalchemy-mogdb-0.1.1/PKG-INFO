Metadata-Version: 2.1
Name: sqlalchemy-mogdb
Version: 0.1.1
Summary: Enmotech MogDB Dialect for SQLAlchemy
Home-page: https://github.com/vimiix/sqlalchemy-mogdb
Author: enmotech
Maintainer: Vimiix
Maintainer-email: i@vimiix.com
License: MIT
Keywords: Enmotech MogDB
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires-Python: >=3.4
Description-Content-Type: text/x-rst
License-File: LICENSE

sqlalchemy-mogdb
===================

Enmotech MogDB dialect for SQLAlchemy.

Installation
------------

The package is available on PyPI::

    pip install sqlalchemy-mogdb

.. warning::

    This dialect requires ``psycopg2`` to work properly. It does not provide
    it as required, but relies on you to select the distribution you need:

    * psycopg2 - standard distribution of psycopg2, requires compilation so few system dependencies are required for it
    * psycopg2-binary - already compiled distribution (no system dependencies are required)
    * psycopg2cffi - pypy compatible version

    See `Psycopg2's binary install docs <http://initd.org/psycopg/docs/install.html#binary-install-from-pypi>`_
    for more context on choosing a distribution.

Usage
-----
The DSN format is similar to that of regular Postgres::

    >>> import sqlalchemy as sa
    >>> sa.create_engine('mogdb+psycopg2://username:password@ip:26000/database')
    Engine(mogdb+psycopg2://username@ip:26000/database)

Releasing
---------

To perform a release, you will need to be an admin for the project on
GitHub and on PyPI. Contact the maintainers if you need that access.

You will need to have a `~/.pypirc` with your PyPI credentials and
also the following settings::

    [zest.releaser]
    create-wheels = yes

To perform a release, run the following::

    python3.6 -m venv ~/.virtualenvs/dist
    workon dist
    pip install -U pip setuptools wheel
    pip install -U tox zest.releaser
    fullrelease  # follow prompts, use semver ish with versions.
