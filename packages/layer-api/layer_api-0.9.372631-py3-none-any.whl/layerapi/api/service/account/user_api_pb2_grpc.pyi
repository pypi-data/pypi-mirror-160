"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import layerapi.api.service.account.user_api_pb2
import grpc

class UserAPIStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    GetUser: grpc.UnaryUnaryMultiCallable[
        api.service.account.user_api_pb2.GetUserRequest,
        api.service.account.user_api_pb2.GetUserResponse]

    GetUserByAccountId: grpc.UnaryUnaryMultiCallable[
        api.service.account.user_api_pb2.GetUserByAccountIdRequest,
        api.service.account.user_api_pb2.GetUserByAccountIdResponse]

    GetUserOrganizations: grpc.UnaryUnaryMultiCallable[
        api.service.account.user_api_pb2.GetUserOrganizationsRequest,
        api.service.account.user_api_pb2.GetUserOrganizationsResponse]

    GetMyUser: grpc.UnaryUnaryMultiCallable[
        api.service.account.user_api_pb2.GetMyUserRequest,
        api.service.account.user_api_pb2.GetMyUserResponse]

    GetMyPermissions: grpc.UnaryUnaryMultiCallable[
        api.service.account.user_api_pb2.GetMyPermissionsRequest,
        api.service.account.user_api_pb2.GetMyPermissionsResponse]

    GetOrganizations: grpc.UnaryUnaryMultiCallable[
        api.service.account.user_api_pb2.GetOrganizationsRequest,
        api.service.account.user_api_pb2.GetOrganizationsResponse]

    GetOrganizationByName: grpc.UnaryUnaryMultiCallable[
        api.service.account.user_api_pb2.GetOrganizationByNameRequest,
        api.service.account.user_api_pb2.GetOrganizationByNameResponse]

    GetOrganizationByAccountId: grpc.UnaryUnaryMultiCallable[
        api.service.account.user_api_pb2.GetOrganizationByAccountIdRequest,
        api.service.account.user_api_pb2.GetOrganizationByAccountIdResponse]

    GetOrganizationMembers: grpc.UnaryUnaryMultiCallable[
        api.service.account.user_api_pb2.GetOrganizationMembersRequest,
        api.service.account.user_api_pb2.GetOrganizationMembersResponse]

    ReCreateLayerOrganizationForExistingAuth0Organization: grpc.UnaryUnaryMultiCallable[
        api.service.account.user_api_pb2.ReCreateLayerOrganizationForExistingAuth0OrganizationRequest,
        api.service.account.user_api_pb2.ReCreateLayerOrganizationForExistingAuth0OrganizationResponse]

    UpdateOrganization: grpc.UnaryUnaryMultiCallable[
        api.service.account.user_api_pb2.UpdateOrganizationRequest,
        api.service.account.user_api_pb2.UpdateOrganizationResponse]

    GetOrganizationInvites: grpc.UnaryUnaryMultiCallable[
        api.service.account.user_api_pb2.GetOrganizationInvitesRequest,
        api.service.account.user_api_pb2.GetOrganizationInvitesResponse]

    CreateOrganizationInvite: grpc.UnaryUnaryMultiCallable[
        api.service.account.user_api_pb2.CreateOrganizationInviteRequest,
        api.service.account.user_api_pb2.CreateOrganizationInviteResponse]

    RevokeOrganizationInvite: grpc.UnaryUnaryMultiCallable[
        api.service.account.user_api_pb2.RevokeOrganizationInviteRequest,
        api.service.account.user_api_pb2.RevokeOrganizationInviteResponse]

    RemoveUserFromOrganization: grpc.UnaryUnaryMultiCallable[
        api.service.account.user_api_pb2.RemoveUserFromOrganizationRequest,
        api.service.account.user_api_pb2.RemoveUserFromOrganizationResponse]

    GetConnections: grpc.UnaryUnaryMultiCallable[
        api.service.account.user_api_pb2.GetConnectionsRequest,
        api.service.account.user_api_pb2.GetConnectionsResponse]

    EnableConnectionForOrganization: grpc.UnaryUnaryMultiCallable[
        api.service.account.user_api_pb2.EnableConnectionForOrganizationRequest,
        api.service.account.user_api_pb2.EnableConnectionForOrganizationResponse]

    GetMyOrganization: grpc.UnaryUnaryMultiCallable[
        api.service.account.user_api_pb2.GetMyOrganizationRequest,
        api.service.account.user_api_pb2.GetMyOrganizationResponse]

    AssignTierToOrganization: grpc.UnaryUnaryMultiCallable[
        api.service.account.user_api_pb2.AssignTierToOrganizationRequest,
        api.service.account.user_api_pb2.AssignTierToOrganizationResponse]

    GetMyTier: grpc.UnaryUnaryMultiCallable[
        api.service.account.user_api_pb2.GetMyTierRequest,
        api.service.account.user_api_pb2.GetMyTierResponse]

    GetGuestAuthToken: grpc.UnaryUnaryMultiCallable[
        api.service.account.user_api_pb2.GetGuestAuthTokenRequest,
        api.service.account.user_api_pb2.GetGuestAuthTokenResponse]


class UserAPIServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def GetUser(self,
        request: api.service.account.user_api_pb2.GetUserRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.user_api_pb2.GetUserResponse: ...

    @abc.abstractmethod
    def GetUserByAccountId(self,
        request: api.service.account.user_api_pb2.GetUserByAccountIdRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.user_api_pb2.GetUserByAccountIdResponse: ...

    @abc.abstractmethod
    def GetUserOrganizations(self,
        request: api.service.account.user_api_pb2.GetUserOrganizationsRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.user_api_pb2.GetUserOrganizationsResponse: ...

    @abc.abstractmethod
    def GetMyUser(self,
        request: api.service.account.user_api_pb2.GetMyUserRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.user_api_pb2.GetMyUserResponse: ...

    @abc.abstractmethod
    def GetMyPermissions(self,
        request: api.service.account.user_api_pb2.GetMyPermissionsRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.user_api_pb2.GetMyPermissionsResponse: ...

    @abc.abstractmethod
    def GetOrganizations(self,
        request: api.service.account.user_api_pb2.GetOrganizationsRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.user_api_pb2.GetOrganizationsResponse: ...

    @abc.abstractmethod
    def GetOrganizationByName(self,
        request: api.service.account.user_api_pb2.GetOrganizationByNameRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.user_api_pb2.GetOrganizationByNameResponse: ...

    @abc.abstractmethod
    def GetOrganizationByAccountId(self,
        request: api.service.account.user_api_pb2.GetOrganizationByAccountIdRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.user_api_pb2.GetOrganizationByAccountIdResponse: ...

    @abc.abstractmethod
    def GetOrganizationMembers(self,
        request: api.service.account.user_api_pb2.GetOrganizationMembersRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.user_api_pb2.GetOrganizationMembersResponse: ...

    @abc.abstractmethod
    def ReCreateLayerOrganizationForExistingAuth0Organization(self,
        request: api.service.account.user_api_pb2.ReCreateLayerOrganizationForExistingAuth0OrganizationRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.user_api_pb2.ReCreateLayerOrganizationForExistingAuth0OrganizationResponse: ...

    @abc.abstractmethod
    def UpdateOrganization(self,
        request: api.service.account.user_api_pb2.UpdateOrganizationRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.user_api_pb2.UpdateOrganizationResponse: ...

    @abc.abstractmethod
    def GetOrganizationInvites(self,
        request: api.service.account.user_api_pb2.GetOrganizationInvitesRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.user_api_pb2.GetOrganizationInvitesResponse: ...

    @abc.abstractmethod
    def CreateOrganizationInvite(self,
        request: api.service.account.user_api_pb2.CreateOrganizationInviteRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.user_api_pb2.CreateOrganizationInviteResponse: ...

    @abc.abstractmethod
    def RevokeOrganizationInvite(self,
        request: api.service.account.user_api_pb2.RevokeOrganizationInviteRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.user_api_pb2.RevokeOrganizationInviteResponse: ...

    @abc.abstractmethod
    def RemoveUserFromOrganization(self,
        request: api.service.account.user_api_pb2.RemoveUserFromOrganizationRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.user_api_pb2.RemoveUserFromOrganizationResponse: ...

    @abc.abstractmethod
    def GetConnections(self,
        request: api.service.account.user_api_pb2.GetConnectionsRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.user_api_pb2.GetConnectionsResponse: ...

    @abc.abstractmethod
    def EnableConnectionForOrganization(self,
        request: api.service.account.user_api_pb2.EnableConnectionForOrganizationRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.user_api_pb2.EnableConnectionForOrganizationResponse: ...

    @abc.abstractmethod
    def GetMyOrganization(self,
        request: api.service.account.user_api_pb2.GetMyOrganizationRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.user_api_pb2.GetMyOrganizationResponse: ...

    @abc.abstractmethod
    def AssignTierToOrganization(self,
        request: api.service.account.user_api_pb2.AssignTierToOrganizationRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.user_api_pb2.AssignTierToOrganizationResponse: ...

    @abc.abstractmethod
    def GetMyTier(self,
        request: api.service.account.user_api_pb2.GetMyTierRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.user_api_pb2.GetMyTierResponse: ...

    @abc.abstractmethod
    def GetGuestAuthToken(self,
        request: api.service.account.user_api_pb2.GetGuestAuthTokenRequest,
        context: grpc.ServicerContext,
    ) -> api.service.account.user_api_pb2.GetGuestAuthTokenResponse: ...


def add_UserAPIServicer_to_server(servicer: UserAPIServicer, server: grpc.Server) -> None: ...
