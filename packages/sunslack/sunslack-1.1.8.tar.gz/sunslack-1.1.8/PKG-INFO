Metadata-Version: 2.1
Name: sunslack
Version: 1.1.8
Summary: Slack bot publishing NOAA Solar data
Home-page: https://0x9900.com/
Author: Fred C. (W6BSD)
Author-email: w6bsd@bsdworld.org
License: BSD
Project-URL: Source, https://github.com/0x9900/sun-slack/
Project-URL: Tracker, https://github.com/0x9900/sun-slack/issues
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Communications :: Ham Radio
Requires-Python: >=3.6.0
Description-Content-Type: text/markdown
License-File: LICENSE


## Sun predictions on a Slack channel

This bot helps you get the Some of the solar magnetic activity
information on your slack channel.

Create a configuration file with the following template:

```
[SUNSLACK]
token: xoxb-123456790-123456790-123456790
channel: sunflux
cachedir: /var/tmp/sunflux
loglevel: INFO
[ANIMATEMUF]
target_dir: /var/tmp/muf
converter: /usr/local/bin/convert.sh
muf_file: /tmp/muf_source.json
video_file: /tmp/muf/muf.mp4
font: /System/Library/Fonts/Supplemental/Arial Narrow.ttf
font_size: 16
```

You can get a token for your bot by registering it on the [Slack
App][1] website.

You can run the bot every hour in cron. It only sends messages and
upload the prediction graph when NOAA publishes new data.

Line to add in your crontab:
```
1 * * * * /usr/local/bin/sunslack --config ~/.sslack.cnf --alerts --flux --muf
```

[1]: https://api.slack.com/apps
