# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: data_tree.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import ansys.grpc.dpf.base_pb2 as base__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='data_tree.proto',
  package='ansys.api.dpf.data_tree.v0',
  syntax='proto3',
  serialized_options=_b('\252\002\031Ansys.Api.Dpf.DataTree.V0'),
  serialized_pb=_b('\n\x0f\x64\x61ta_tree.proto\x12\x1a\x61nsys.api.dpf.data_tree.v0\x1a\nbase.proto\"?\n\x08\x44\x61taTree\x12\x33\n\x02id\x18\x01 \x01(\x0b\x32\'.ansys.api.dpf.base.v0.EntityIdentifier\"x\n\rUpdateRequest\x12\x37\n\tdata_tree\x18\x01 \x01(\x0b\x32$.ansys.api.dpf.data_tree.v0.DataTree\x12.\n\x04\x64\x61ta\x18\x02 \x03(\x0b\x32 .ansys.api.dpf.data_tree.v0.Data\"\x82\x01\n\nGetRequest\x12\x37\n\tdata_tree\x18\x01 \x01(\x0b\x32$.ansys.api.dpf.data_tree.v0.DataTree\x12;\n\x04\x64\x61ta\x18\x02 \x03(\x0b\x32-.ansys.api.dpf.data_tree.v0.SingleDataRequest\"=\n\x0bGetResponse\x12.\n\x04\x64\x61ta\x18\x02 \x03(\x0b\x32 .ansys.api.dpf.data_tree.v0.Data\"T\n\nHasRequest\x12\x37\n\tdata_tree\x18\x01 \x01(\x0b\x32$.ansys.api.dpf.data_tree.v0.DataTree\x12\r\n\x05names\x18\x02 \x03(\t\"\x92\x01\n\x0bHasResponse\x12O\n\rhas_each_name\x18\x01 \x03(\x0b\x32\x38.ansys.api.dpf.data_tree.v0.HasResponse.HasEachNameEntry\x1a\x32\n\x10HasEachNameEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x08:\x02\x38\x01\"\xba\x02\n\x04\x44\x61ta\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x03int\x18\x02 \x01(\x05H\x00\x12\x10\n\x06\x64ouble\x18\x03 \x01(\x01H\x00\x12\x10\n\x06string\x18\x04 \x01(\tH\x00\x12\x33\n\x07vec_int\x18\x05 \x01(\x0b\x32 .ansys.api.dpf.base.v0.IntVectorH\x00\x12\x39\n\nvec_double\x18\x06 \x01(\x0b\x32#.ansys.api.dpf.base.v0.DoubleVectorH\x00\x12\x39\n\nvec_string\x18\x07 \x01(\x0b\x32#.ansys.api.dpf.base.v0.StringVectorH\x00\x12\x39\n\tdata_tree\x18\x08 \x01(\x0b\x32$.ansys.api.dpf.data_tree.v0.DataTreeH\x00\x42\x0b\n\tdata_type\"L\n\x11SingleDataRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12)\n\x04type\x18\x02 \x01(\x0e\x32\x1b.ansys.api.dpf.base.v0.Type\"F\n\x0bListRequest\x12\x37\n\tdata_tree\x18\x01 \x01(\x0b\x32$.ansys.api.dpf.data_tree.v0.DataTree\"?\n\x0cListResponse\x12\x17\n\x0f\x61ttribute_names\x18\x01 \x03(\t\x12\x16\n\x0esub_tree_names\x18\x02 \x03(\t2\x8b\x04\n\x0f\x44\x61taTreeService\x12L\n\x06\x43reate\x12\x1c.ansys.api.dpf.base.v0.Empty\x1a$.ansys.api.dpf.data_tree.v0.DataTree\x12Q\n\x06Update\x12).ansys.api.dpf.data_tree.v0.UpdateRequest\x1a\x1c.ansys.api.dpf.base.v0.Empty\x12Y\n\x04List\x12\'.ansys.api.dpf.data_tree.v0.ListRequest\x1a(.ansys.api.dpf.data_tree.v0.ListResponse\x12V\n\x03Get\x12&.ansys.api.dpf.data_tree.v0.GetRequest\x1a\'.ansys.api.dpf.data_tree.v0.GetResponse\x12V\n\x03Has\x12&.ansys.api.dpf.data_tree.v0.HasRequest\x1a\'.ansys.api.dpf.data_tree.v0.HasResponse\x12L\n\x06\x44\x65lete\x12$.ansys.api.dpf.data_tree.v0.DataTree\x1a\x1c.ansys.api.dpf.base.v0.EmptyB\x1c\xaa\x02\x19\x41nsys.Api.Dpf.DataTree.V0b\x06proto3')
  ,
  dependencies=[base__pb2.DESCRIPTOR,])




_DATATREE = _descriptor.Descriptor(
  name='DataTree',
  full_name='ansys.api.dpf.data_tree.v0.DataTree',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ansys.api.dpf.data_tree.v0.DataTree.id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=59,
  serialized_end=122,
)


_UPDATEREQUEST = _descriptor.Descriptor(
  name='UpdateRequest',
  full_name='ansys.api.dpf.data_tree.v0.UpdateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data_tree', full_name='ansys.api.dpf.data_tree.v0.UpdateRequest.data_tree', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data', full_name='ansys.api.dpf.data_tree.v0.UpdateRequest.data', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=124,
  serialized_end=244,
)


_GETREQUEST = _descriptor.Descriptor(
  name='GetRequest',
  full_name='ansys.api.dpf.data_tree.v0.GetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data_tree', full_name='ansys.api.dpf.data_tree.v0.GetRequest.data_tree', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data', full_name='ansys.api.dpf.data_tree.v0.GetRequest.data', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=247,
  serialized_end=377,
)


_GETRESPONSE = _descriptor.Descriptor(
  name='GetResponse',
  full_name='ansys.api.dpf.data_tree.v0.GetResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='ansys.api.dpf.data_tree.v0.GetResponse.data', index=0,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=379,
  serialized_end=440,
)


_HASREQUEST = _descriptor.Descriptor(
  name='HasRequest',
  full_name='ansys.api.dpf.data_tree.v0.HasRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data_tree', full_name='ansys.api.dpf.data_tree.v0.HasRequest.data_tree', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='names', full_name='ansys.api.dpf.data_tree.v0.HasRequest.names', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=442,
  serialized_end=526,
)


_HASRESPONSE_HASEACHNAMEENTRY = _descriptor.Descriptor(
  name='HasEachNameEntry',
  full_name='ansys.api.dpf.data_tree.v0.HasResponse.HasEachNameEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='ansys.api.dpf.data_tree.v0.HasResponse.HasEachNameEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='ansys.api.dpf.data_tree.v0.HasResponse.HasEachNameEntry.value', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=625,
  serialized_end=675,
)

_HASRESPONSE = _descriptor.Descriptor(
  name='HasResponse',
  full_name='ansys.api.dpf.data_tree.v0.HasResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='has_each_name', full_name='ansys.api.dpf.data_tree.v0.HasResponse.has_each_name', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_HASRESPONSE_HASEACHNAMEENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=529,
  serialized_end=675,
)


_DATA = _descriptor.Descriptor(
  name='Data',
  full_name='ansys.api.dpf.data_tree.v0.Data',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='ansys.api.dpf.data_tree.v0.Data.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='int', full_name='ansys.api.dpf.data_tree.v0.Data.int', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='double', full_name='ansys.api.dpf.data_tree.v0.Data.double', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='string', full_name='ansys.api.dpf.data_tree.v0.Data.string', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vec_int', full_name='ansys.api.dpf.data_tree.v0.Data.vec_int', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vec_double', full_name='ansys.api.dpf.data_tree.v0.Data.vec_double', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vec_string', full_name='ansys.api.dpf.data_tree.v0.Data.vec_string', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data_tree', full_name='ansys.api.dpf.data_tree.v0.Data.data_tree', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='data_type', full_name='ansys.api.dpf.data_tree.v0.Data.data_type',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=678,
  serialized_end=992,
)


_SINGLEDATAREQUEST = _descriptor.Descriptor(
  name='SingleDataRequest',
  full_name='ansys.api.dpf.data_tree.v0.SingleDataRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='ansys.api.dpf.data_tree.v0.SingleDataRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='type', full_name='ansys.api.dpf.data_tree.v0.SingleDataRequest.type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=994,
  serialized_end=1070,
)


_LISTREQUEST = _descriptor.Descriptor(
  name='ListRequest',
  full_name='ansys.api.dpf.data_tree.v0.ListRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data_tree', full_name='ansys.api.dpf.data_tree.v0.ListRequest.data_tree', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1072,
  serialized_end=1142,
)


_LISTRESPONSE = _descriptor.Descriptor(
  name='ListResponse',
  full_name='ansys.api.dpf.data_tree.v0.ListResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='attribute_names', full_name='ansys.api.dpf.data_tree.v0.ListResponse.attribute_names', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sub_tree_names', full_name='ansys.api.dpf.data_tree.v0.ListResponse.sub_tree_names', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1144,
  serialized_end=1207,
)

_DATATREE.fields_by_name['id'].message_type = base__pb2._ENTITYIDENTIFIER
_UPDATEREQUEST.fields_by_name['data_tree'].message_type = _DATATREE
_UPDATEREQUEST.fields_by_name['data'].message_type = _DATA
_GETREQUEST.fields_by_name['data_tree'].message_type = _DATATREE
_GETREQUEST.fields_by_name['data'].message_type = _SINGLEDATAREQUEST
_GETRESPONSE.fields_by_name['data'].message_type = _DATA
_HASREQUEST.fields_by_name['data_tree'].message_type = _DATATREE
_HASRESPONSE_HASEACHNAMEENTRY.containing_type = _HASRESPONSE
_HASRESPONSE.fields_by_name['has_each_name'].message_type = _HASRESPONSE_HASEACHNAMEENTRY
_DATA.fields_by_name['vec_int'].message_type = base__pb2._INTVECTOR
_DATA.fields_by_name['vec_double'].message_type = base__pb2._DOUBLEVECTOR
_DATA.fields_by_name['vec_string'].message_type = base__pb2._STRINGVECTOR
_DATA.fields_by_name['data_tree'].message_type = _DATATREE
_DATA.oneofs_by_name['data_type'].fields.append(
  _DATA.fields_by_name['int'])
_DATA.fields_by_name['int'].containing_oneof = _DATA.oneofs_by_name['data_type']
_DATA.oneofs_by_name['data_type'].fields.append(
  _DATA.fields_by_name['double'])
_DATA.fields_by_name['double'].containing_oneof = _DATA.oneofs_by_name['data_type']
_DATA.oneofs_by_name['data_type'].fields.append(
  _DATA.fields_by_name['string'])
_DATA.fields_by_name['string'].containing_oneof = _DATA.oneofs_by_name['data_type']
_DATA.oneofs_by_name['data_type'].fields.append(
  _DATA.fields_by_name['vec_int'])
_DATA.fields_by_name['vec_int'].containing_oneof = _DATA.oneofs_by_name['data_type']
_DATA.oneofs_by_name['data_type'].fields.append(
  _DATA.fields_by_name['vec_double'])
_DATA.fields_by_name['vec_double'].containing_oneof = _DATA.oneofs_by_name['data_type']
_DATA.oneofs_by_name['data_type'].fields.append(
  _DATA.fields_by_name['vec_string'])
_DATA.fields_by_name['vec_string'].containing_oneof = _DATA.oneofs_by_name['data_type']
_DATA.oneofs_by_name['data_type'].fields.append(
  _DATA.fields_by_name['data_tree'])
_DATA.fields_by_name['data_tree'].containing_oneof = _DATA.oneofs_by_name['data_type']
_SINGLEDATAREQUEST.fields_by_name['type'].enum_type = base__pb2._TYPE
_LISTREQUEST.fields_by_name['data_tree'].message_type = _DATATREE
DESCRIPTOR.message_types_by_name['DataTree'] = _DATATREE
DESCRIPTOR.message_types_by_name['UpdateRequest'] = _UPDATEREQUEST
DESCRIPTOR.message_types_by_name['GetRequest'] = _GETREQUEST
DESCRIPTOR.message_types_by_name['GetResponse'] = _GETRESPONSE
DESCRIPTOR.message_types_by_name['HasRequest'] = _HASREQUEST
DESCRIPTOR.message_types_by_name['HasResponse'] = _HASRESPONSE
DESCRIPTOR.message_types_by_name['Data'] = _DATA
DESCRIPTOR.message_types_by_name['SingleDataRequest'] = _SINGLEDATAREQUEST
DESCRIPTOR.message_types_by_name['ListRequest'] = _LISTREQUEST
DESCRIPTOR.message_types_by_name['ListResponse'] = _LISTRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

DataTree = _reflection.GeneratedProtocolMessageType('DataTree', (_message.Message,), {
  'DESCRIPTOR' : _DATATREE,
  '__module__' : 'data_tree_pb2'
  # @@protoc_insertion_point(class_scope:ansys.api.dpf.data_tree.v0.DataTree)
  })
_sym_db.RegisterMessage(DataTree)

UpdateRequest = _reflection.GeneratedProtocolMessageType('UpdateRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEREQUEST,
  '__module__' : 'data_tree_pb2'
  # @@protoc_insertion_point(class_scope:ansys.api.dpf.data_tree.v0.UpdateRequest)
  })
_sym_db.RegisterMessage(UpdateRequest)

GetRequest = _reflection.GeneratedProtocolMessageType('GetRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETREQUEST,
  '__module__' : 'data_tree_pb2'
  # @@protoc_insertion_point(class_scope:ansys.api.dpf.data_tree.v0.GetRequest)
  })
_sym_db.RegisterMessage(GetRequest)

GetResponse = _reflection.GeneratedProtocolMessageType('GetResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETRESPONSE,
  '__module__' : 'data_tree_pb2'
  # @@protoc_insertion_point(class_scope:ansys.api.dpf.data_tree.v0.GetResponse)
  })
_sym_db.RegisterMessage(GetResponse)

HasRequest = _reflection.GeneratedProtocolMessageType('HasRequest', (_message.Message,), {
  'DESCRIPTOR' : _HASREQUEST,
  '__module__' : 'data_tree_pb2'
  # @@protoc_insertion_point(class_scope:ansys.api.dpf.data_tree.v0.HasRequest)
  })
_sym_db.RegisterMessage(HasRequest)

HasResponse = _reflection.GeneratedProtocolMessageType('HasResponse', (_message.Message,), {

  'HasEachNameEntry' : _reflection.GeneratedProtocolMessageType('HasEachNameEntry', (_message.Message,), {
    'DESCRIPTOR' : _HASRESPONSE_HASEACHNAMEENTRY,
    '__module__' : 'data_tree_pb2'
    # @@protoc_insertion_point(class_scope:ansys.api.dpf.data_tree.v0.HasResponse.HasEachNameEntry)
    })
  ,
  'DESCRIPTOR' : _HASRESPONSE,
  '__module__' : 'data_tree_pb2'
  # @@protoc_insertion_point(class_scope:ansys.api.dpf.data_tree.v0.HasResponse)
  })
_sym_db.RegisterMessage(HasResponse)
_sym_db.RegisterMessage(HasResponse.HasEachNameEntry)

Data = _reflection.GeneratedProtocolMessageType('Data', (_message.Message,), {
  'DESCRIPTOR' : _DATA,
  '__module__' : 'data_tree_pb2'
  # @@protoc_insertion_point(class_scope:ansys.api.dpf.data_tree.v0.Data)
  })
_sym_db.RegisterMessage(Data)

SingleDataRequest = _reflection.GeneratedProtocolMessageType('SingleDataRequest', (_message.Message,), {
  'DESCRIPTOR' : _SINGLEDATAREQUEST,
  '__module__' : 'data_tree_pb2'
  # @@protoc_insertion_point(class_scope:ansys.api.dpf.data_tree.v0.SingleDataRequest)
  })
_sym_db.RegisterMessage(SingleDataRequest)

ListRequest = _reflection.GeneratedProtocolMessageType('ListRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTREQUEST,
  '__module__' : 'data_tree_pb2'
  # @@protoc_insertion_point(class_scope:ansys.api.dpf.data_tree.v0.ListRequest)
  })
_sym_db.RegisterMessage(ListRequest)

ListResponse = _reflection.GeneratedProtocolMessageType('ListResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTRESPONSE,
  '__module__' : 'data_tree_pb2'
  # @@protoc_insertion_point(class_scope:ansys.api.dpf.data_tree.v0.ListResponse)
  })
_sym_db.RegisterMessage(ListResponse)


DESCRIPTOR._options = None
_HASRESPONSE_HASEACHNAMEENTRY._options = None

_DATATREESERVICE = _descriptor.ServiceDescriptor(
  name='DataTreeService',
  full_name='ansys.api.dpf.data_tree.v0.DataTreeService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=1210,
  serialized_end=1733,
  methods=[
  _descriptor.MethodDescriptor(
    name='Create',
    full_name='ansys.api.dpf.data_tree.v0.DataTreeService.Create',
    index=0,
    containing_service=None,
    input_type=base__pb2._EMPTY,
    output_type=_DATATREE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Update',
    full_name='ansys.api.dpf.data_tree.v0.DataTreeService.Update',
    index=1,
    containing_service=None,
    input_type=_UPDATEREQUEST,
    output_type=base__pb2._EMPTY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='List',
    full_name='ansys.api.dpf.data_tree.v0.DataTreeService.List',
    index=2,
    containing_service=None,
    input_type=_LISTREQUEST,
    output_type=_LISTRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Get',
    full_name='ansys.api.dpf.data_tree.v0.DataTreeService.Get',
    index=3,
    containing_service=None,
    input_type=_GETREQUEST,
    output_type=_GETRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Has',
    full_name='ansys.api.dpf.data_tree.v0.DataTreeService.Has',
    index=4,
    containing_service=None,
    input_type=_HASREQUEST,
    output_type=_HASRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Delete',
    full_name='ansys.api.dpf.data_tree.v0.DataTreeService.Delete',
    index=5,
    containing_service=None,
    input_type=_DATATREE,
    output_type=base__pb2._EMPTY,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_DATATREESERVICE)

DESCRIPTOR.services_by_name['DataTreeService'] = _DATATREESERVICE

# @@protoc_insertion_point(module_scope)
