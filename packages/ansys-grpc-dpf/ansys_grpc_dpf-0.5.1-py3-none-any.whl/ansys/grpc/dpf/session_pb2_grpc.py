# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import ansys.grpc.dpf.base_pb2 as base__pb2
import ansys.grpc.dpf.session_pb2 as session__pb2


class SessionServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Create = channel.unary_unary(
        '/ansys.api.dpf.session.v0.SessionService/Create',
        request_serializer=session__pb2.CreateSessionRequest.SerializeToString,
        response_deserializer=session__pb2.Session.FromString,
        )
    self.Add = channel.unary_unary(
        '/ansys.api.dpf.session.v0.SessionService/Add',
        request_serializer=session__pb2.AddRequest.SerializeToString,
        response_deserializer=base__pb2.Empty.FromString,
        )
    self.ListenToProgress = channel.unary_stream(
        '/ansys.api.dpf.session.v0.SessionService/ListenToProgress',
        request_serializer=session__pb2.Session.SerializeToString,
        response_deserializer=session__pb2.GetProgressResponse.FromString,
        )
    self.AddProgressEventSystem = channel.unary_unary(
        '/ansys.api.dpf.session.v0.SessionService/AddProgressEventSystem',
        request_serializer=session__pb2.Session.SerializeToString,
        response_deserializer=base__pb2.Empty.FromString,
        )
    self.FlushWorkflows = channel.unary_unary(
        '/ansys.api.dpf.session.v0.SessionService/FlushWorkflows',
        request_serializer=session__pb2.Session.SerializeToString,
        response_deserializer=base__pb2.Empty.FromString,
        )
    self.Delete = channel.unary_unary(
        '/ansys.api.dpf.session.v0.SessionService/Delete',
        request_serializer=session__pb2.Session.SerializeToString,
        response_deserializer=base__pb2.Empty.FromString,
        )


class SessionServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Create(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Add(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListenToProgress(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddProgressEventSystem(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FlushWorkflows(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Delete(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SessionServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Create': grpc.unary_unary_rpc_method_handler(
          servicer.Create,
          request_deserializer=session__pb2.CreateSessionRequest.FromString,
          response_serializer=session__pb2.Session.SerializeToString,
      ),
      'Add': grpc.unary_unary_rpc_method_handler(
          servicer.Add,
          request_deserializer=session__pb2.AddRequest.FromString,
          response_serializer=base__pb2.Empty.SerializeToString,
      ),
      'ListenToProgress': grpc.unary_stream_rpc_method_handler(
          servicer.ListenToProgress,
          request_deserializer=session__pb2.Session.FromString,
          response_serializer=session__pb2.GetProgressResponse.SerializeToString,
      ),
      'AddProgressEventSystem': grpc.unary_unary_rpc_method_handler(
          servicer.AddProgressEventSystem,
          request_deserializer=session__pb2.Session.FromString,
          response_serializer=base__pb2.Empty.SerializeToString,
      ),
      'FlushWorkflows': grpc.unary_unary_rpc_method_handler(
          servicer.FlushWorkflows,
          request_deserializer=session__pb2.Session.FromString,
          response_serializer=base__pb2.Empty.SerializeToString,
      ),
      'Delete': grpc.unary_unary_rpc_method_handler(
          servicer.Delete,
          request_deserializer=session__pb2.Session.FromString,
          response_serializer=base__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ansys.api.dpf.session.v0.SessionService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
