Metadata-Version: 2.1
Name: internationalization.py
Version: 0.1.2
Summary: Internationalization library for comfortable usage
Home-page: https://github.com/cortelf/internationalization.py
Author: CortelF
License: MIT
Project-URL: Bug Tracker, https://github.com/cortelf/internationalization.py/issues
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Software Development :: Libraries
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE

# Internationalization.py
Provides simple and powerful i18n realization

## Installation

#### With pip
```shell
pip install internationalization.py
```
#### Via Git
```shell
git clone https://github.com/cortelf/internationalization.py
cd internationalization.py
python setup.py install
```

## Usage
#### Create directory for yaml files
```shell
mkdir yourdirectory
```
#### Write your yaml files
You can use .yml or .yaml file extensions
```shell
en.yml
```
```yaml
hello_world: Hello World!
```
```shell
it.yml
```
```yaml
hello_world: Ciao mondo!
```
#### In root of your app initialize singleton
```python
from internationalization import Internationalization
from internationalization.loaders import YAMLLoader

i18n = Internationalization()
i18n.initialize(YAMLLoader("yourdirectory"))
```
#### It's ready to use in any place
```python
from internationalization import Internationalization

i18n = Internationalization()
english = i18n.get_language("en")
italian = i18n.get_language("it")

print("English:", english.hello_world)
print("Italian:", italian.hello_world)
```
