{"version":3,"file":"extensionConfig.js","names":["window","ReviewBot","ExtensionConfig","Backbone","Model","extend","defaults","brokerURL","user","initialize","attributes","options","prototype","call","UserConfigView","View","className","id","events","_templateRB4","_","template","_templateRB3","_optionTemplate","render","model","get","RB","Product","$el","html","titleText","labelText","descriptionText","selectPlaceholderText","orHTML","hasUser","currentItems","currentOptions","push","_$select","$","selectize","closeAfterSelect","dropdownParent","hideSelected","maxItems","preload","items","searchField","valueField","load","query","callback","params","fullname","length","q","ajax","type","url","SITE_ROOT","data","success","result","users","error","xhr","textStatus","errorThrown","alert","console","item","avatarURL","avatar_url","username","option","_selectize","listenTo","value","_setOption","_createUser","e","preventDefault","stopPropagation","$details","lock","userConfigURL","complete","unlock","blur","empty","clear","clearOptions","addOption","setValue","BrokerStatusView","_updatingTemplate","_connectedTemplate","_errorTemplate","_updating","_connected","_rendered","_errorText","_workers","_update","_$content","appendTo","_updateDisplay","refreshingText","workersText","interpolate","connectedText","refreshText","workers","readyText","configureIntegrationsHTML","integrationConfigURL","errorText","_onRefreshClicked","workerStatusURL","hosts","state","BrokerConfigView","ConfigView","_userConfigView","_brokerConfigView","_$form","append","_$saveButton","val","_onSaveClicked","prop","$spinner","insertBefore","location","pathname","serialize","remove","response","broker_url","set","ExtensionConfigView","configureText","brokerText","_view","el","_statusView"],"sources":["extensionConfig.es6.js"],"sourcesContent":["{\n\n\nwindow.ReviewBot = window.ReviewBot || {};\n\n\n/**\n * The model for the configuration page.\n *\n * Model Attributes:\n *     brokerURL (string):\n *         The URL for the AMQP broker.\n *\n *     user (number):\n *         The ID of the user for Review Bot to post as.\n */\nReviewBot.ExtensionConfig = Backbone.Model.extend({\n    defaults: {\n        brokerURL: '',\n        user: null,\n    },\n\n    /**\n     * Initialize the model.\n     *\n     * Args:\n     *     attributes (object):\n     *         Initial attribute values for the model.\n     *\n     *     options (object):\n     *         Additional options for the model.\n     *\n     * Option Args:\n     *     integrationConfigURL (string):\n     *         The URL of the integration list page.\n     *\n     *     userConfigURL (string):\n     *         The URL of the user configuration endpoint.\n     *\n     *     workerStatusURL (string):\n     *         The URL of the worker status endpoint.\n     */\n    initialize(attributes, options) {\n        Backbone.Model.prototype.initialize.call(this, attributes, options);\n        this.options = options;\n    },\n});\n\n\n/**\n * A view for configuring the Review Bot user.\n */\nconst UserConfigView = Backbone.View.extend({\n    className: 'rb-c-form-row',\n\n    id: 'reviewbot-user',\n\n    events: {\n        'click #reviewbot-user-create': '_createUser',\n    },\n\n    _templateRB4: _.template(dedent`\n        <div class=\"rb-c-form-field -is-required\">\n         <label class=\"rb-c-form-field__label\" for=\"reviewbot-user-field\"><%- labelText %></label>\n\n         <div class=\"rb-c-form-field__input\">\n          <select class=\"related-object-options reviewbot-user-select\"\n                  name=\"reviewbot_user\"\n                  placeholder=\"<%- selectPlaceholderText %>\"\n                  id=\"reviewbot-user-field\"></select>\n          <span class=\"reviewbot-user-create-details\">\n           <% if (!hasUser) { %><%= orHTML %><% } %>\n          </span>\n          <div class=\"rb-c-form-field__help\"><%- descriptionText %></div>\n         </div>\n        </div>\n    `),\n\n    _templateRB3: _.template(dedent`\n        <div class=\"form-row\">\n         <label class=\"required\" for=\"reviewbot-user-field\"><%- labelText %></label>\n         <select class=\"related-object-options reviewbot-user-select\"\n                 name=\"reviewbot_user\"\n                 placeholder=\"<%- selectPlaceholderText %>\"\n                 id=\"reviewbot-user-field\"></select>\n         <span class=\"reviewbot-user-create-details\">\n          <% if (!hasUser) { %><%= orHTML %><% } %>\n         </span>\n         <p class=\"help\"><%- descriptionText %></p>\n        </div>\n    `),\n\n    _optionTemplate: _.template(dedent`\n        <div>\n        <% if (avatarURL) { %>\n         <img src=\"<%- avatarURL %>\">\n        <% } %>\n        <% if (fullname) { %>\n         <span class=\"title\"><%- fullname %></span>\n         <span class=\"description\">(<%- username %>)</span>\n        <% } else { %>\n         <span class=\"title\"><%- username %></span>\n        <% } %>\n        </div>\n    `),\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     UserConfigView:\n     *     This object, for chaining.\n     */\n    render() {\n        const user = this.model.get('user');\n        const template = RB.Product ? this._templateRB4 : this._templateRB3;\n\n        this.$el.html(template({\n            titleText: gettext('Review Bot User'),\n            labelText: gettext('Review Bot User:'),\n            descriptionText: gettext('Review Bot will use this user account to post reviews.'),\n            selectPlaceholderText: gettext('Select an existing user account'),\n            orHTML: gettext('or <a href=\"#\" id=\"reviewbot-user-create\">create a new user for Review Bot</a>.'),\n            hasUser: (user !== null),\n        }));\n\n        const currentItems = [];\n        const currentOptions = [];\n\n        if (user !== null) {\n            currentItems.push(user.id);\n            currentOptions.push(user);\n        }\n\n        this._$select = this.$('select');\n\n        this._$select.selectize({\n            closeAfterSelect: true,\n            dropdownParent: 'body',\n            hideSelected: true,\n            maxItems: 1,\n            preload: 'focus',\n            items: currentItems,\n            options: currentOptions,\n            searchField: ['fullname', 'username'],\n            valueField: 'id',\n            load: (query, callback) => {\n                const params = {\n                    fullname: 1,\n                    'only-fields': 'avatar_url,fullname,id,username',\n                    'only-links': '',\n                };\n\n                if (query.length !== 0) {\n                    params.q = query;\n                }\n\n                $.ajax({\n                    type: 'GET',\n                    url: SITE_ROOT + 'api/users/',\n                    data: params,\n                    success: result => callback(result.users),\n                    error: (xhr, textStatus, errorThrown) => {\n                        alert('Unexpected error when querying for users: ' +\n                              errorThrown);\n                        console.error('User query failed', xhr, textStatus,\n                                      errorThrown);\n                        callback();\n                    },\n                });\n            },\n            render: {\n                item: item => this._optionTemplate({\n                    avatarURL: item.avatar_url,\n                    id: item.id,\n                    fullname: item.fullname,\n                    username: item.username,\n                }),\n                option: item => this._optionTemplate({\n                    avatarURL: item.avatar_url,\n                    id: item.id,\n                    fullname: item.fullname,\n                    username: item.username,\n                }),\n            },\n        });\n\n        this._selectize = this._$select[0].selectize;\n\n        this.listenTo(this.model, 'change:user', (model, value) => {\n            this._setOption(value);\n        });\n\n        return this;\n    },\n\n    /**\n     * Create a new user.\n     *\n     * Args:\n     *     e (Event):\n     *         The event which triggered the action.\n     */\n    _createUser(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const $details = this.$('.reviewbot-user-create-details');\n        this._selectize.lock();\n        $details.html('<span class=\"fa fa-spinner fa-pulse\">');\n\n        $.ajax({\n            type: 'POST',\n            url: this.model.options.userConfigURL,\n            complete: () => {\n                this._selectize.unlock();\n                this._selectize.blur();\n                $details.empty();\n            },\n            success: result => {\n                this._setOption(result);\n            },\n            error: (xhr, textStatus, errorThrown) => {\n                alert('Unexpected error when creating the user: ' +\n                      errorThrown);\n                console.error('Failed to update user', xhr, textStatus,\n                              errorThrown);\n            },\n        });\n    },\n\n    /**\n     * Set the currently selected option.\n     *\n     * Args:\n     *     user (object):\n     *          The user details.\n     */\n    _setOption(user) {\n        this._selectize.clear(true);\n        this._selectize.clearOptions();\n        this._selectize.addOption(user);\n        this._selectize.setValue(user.id, true);\n    },\n});\n\n\n/**\n * A view to show the current broker status.\n */\nconst BrokerStatusView = Backbone.View.extend({\n    events: {\n        'click #reviewbot-broker-status-refresh': '_onRefreshClicked',\n    },\n\n    _updatingTemplate: _.template(dedent`\n        <span class=\"fa fa-spinner fa-pulse\"></span>\n        <%- refreshingText %>\n    `),\n\n    _connectedTemplate: _.template(dedent`\n        <div>\n         <span class=\"fa fa-check\"></span>\n         <%- connectedText %>\n        </div>\n        <% if (workers.length === 0) { %>\n         <div>\n          <span class=\"fa fa-exclamation-triangle\"></span>\n          <%- workersText %>\n         </div>\n        <% } else { %>\n         <div>\n          <span class=\"fa fa-check\"></span>\n          <%- workersText %>\n          <ul>\n           <% _.each(workers, function(worker) { %>\n            <li>\n             <span class=\"fa fa-desktop\"></span>\n             <%- worker.hostname %>\n            </li>\n           <% }); %>\n          </ul>\n         </div>\n         <div>\n          <span class=\"fa fa-cogs\"></span>\n          <%- readyText %>\n          <%= configureIntegrationsHTML %>\n         </div>\n        <% } %>\n        <div>\n         <a href=\"#\" id=\"reviewbot-broker-status-refresh\"><%- refreshText %></a>\n        </div>\n    `),\n\n    _errorTemplate: _.template(dedent`\n        <div>\n         <span class=\"fa fa-exclamation-triangle\"></span>\n         <%- errorText %>\n        </div>\n        <div>\n         <a href=\"#\" id=\"reviewbot-broker-status-refresh\"><%- refreshText %></a>\n        </div>\n    `),\n\n    /**\n     * Initialize the view.\n     */\n    initialize() {\n        this._updating = false;\n        this._connected = false;\n        this._rendered = false;\n        this._errorText = '';\n        this._workers = [];\n\n        this.listenTo(this.model, 'change', this._update);\n        this._update();\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     BrokerStatusView:\n     *     This object, for chaining.\n     */\n    render() {\n        this._$content = $('<div class=\"form-row\">')\n            .appendTo(this.$el);\n\n        this._rendered = true;\n\n        this._updateDisplay();\n\n        return this;\n    },\n\n    /**\n     * Update the displayed status.\n     */\n    _updateDisplay() {\n        if (!this._rendered) {\n            return;\n        }\n\n        if (this._updating) {\n            this._$content.html(this._updatingTemplate({\n                refreshingText: gettext('Checking broker...'),\n            }));\n        } else if (this._connected) {\n            let workersText;\n\n            if (this._workers.length === 0) {\n                workersText = gettext('No worker nodes found.');\n            } else {\n                workersText = interpolate(\n                    ngettext('%s worker node:',\n                             '%s worker nodes:',\n                             this._workers.length),\n                    [this._workers.length]);\n            }\n\n            this._$content.html(this._connectedTemplate({\n                connectedText: gettext('Connected to broker.'),\n                workersText: workersText,\n                refreshText: gettext('Refresh'),\n                workers: this._workers,\n                readyText: gettext('Review Bot is ready!'),\n                configureIntegrationsHTML: interpolate(\n                    gettext('To configure when Review Bot tools are run, set up <a href=\"%s\">integration configurations</a>.'),\n                    [this.model.options.integrationConfigURL]),\n            }));\n        } else {\n            this._$content.html(this._errorTemplate({\n                errorText: this._errorText,\n                refreshText: gettext('Refresh'),\n            }));\n        }\n    },\n\n    /**\n     * Handler for when the \"Refresh\" link is clicked.\n     *\n     * Args:\n     *     e (Event):\n     *         The event which triggered the action.\n     */\n    _onRefreshClicked(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this._update();\n    },\n\n    /**\n     * Request status from the server and update the UI.\n     */\n    _update() {\n        if (this._updating) {\n            return;\n        }\n\n        this._updating = true;\n        this._updateDisplay();\n\n        $.ajax({\n            type: 'GET',\n            url: this.model.options.workerStatusURL,\n            success: result => {\n                this._workers = result.hosts || [];\n                this._connected = (result.state === 'success');\n                this._errorText = result.error || '';\n                this._updating = false;\n                this._updateDisplay();\n            },\n            error: (xhr, textStatus, errorThrown) => {\n                console.error('Failed to get broker status', xhr, textStatus,\n                              errorThrown);\n                this._errorText = gettext('Unable to connect to broker.');\n                this._workers = [];\n                this._connected = false;\n                this._updating = false;\n                this._updateDisplay();\n            },\n        });\n    },\n});\n\n\n/**\n * A view for configuring the broker URL.\n */\nconst BrokerConfigView = Backbone.View.extend({\n    id: 'reviewbot-broker',\n\n    className: 'rb-c-form-row',\n\n    _templateRB4: _.template(dedent`\n        <div class=\"rb-c-form-field -is-required\">\n         <label class=\"rb-c-form-field__label\" for=\"reviewbot-broker-field\"><%- labelText %></label>\n\n         <div class=\"rb-c-form-field__input\">\n          <input id=\"reviewbot-broker-field\" name=\"reviewbot_broker_url\"\n                 type=\"text\" value=\"<%- brokerURL %>\">\n          <div class=\"rb-c-form-field__help\"><%- descriptionText %></div>\n         </div>\n        </div>\n    `),\n\n    _templateRB3: _.template(dedent`\n        <div class=\"form-row\">\n         <label class=\"required\" for=\"reviewbot-broker-field\"><%- labelText %></label>\n         <input id=\"reviewbot-broker-field\" name=\"reviewbot_broker_url\"\n                type=\"text\" value=\"<%- brokerURL %>\">\n         <p class=\"help\"><%- descriptionText %></p>\n        </div>\n    `),\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     BrokerConfigView:\n     *     This object, for chaining.\n     */\n    render() {\n        const template = RB.Product ? this._templateRB4 : this._templateRB3;\n\n        this.$el.html(template({\n            titleText: gettext('Broker'),\n            labelText: gettext('Broker URL:'),\n            descriptionText: gettext('The URL to your AMQP broker.'),\n            brokerURL: this.model.get('brokerURL'),\n        }));\n\n        return this;\n    }\n});\n\n\n/**\n * A view containing the entire Review Bot extension configuration.\n */\nconst ConfigView = Backbone.View.extend({\n    events: {\n        'click input[type=\"submit\"]': '_onSaveClicked',\n    },\n\n    _templateRB4: dedent`\n        <form class=\"rb-c-form -is-aligned\">\n         <fieldset class=\"rb-c-form-fieldset\">\n          <div class=\"rb-c-form-fieldset__content\">\n           <div class=\"rb-c-form-fieldset__fields\">\n           </div>\n          </div>\n         </fieldset>\n         <div class=\"rb-c-form__actions\">\n          <div class=\"rb-c-form__actions-primary\">\n           <input type=\"submit\" class=\"rb-c-form__action -is-primary\">\n          </div>\n         </div>\n        </form>\n    `,\n\n    _templateRB3: dedent`\n        <form class=\"rb-c-form-fieldset__fields\">\n        </form>\n        <div class=\"submit-row\">\n         <input type=\"submit\" class=\"rb-c-form-action -is-primary default\">\n        </div>\n    `,\n\n    /**\n     * Initialize the view.\n     */\n    initialize() {\n        this._userConfigView = new UserConfigView({\n            model: this.model,\n        });\n\n        this._brokerConfigView = new BrokerConfigView({\n            model: this.model,\n        });\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     ConfigView:\n     *     This object, for chaining.\n     */\n    render() {\n        this._userConfigView.render();\n        this._brokerConfigView.render();\n\n        const template = RB.Product ? this._templateRB4 : this._templateRB3;\n        this.$el.html(template);\n\n        this._$form = this.$('form');\n\n        this.$('.rb-c-form-fieldset__fields')\n            .append(this._userConfigView.$el)\n            .append(this._brokerConfigView.$el);\n\n        this._$saveButton = this.$('input[type=\"submit\"]')\n            .val(gettext('Save'));\n\n        return this;\n    },\n\n    /**\n     * Callback for when the \"Save\" button is clicked.\n     *\n     * This saves the form and updates the model.\n     */\n    _onSaveClicked(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this._$saveButton.prop('disabled', true);\n\n        const $spinner = $('<span class=\"fa fa-spinner fa-pulse\">')\n            .insertBefore(this._$saveButton);\n\n        $.ajax({\n            type: 'POST',\n            url: window.location.pathname,\n            data: this._$form.serialize(),\n            complete: () => {\n                this._$saveButton.prop('disabled', false);\n                $spinner.remove();\n            },\n            success: response => {\n                if (response.result === 'success') {\n                    if (response.broker_url) {\n                        this.model.set('brokerURL', response.broker_url);\n                    }\n\n                    if (response.user) {\n                        this.model.set('user', response.user);\n                    }\n                } else if (response.result === 'error') {\n                    console.error('Failed to save Review Bot configuration',\n                                  response);\n                    alert(response.error);\n                } else {\n                    console.error('Unexpected response from server when ' +\n                                  'saving Review Bot configuration.',\n                                  response);\n                }\n            },\n            error: (xhr, textStatus, errorThrown) => {\n                alert('Unexpected error when querying broker: ' +\n                      errorThrown);\n                console.error('Failed to update broker', xhr, textStatus,\n                              errorThrown);\n            },\n        });\n    },\n});\n\n\n/**\n * A view containing the extension config and broker status.\n */\nReviewBot.ExtensionConfigView = Backbone.View.extend({\n    _templateRB4: _.template(dedent`\n        <header class=\"rb-c-content-header -is-main\">\n         <h1 class=\"rb-c-content-header__title\"><%- configureText %></h1>\n        </header>\n        <div class=\"rb-c-page-content-box -is-content-flush\"\n             id=\"reviewbot-extension-config\"></div>\n\n        <header class=\"rb-c-content-header -is-main\">\n         <h1 class=\"rb-c-content-header__title\"><%- brokerText %></h1>\n        </header>\n        <div class=\"rb-c-page-content-box\" id=\"reviewbot-broker-status\"></div>\n    `),\n\n    _templateRB3: _.template(dedent`\n        <h1 class=\"title\"><%- configureText %></h1>\n        <div id=\"content-main\">\n         <fieldset class=\"module aligned\" id=\"reviewbot-extension-config\"></fieldset>\n\n         <fieldset class=\"module aligned\" id=\"reviewbot-broker-status\">\n          <h2><%- brokerText %></h2>\n         </div>\n        </fieldset>\n    `),\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     ReviewBot.ExtensionConfigView:\n     *     This object, for chaining.\n     */\n    render() {\n        const template = RB.Product ? this._templateRB4 : this._templateRB3;\n        this.$el.html(template({\n            configureText: gettext('Configure Review Bot'),\n            brokerText: gettext('Broker Status'),\n        }));\n\n        this._view = new ConfigView({\n            model: this.model,\n            el: this.$('#reviewbot-extension-config')\n        });\n        this._statusView = new BrokerStatusView({\n            model: this.model,\n            el: this.$('#reviewbot-broker-status')\n        });\n\n        this._view.render();\n        this._statusView.render();\n\n        return this;\n    },\n});\n\n\n}\n"],"mappings":";;AAAA;EAGAA,MAAM,CAACC,SAAP,GAAmBD,MAAM,CAACC,SAAP,IAAoB,EAAvC;EAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACAA,SAAS,CAACC,eAAV,GAA4BC,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsB;IAC9CC,QAAQ,EAAE;MACNC,SAAS,EAAE,EADL;MAENC,IAAI,EAAE;IAFA,CADoC;;IAM9C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACIC,UA1B8C,sBA0BnCC,UA1BmC,EA0BvBC,OA1BuB,EA0Bd;MAC5BR,QAAQ,CAACC,KAAT,CAAeQ,SAAf,CAAyBH,UAAzB,CAAoCI,IAApC,CAAyC,IAAzC,EAA+CH,UAA/C,EAA2DC,OAA3D;MACA,KAAKA,OAAL,GAAeA,OAAf;IACH;EA7B6C,CAAtB,CAA5B;EAiCA;AACA;AACA;;EACA,IAAMG,cAAc,GAAGX,QAAQ,CAACY,IAAT,CAAcV,MAAd,CAAqB;IACxCW,SAAS,EAAE,eAD6B;IAGxCC,EAAE,EAAE,gBAHoC;IAKxCC,MAAM,EAAE;MACJ,gCAAgC;IAD5B,CALgC;IASxCC,YAAY,EAAEC,CAAC,CAACC,QAAF,0kBAT0B;IA0BxCC,YAAY,EAAEF,CAAC,CAACC,QAAF,udA1B0B;IAwCxCE,eAAe,EAAEH,CAAC,CAACC,QAAF,wRAxCuB;;IAsDxC;AACJ;AACA;AACA;AACA;AACA;AACA;IACIG,MA7DwC,oBA6D/B;MAAA;;MACL,IAAMhB,IAAI,GAAG,KAAKiB,KAAL,CAAWC,GAAX,CAAe,MAAf,CAAb;MACA,IAAML,QAAQ,GAAGM,EAAE,CAACC,OAAH,GAAa,KAAKT,YAAlB,GAAiC,KAAKG,YAAvD;MAEA,KAAKO,GAAL,CAASC,IAAT,CAAcT,QAAQ,CAAC;QACnBU,SAAS,4BADU;QAEnBC,SAAS,6BAFU;QAGnBC,eAAe,mEAHI;QAInBC,qBAAqB,4CAJF;QAKnBC,MAAM,gGALa;QAMnBC,OAAO,EAAG5B,IAAI,KAAK;MANA,CAAD,CAAtB;MASA,IAAM6B,YAAY,GAAG,EAArB;MACA,IAAMC,cAAc,GAAG,EAAvB;;MAEA,IAAI9B,IAAI,KAAK,IAAb,EAAmB;QACf6B,YAAY,CAACE,IAAb,CAAkB/B,IAAI,CAACS,EAAvB;QACAqB,cAAc,CAACC,IAAf,CAAoB/B,IAApB;MACH;;MAED,KAAKgC,QAAL,GAAgB,KAAKC,CAAL,CAAO,QAAP,CAAhB;;MAEA,KAAKD,QAAL,CAAcE,SAAd,CAAwB;QACpBC,gBAAgB,EAAE,IADE;QAEpBC,cAAc,EAAE,MAFI;QAGpBC,YAAY,EAAE,IAHM;QAIpBC,QAAQ,EAAE,CAJU;QAKpBC,OAAO,EAAE,OALW;QAMpBC,KAAK,EAAEX,YANa;QAOpB1B,OAAO,EAAE2B,cAPW;QAQpBW,WAAW,EAAE,CAAC,UAAD,EAAa,UAAb,CARO;QASpBC,UAAU,EAAE,IATQ;QAUpBC,IAAI,EAAE,cAACC,KAAD,EAAQC,QAAR,EAAqB;UACvB,IAAMC,MAAM,GAAG;YACXC,QAAQ,EAAE,CADC;YAEX,eAAe,iCAFJ;YAGX,cAAc;UAHH,CAAf;;UAMA,IAAIH,KAAK,CAACI,MAAN,KAAiB,CAArB,EAAwB;YACpBF,MAAM,CAACG,CAAP,GAAWL,KAAX;UACH;;UAEDX,CAAC,CAACiB,IAAF,CAAO;YACHC,IAAI,EAAE,KADH;YAEHC,GAAG,EAAEC,SAAS,GAAG,YAFd;YAGHC,IAAI,EAAER,MAHH;YAIHS,OAAO,EAAE,iBAAAC,MAAM;cAAA,OAAIX,QAAQ,CAACW,MAAM,CAACC,KAAR,CAAZ;YAAA,CAJZ;YAKHC,KAAK,EAAE,eAACC,GAAD,EAAMC,UAAN,EAAkBC,WAAlB,EAAkC;cACrCC,KAAK,CAAC,+CACAD,WADD,CAAL;cAEAE,OAAO,CAACL,KAAR,CAAc,mBAAd,EAAmCC,GAAnC,EAAwCC,UAAxC,EACcC,WADd;cAEAhB,QAAQ;YACX;UAXE,CAAP;QAaH,CAlCmB;QAmCpB7B,MAAM,EAAE;UACJgD,IAAI,EAAE,cAAAA,KAAI;YAAA,OAAI,KAAI,CAACjD,eAAL,CAAqB;cAC/BkD,SAAS,EAAED,KAAI,CAACE,UADe;cAE/BzD,EAAE,EAAEuD,KAAI,CAACvD,EAFsB;cAG/BsC,QAAQ,EAAEiB,KAAI,CAACjB,QAHgB;cAI/BoB,QAAQ,EAAEH,KAAI,CAACG;YAJgB,CAArB,CAAJ;UAAA,CADN;UAOJC,MAAM,EAAE,gBAAAJ,IAAI;YAAA,OAAI,KAAI,CAACjD,eAAL,CAAqB;cACjCkD,SAAS,EAAED,IAAI,CAACE,UADiB;cAEjCzD,EAAE,EAAEuD,IAAI,CAACvD,EAFwB;cAGjCsC,QAAQ,EAAEiB,IAAI,CAACjB,QAHkB;cAIjCoB,QAAQ,EAAEH,IAAI,CAACG;YAJkB,CAArB,CAAJ;UAAA;QAPR;MAnCY,CAAxB;;MAmDA,KAAKE,UAAL,GAAkB,KAAKrC,QAAL,CAAc,CAAd,EAAiBE,SAAnC;MAEA,KAAKoC,QAAL,CAAc,KAAKrD,KAAnB,EAA0B,aAA1B,EAAyC,UAACA,KAAD,EAAQsD,KAAR,EAAkB;QACvD,KAAI,CAACC,UAAL,CAAgBD,KAAhB;MACH,CAFD;MAIA,OAAO,IAAP;IACH,CA9IuC;;IAgJxC;AACJ;AACA;AACA;AACA;AACA;AACA;IACIE,WAvJwC,uBAuJ5BC,CAvJ4B,EAuJzB;MAAA;;MACXA,CAAC,CAACC,cAAF;MACAD,CAAC,CAACE,eAAF;MAEA,IAAMC,QAAQ,GAAG,KAAK5C,CAAL,CAAO,gCAAP,CAAjB;;MACA,KAAKoC,UAAL,CAAgBS,IAAhB;;MACAD,QAAQ,CAACvD,IAAT,CAAc,uCAAd;MAEAW,CAAC,CAACiB,IAAF,CAAO;QACHC,IAAI,EAAE,MADH;QAEHC,GAAG,EAAE,KAAKnC,KAAL,CAAWd,OAAX,CAAmB4E,aAFrB;QAGHC,QAAQ,EAAE,oBAAM;UACZ,MAAI,CAACX,UAAL,CAAgBY,MAAhB;;UACA,MAAI,CAACZ,UAAL,CAAgBa,IAAhB;;UACAL,QAAQ,CAACM,KAAT;QACH,CAPE;QAQH5B,OAAO,EAAE,iBAAAC,MAAM,EAAI;UACf,MAAI,CAACgB,UAAL,CAAgBhB,MAAhB;QACH,CAVE;QAWHE,KAAK,EAAE,eAACC,GAAD,EAAMC,UAAN,EAAkBC,WAAlB,EAAkC;UACrCC,KAAK,CAAC,8CACAD,WADD,CAAL;UAEAE,OAAO,CAACL,KAAR,CAAc,uBAAd,EAAuCC,GAAvC,EAA4CC,UAA5C,EACcC,WADd;QAEH;MAhBE,CAAP;IAkBH,CAjLuC;;IAmLxC;AACJ;AACA;AACA;AACA;AACA;AACA;IACIW,UA1LwC,sBA0L7BxE,IA1L6B,EA0LvB;MACb,KAAKqE,UAAL,CAAgBe,KAAhB,CAAsB,IAAtB;;MACA,KAAKf,UAAL,CAAgBgB,YAAhB;;MACA,KAAKhB,UAAL,CAAgBiB,SAAhB,CAA0BtF,IAA1B;;MACA,KAAKqE,UAAL,CAAgBkB,QAAhB,CAAyBvF,IAAI,CAACS,EAA9B,EAAkC,IAAlC;IACH;EA/LuC,CAArB,CAAvB;EAmMA;AACA;AACA;;EACA,IAAM+E,gBAAgB,GAAG7F,QAAQ,CAACY,IAAT,CAAcV,MAAd,CAAqB;IAC1Ca,MAAM,EAAE;MACJ,0CAA0C;IADtC,CADkC;IAK1C+E,iBAAiB,EAAE7E,CAAC,CAACC,QAAF,yEALuB;IAU1C6E,kBAAkB,EAAE9E,CAAC,CAACC,QAAF,2qBAVsB;IA4C1C8E,cAAc,EAAE/E,CAAC,CAACC,QAAF,sLA5C0B;;IAsD1C;AACJ;AACA;IACIZ,UAzD0C,wBAyD7B;MACT,KAAK2F,SAAL,GAAiB,KAAjB;MACA,KAAKC,UAAL,GAAkB,KAAlB;MACA,KAAKC,SAAL,GAAiB,KAAjB;MACA,KAAKC,UAAL,GAAkB,EAAlB;MACA,KAAKC,QAAL,GAAgB,EAAhB;MAEA,KAAK1B,QAAL,CAAc,KAAKrD,KAAnB,EAA0B,QAA1B,EAAoC,KAAKgF,OAAzC;;MACA,KAAKA,OAAL;IACH,CAlEyC;;IAoE1C;AACJ;AACA;AACA;AACA;AACA;AACA;IACIjF,MA3E0C,oBA2EjC;MACL,KAAKkF,SAAL,GAAiBjE,CAAC,CAAC,wBAAD,CAAD,CACZkE,QADY,CACH,KAAK9E,GADF,CAAjB;MAGA,KAAKyE,SAAL,GAAiB,IAAjB;;MAEA,KAAKM,cAAL;;MAEA,OAAO,IAAP;IACH,CApFyC;;IAsF1C;AACJ;AACA;IACIA,cAzF0C,4BAyFzB;MACb,IAAI,CAAC,KAAKN,SAAV,EAAqB;QACjB;MACH;;MAED,IAAI,KAAKF,SAAT,EAAoB;QAChB,KAAKM,SAAL,CAAe5E,IAAf,CAAoB,KAAKmE,iBAAL,CAAuB;UACvCY,cAAc;QADyB,CAAvB,CAApB;MAGH,CAJD,MAIO,IAAI,KAAKR,UAAT,EAAqB;QACxB,IAAIS,WAAJ;;QAEA,IAAI,KAAKN,QAAL,CAAchD,MAAd,KAAyB,CAA7B,EAAgC;UAC5BsD,WAAW,oCAAX;QACH,CAFD,MAEO;UACHA,WAAW,GAAGC,WAAW,iDAGZ,KAAKP,QAAL,CAAchD,MAHF,GAIrB,CAAC,KAAKgD,QAAL,CAAchD,MAAf,CAJqB,CAAzB;QAKH;;QAED,KAAKkD,SAAL,CAAe5E,IAAf,CAAoB,KAAKoE,kBAAL,CAAwB;UACxCc,aAAa,iCAD2B;UAExCF,WAAW,EAAEA,WAF2B;UAGxCG,WAAW,oBAH6B;UAIxCC,OAAO,EAAE,KAAKV,QAJ0B;UAKxCW,SAAS,iCAL+B;UAMxCC,yBAAyB,EAAEL,WAAW,+GAElC,CAAC,KAAKtF,KAAL,CAAWd,OAAX,CAAmB0G,oBAApB,CAFkC;QANE,CAAxB,CAApB;MAUH,CAvBM,MAuBA;QACH,KAAKX,SAAL,CAAe5E,IAAf,CAAoB,KAAKqE,cAAL,CAAoB;UACpCmB,SAAS,EAAE,KAAKf,UADoB;UAEpCU,WAAW;QAFyB,CAApB,CAApB;MAIH;IACJ,CA/HyC;;IAiI1C;AACJ;AACA;AACA;AACA;AACA;AACA;IACIM,iBAxI0C,6BAwIxBrC,CAxIwB,EAwIrB;MACjBA,CAAC,CAACC,cAAF;MACAD,CAAC,CAACE,eAAF;;MAEA,KAAKqB,OAAL;IACH,CA7IyC;;IA+I1C;AACJ;AACA;IACIA,OAlJ0C,qBAkJhC;MAAA;;MACN,IAAI,KAAKL,SAAT,EAAoB;QAChB;MACH;;MAED,KAAKA,SAAL,GAAiB,IAAjB;;MACA,KAAKQ,cAAL;;MAEAnE,CAAC,CAACiB,IAAF,CAAO;QACHC,IAAI,EAAE,KADH;QAEHC,GAAG,EAAE,KAAKnC,KAAL,CAAWd,OAAX,CAAmB6G,eAFrB;QAGHzD,OAAO,EAAE,iBAAAC,MAAM,EAAI;UACf,MAAI,CAACwC,QAAL,GAAgBxC,MAAM,CAACyD,KAAP,IAAgB,EAAhC;UACA,MAAI,CAACpB,UAAL,GAAmBrC,MAAM,CAAC0D,KAAP,KAAiB,SAApC;UACA,MAAI,CAACnB,UAAL,GAAkBvC,MAAM,CAACE,KAAP,IAAgB,EAAlC;UACA,MAAI,CAACkC,SAAL,GAAiB,KAAjB;;UACA,MAAI,CAACQ,cAAL;QACH,CATE;QAUH1C,KAAK,EAAE,eAACC,GAAD,EAAMC,UAAN,EAAkBC,WAAlB,EAAkC;UACrCE,OAAO,CAACL,KAAR,CAAc,6BAAd,EAA6CC,GAA7C,EAAkDC,UAAlD,EACcC,WADd;UAEA,MAAI,CAACkC,UAAL;UACA,MAAI,CAACC,QAAL,GAAgB,EAAhB;UACA,MAAI,CAACH,UAAL,GAAkB,KAAlB;UACA,MAAI,CAACD,SAAL,GAAiB,KAAjB;;UACA,MAAI,CAACQ,cAAL;QACH;MAlBE,CAAP;IAoBH;EA9KyC,CAArB,CAAzB;EAkLA;AACA;AACA;;EACA,IAAMe,gBAAgB,GAAGxH,QAAQ,CAACY,IAAT,CAAcV,MAAd,CAAqB;IAC1CY,EAAE,EAAE,kBADsC;IAG1CD,SAAS,EAAE,eAH+B;IAK1CG,YAAY,EAAEC,CAAC,CAACC,QAAF,6YAL4B;IAiB1CC,YAAY,EAAEF,CAAC,CAACC,QAAF,+RAjB4B;;IA0B1C;AACJ;AACA;AACA;AACA;AACA;AACA;IACIG,MAjC0C,oBAiCjC;MACL,IAAMH,QAAQ,GAAGM,EAAE,CAACC,OAAH,GAAa,KAAKT,YAAlB,GAAiC,KAAKG,YAAvD;MAEA,KAAKO,GAAL,CAASC,IAAT,CAAcT,QAAQ,CAAC;QACnBU,SAAS,mBADU;QAEnBC,SAAS,wBAFU;QAGnBC,eAAe,yCAHI;QAInB1B,SAAS,EAAE,KAAKkB,KAAL,CAAWC,GAAX,CAAe,WAAf;MAJQ,CAAD,CAAtB;MAOA,OAAO,IAAP;IACH;EA5CyC,CAArB,CAAzB;EAgDA;AACA;AACA;;EACA,IAAMkG,UAAU,GAAGzH,QAAQ,CAACY,IAAT,CAAcV,MAAd,CAAqB;IACpCa,MAAM,EAAE;MACJ,8BAA8B;IAD1B,CAD4B;IAKpCC,YAAY,wYALwB;IAqBpCG,YAAY,qKArBwB;;IA6BpC;AACJ;AACA;IACIb,UAhCoC,wBAgCvB;MACT,KAAKoH,eAAL,GAAuB,IAAI/G,cAAJ,CAAmB;QACtCW,KAAK,EAAE,KAAKA;MAD0B,CAAnB,CAAvB;MAIA,KAAKqG,iBAAL,GAAyB,IAAIH,gBAAJ,CAAqB;QAC1ClG,KAAK,EAAE,KAAKA;MAD8B,CAArB,CAAzB;IAGH,CAxCmC;;IA0CpC;AACJ;AACA;AACA;AACA;AACA;AACA;IACID,MAjDoC,oBAiD3B;MACL,KAAKqG,eAAL,CAAqBrG,MAArB;;MACA,KAAKsG,iBAAL,CAAuBtG,MAAvB;;MAEA,IAAMH,QAAQ,GAAGM,EAAE,CAACC,OAAH,GAAa,KAAKT,YAAlB,GAAiC,KAAKG,YAAvD;MACA,KAAKO,GAAL,CAASC,IAAT,CAAcT,QAAd;MAEA,KAAK0G,MAAL,GAAc,KAAKtF,CAAL,CAAO,MAAP,CAAd;MAEA,KAAKA,CAAL,CAAO,6BAAP,EACKuF,MADL,CACY,KAAKH,eAAL,CAAqBhG,GADjC,EAEKmG,MAFL,CAEY,KAAKF,iBAAL,CAAuBjG,GAFnC;MAIA,KAAKoG,YAAL,GAAoB,KAAKxF,CAAL,CAAO,sBAAP,EACfyF,GADe,iBAApB;MAGA,OAAO,IAAP;IACH,CAlEmC;;IAoEpC;AACJ;AACA;AACA;AACA;IACIC,cAzEoC,0BAyErBjD,CAzEqB,EAyElB;MAAA;;MACdA,CAAC,CAACC,cAAF;MACAD,CAAC,CAACE,eAAF;;MAEA,KAAK6C,YAAL,CAAkBG,IAAlB,CAAuB,UAAvB,EAAmC,IAAnC;;MAEA,IAAMC,QAAQ,GAAG5F,CAAC,CAAC,uCAAD,CAAD,CACZ6F,YADY,CACC,KAAKL,YADN,CAAjB;MAGAxF,CAAC,CAACiB,IAAF,CAAO;QACHC,IAAI,EAAE,MADH;QAEHC,GAAG,EAAE5D,MAAM,CAACuI,QAAP,CAAgBC,QAFlB;QAGH1E,IAAI,EAAE,KAAKiE,MAAL,CAAYU,SAAZ,EAHH;QAIHjD,QAAQ,EAAE,oBAAM;UACZ,MAAI,CAACyC,YAAL,CAAkBG,IAAlB,CAAuB,UAAvB,EAAmC,KAAnC;;UACAC,QAAQ,CAACK,MAAT;QACH,CAPE;QAQH3E,OAAO,EAAE,iBAAA4E,QAAQ,EAAI;UACjB,IAAIA,QAAQ,CAAC3E,MAAT,KAAoB,SAAxB,EAAmC;YAC/B,IAAI2E,QAAQ,CAACC,UAAb,EAAyB;cACrB,MAAI,CAACnH,KAAL,CAAWoH,GAAX,CAAe,WAAf,EAA4BF,QAAQ,CAACC,UAArC;YACH;;YAED,IAAID,QAAQ,CAACnI,IAAb,EAAmB;cACf,MAAI,CAACiB,KAAL,CAAWoH,GAAX,CAAe,MAAf,EAAuBF,QAAQ,CAACnI,IAAhC;YACH;UACJ,CARD,MAQO,IAAImI,QAAQ,CAAC3E,MAAT,KAAoB,OAAxB,EAAiC;YACpCO,OAAO,CAACL,KAAR,CAAc,yCAAd,EACcyE,QADd;YAEArE,KAAK,CAACqE,QAAQ,CAACzE,KAAV,CAAL;UACH,CAJM,MAIA;YACHK,OAAO,CAACL,KAAR,CAAc,0CACA,kCADd,EAEcyE,QAFd;UAGH;QACJ,CA1BE;QA2BHzE,KAAK,EAAE,eAACC,GAAD,EAAMC,UAAN,EAAkBC,WAAlB,EAAkC;UACrCC,KAAK,CAAC,4CACAD,WADD,CAAL;UAEAE,OAAO,CAACL,KAAR,CAAc,yBAAd,EAAyCC,GAAzC,EAA8CC,UAA9C,EACcC,WADd;QAEH;MAhCE,CAAP;IAkCH;EApHmC,CAArB,CAAnB;EAwHA;AACA;AACA;;EACApE,SAAS,CAAC6I,mBAAV,GAAgC3I,QAAQ,CAACY,IAAT,CAAcV,MAAd,CAAqB;IACjDc,YAAY,EAAEC,CAAC,CAACC,QAAF,sbADmC;IAcjDC,YAAY,EAAEF,CAAC,CAACC,QAAF,0RAdmC;;IAyBjD;AACJ;AACA;AACA;AACA;AACA;AACA;IACIG,MAhCiD,oBAgCxC;MACL,IAAMH,QAAQ,GAAGM,EAAE,CAACC,OAAH,GAAa,KAAKT,YAAlB,GAAiC,KAAKG,YAAvD;MACA,KAAKO,GAAL,CAASC,IAAT,CAAcT,QAAQ,CAAC;QACnB0H,aAAa,iCADM;QAEnBC,UAAU;MAFS,CAAD,CAAtB;MAKA,KAAKC,KAAL,GAAa,IAAIrB,UAAJ,CAAe;QACxBnG,KAAK,EAAE,KAAKA,KADY;QAExByH,EAAE,EAAE,KAAKzG,CAAL,CAAO,6BAAP;MAFoB,CAAf,CAAb;MAIA,KAAK0G,WAAL,GAAmB,IAAInD,gBAAJ,CAAqB;QACpCvE,KAAK,EAAE,KAAKA,KADwB;QAEpCyH,EAAE,EAAE,KAAKzG,CAAL,CAAO,0BAAP;MAFgC,CAArB,CAAnB;;MAKA,KAAKwG,KAAL,CAAWzH,MAAX;;MACA,KAAK2H,WAAL,CAAiB3H,MAAjB;;MAEA,OAAO,IAAP;IACH;EApDgD,CAArB,CAAhC;AAwDC"}